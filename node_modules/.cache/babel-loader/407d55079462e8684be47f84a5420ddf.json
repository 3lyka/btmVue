{"ast":null,"code":"import LotStatus from '@/components/views/trading-session/lot/LotStatus';\nimport LotTradingTime from '@/components/views/trading-session/lot/LotTradingTime';\nexport default {\n  name: 'CalendarMonthDayLot',\n  props: {\n    lot: Object,\n    isLotSelected: Boolean\n  },\n  computed: {\n    getReceipt() {\n      let res = '';\n\n      if (this.lot.status.code === 'receiving' || this.lot.status.code === 'waiting' || this.lot.status.code === 'cancelled') {\n        res = 0;\n      } else {\n        res = this.lot.weightSale;\n      }\n\n      return res + '/' + this.lot.weight;\n    }\n\n  },\n  methods: {\n    openLot: function () {\n      if (this.lot.status.code === 'new') {\n        this.$store.commit('lot/lotFormEdit', this.lot);\n      } else {\n        this.$store.commit('lot/setLot', this.lot);\n        this.$router.push('/arm_trading/lot/' + this.lot.id);\n      }\n    }\n  },\n  components: {\n    LotStatus,\n    LotTradingTime\n  }\n};","map":{"version":3,"mappings":"AA6BA,OAAOA,SAAP,MAAsB,kDAAtB;AACA,OAAOC,cAAP,MAA2B,uDAA3B;AACA,eAAe;EACbC,IAAI,EAAE,qBADO;EAEbC,KAAK,EAAE;IACLC,GAAG,EAAEC,MADA;IAELC,aAAa,EAAEC;EAFV,CAFM;EAMbC,QAAQ,EAAE;IACRC,UAAU,GAAG;MACX,IAAIC,GAAE,GAAI,EAAV;;MAEA,IACE,KAAKN,GAAL,CAASO,MAAT,CAAgBC,IAAhB,KAAyB,WAAzB,IACA,KAAKR,GAAL,CAASO,MAAT,CAAgBC,IAAhB,KAAyB,SADzB,IAEA,KAAKR,GAAL,CAASO,MAAT,CAAgBC,IAAhB,KAAyB,WAH3B,EAIE;QACAF,GAAE,GAAI,CAAN;MACF,CANA,MAMO;QACLA,GAAE,GAAI,KAAKN,GAAL,CAASS,UAAf;MACF;;MAEA,OAAOH,GAAE,GAAI,GAAN,GAAY,KAAKN,GAAL,CAASU,MAA5B;IACD;;EAfO,CANG;EAuBbC,OAAO,EAAE;IACPC,OAAO,EAAE,YAAY;MACnB,IAAI,KAAKZ,GAAL,CAASO,MAAT,CAAgBC,IAAhB,KAAyB,KAA7B,EAAoC;QAClC,KAAKK,MAAL,CAAYC,MAAZ,CAAmB,iBAAnB,EAAsC,KAAKd,GAA3C;MACF,CAFA,MAEO;QACL,KAAKa,MAAL,CAAYC,MAAZ,CAAmB,YAAnB,EAAiC,KAAKd,GAAtC;QACA,KAAKe,OAAL,CAAaC,IAAb,CAAkB,sBAAsB,KAAKhB,GAAL,CAASiB,EAAjD;MACF;IACD;EARM,CAvBI;EAiCbC,UAAU,EAAE;IAAEtB,SAAF;IAAaC;EAAb;AAjCC,CAAf","names":["LotStatus","LotTradingTime","name","props","lot","Object","isLotSelected","Boolean","computed","getReceipt","res","status","code","weightSale","weight","methods","openLot","$store","commit","$router","push","id","components"],"sourceRoot":"","sources":["C:\\openserver\\domains\\U190001472_BitumMap_Vue\\src\\components\\views\\trading-session\\calendar\\CalendarMonthDayLot.vue"],"sourcesContent":["<template>\r\n  <li\r\n    class=\"calendar__month-lot\"\r\n    :class=\"{ 'calendar__month-lot_active': isLotSelected }\"\r\n    @click=\"openLot\"\r\n  >\r\n    <div class=\"calendar__month-lot-left\">\r\n      <div class=\"calendar__month-lot-description\">\r\n        <div class=\"calendar__month-lot-description-name\">\r\n          {{ lot.factory.shortName }}\r\n        </div>\r\n        <div class=\"calendar__month-lot-description-mark\">\r\n          {{ lot.product.shortName }}\r\n        </div>\r\n      </div>\r\n      <div class=\"calendar__month-lot-info-time\">\r\n        <LotTradingTime :dateStart=\"lot.dateStart\" :dateEnd=\"lot.dateEnd\" />\r\n      </div>\r\n    </div>\r\n    <div class=\"calendar__month-lot-right\">\r\n      <div class=\"calendar__month-lot-count-weight\">\r\n        <span>{{ getReceipt }} Ñ‚</span>\r\n      </div>\r\n      <LotStatus :typeStatus=\"'status-icon'\" :status=\"lot.status\" />\r\n    </div>\r\n  </li>\r\n</template>\r\n\r\n<script>\r\nimport LotStatus from '@/components/views/trading-session/lot/LotStatus';\r\nimport LotTradingTime from '@/components/views/trading-session/lot/LotTradingTime';\r\nexport default {\r\n  name: 'CalendarMonthDayLot',\r\n  props: {\r\n    lot: Object,\r\n    isLotSelected: Boolean,\r\n  },\r\n  computed: {\r\n    getReceipt() {\r\n      let res = '';\r\n\r\n      if (\r\n        this.lot.status.code === 'receiving' ||\r\n        this.lot.status.code === 'waiting' ||\r\n        this.lot.status.code === 'cancelled'\r\n      ) {\r\n        res = 0;\r\n      } else {\r\n        res = this.lot.weightSale;\r\n      }\r\n\r\n      return res + '/' + this.lot.weight;\r\n    },\r\n  },\r\n  methods: {\r\n    openLot: function () {\r\n      if (this.lot.status.code === 'new') {\r\n        this.$store.commit('lot/lotFormEdit', this.lot);\r\n      } else {\r\n        this.$store.commit('lot/setLot', this.lot);\r\n        this.$router.push('/arm_trading/lot/' + this.lot.id);\r\n      }\r\n    },\r\n  },\r\n  components: { LotStatus, LotTradingTime },\r\n};\r\n</script>\r\n\r\n<style scoped></style>\r\n"]},"metadata":{},"sourceType":"module"}