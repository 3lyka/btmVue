{"ast":null,"code":"import { defineComponent } from 'vue';\nimport { mapState } from 'vuex';\nimport ToggleMenuIcon from './icons/ToggleMenuIcon.vue';\nexport default defineComponent({\n  name: 'LeftMenu',\n  components: {\n    ToggleMenuIcon\n  },\n  props: ['leftMenuOpen'],\n  emits: ['toggleMenuVisability'],\n  computed: { ...mapState({\n      leftMenu: state => state.menu.leftMenu,\n      bottomMenu: state => state.menu.bottomMenu\n    })\n  },\n  methods: {\n    getIconName(name) {\n      if (name) {\n        return name;\n      } else {\n        return 'default';\n      }\n    },\n\n    getMenu() {\n      this.$store.dispatch('menu/getMenu');\n    }\n\n  },\n\n  mounted() {\n    this.getMenu();\n  }\n\n});","map":{"version":3,"mappings":"AA2DA,SAASA,eAAT,QAAgC,KAAhC;AACA,SAASC,QAAT,QAAyB,MAAzB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AAEA,eAAeF,eAAe,CAAC;EAC7BG,IAAI,EAAE,UADuB;EAE7BC,UAAU,EAAE;IAAEF;EAAF,CAFiB;EAG7BG,KAAK,EAAE,CAAC,cAAD,CAHsB;EAI7BC,KAAK,EAAE,CAAC,sBAAD,CAJsB;EAM7BC,QAAQ,EAAE,EACR,GAAGN,QAAQ,CAAC;MACVO,QAAQ,EAAGC,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWF,QADtB;MAEVG,UAAU,EAAGF,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWC;IAFxB,CAAD;EADH,CANmB;EAY7BC,OAAO,EAAE;IACPC,WAAW,CAACV,IAAD,EAAO;MAChB,IAAIA,IAAJ,EAAU;QACR,OAAOA,IAAP;MACF,CAFA,MAEO;QACL,OAAO,SAAP;MACF;IACD,CAPM;;IAQPW,OAAO,GAAG;MACR,KAAKC,MAAL,CAAYC,QAAZ,CAAqB,cAArB;IACD;;EAVM,CAZoB;;EAwB7BC,OAAO,GAAG;IACR,KAAKH,OAAL;EACD;;AA1B4B,CAAD,CAA9B","names":["defineComponent","mapState","ToggleMenuIcon","name","components","props","emits","computed","leftMenu","state","menu","bottomMenu","methods","getIconName","getMenu","$store","dispatch","mounted"],"sourceRoot":"","sources":["C:\\openserver\\domains\\U190001472_BitumMap_Vue\\src\\components\\components-helpers\\LeftMenu.vue"],"sourcesContent":["<template>\r\n  <nav class=\"menu\" :class=\"{ menu_expanded: leftMenuOpen }\">\r\n    <div class=\"menu__toggle\" @click=\"$emit('toggleMenuVisability')\">\r\n      <p v-if=\"leftMenuOpen\">АРМ Трейдера</p>\r\n      <ToggleMenuIcon\r\n        class=\"menu__toggle-icon\"\r\n        :class=\"{ 'menu__toggle-icon_open': leftMenuOpen }\"\r\n      />\r\n    </div>\r\n    <ul class=\"menu__list\">\r\n      <RouterLink\r\n        v-for=\"item in leftMenu\"\r\n        :key=\"item.ITEM_INDEX\"\r\n        role=\"listitem\"\r\n        class=\"menu__item\"\r\n        active-class=\"menu__item_active\"\r\n        :to=\"item.LINK\"\r\n        v-slot=\"{ isActive }\"\r\n      >\r\n        <div class=\"menu__item-img\">\r\n          <img\r\n            :src=\"\r\n              require(`@/assets/img/menu_icons/${getIconName(\r\n                isActive\r\n                  ? item.PARAMS.ICON_NAME + '-active'\r\n                  : item.PARAMS.ICON_NAME\r\n              )}.svg`)\r\n            \"\r\n          />\r\n        </div>\r\n        <div class=\"menu__item-name\" v-if=\"leftMenuOpen\">\r\n          <p class=\"menu__item-text\">{{ item.TEXT }}</p>\r\n        </div>\r\n      </RouterLink>\r\n    </ul>\r\n    <div class=\"menu__helpdesk\">\r\n      <RouterLink\r\n        v-for=\"item in bottomMenu\"\r\n        :key=\"item.ITEM_INDEX\"\r\n        class=\"menu__feedback menu__helpdesk-item\"\r\n        :to=\"item.LINK\"\r\n        target=\"_blank\"\r\n      >\r\n        <div class=\"menu__feedback-img\">\r\n          <img\r\n            :src=\"\r\n              require(`@/assets/img/menu_icons/${item.PARAMS.ICON_NAME}.svg`)\r\n            \"\r\n          />\r\n        </div>\r\n        <p class=\"menu__feedback-text\" v-if=\"leftMenuOpen\">\r\n          {{ item.TEXT }}\r\n        </p>\r\n      </RouterLink>\r\n    </div>\r\n  </nav>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue';\r\nimport { mapState } from 'vuex';\r\nimport ToggleMenuIcon from './icons/ToggleMenuIcon.vue';\r\n\r\nexport default defineComponent({\r\n  name: 'LeftMenu',\r\n  components: { ToggleMenuIcon },\r\n  props: ['leftMenuOpen'],\r\n  emits: ['toggleMenuVisability'],\r\n\r\n  computed: {\r\n    ...mapState({\r\n      leftMenu: (state) => state.menu.leftMenu,\r\n      bottomMenu: (state) => state.menu.bottomMenu,\r\n    }),\r\n  },\r\n  methods: {\r\n    getIconName(name) {\r\n      if (name) {\r\n        return name;\r\n      } else {\r\n        return 'default';\r\n      }\r\n    },\r\n    getMenu() {\r\n      this.$store.dispatch('menu/getMenu');\r\n    },\r\n  },\r\n  mounted() {\r\n    this.getMenu();\r\n  },\r\n});\r\n</script>\r\n\r\n<style scoped></style>\r\n"]},"metadata":{},"sourceType":"module"}