{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, normalizeClass as _normalizeClass, createVNode as _createVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, withCtx as _withCtx, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  class: \"menu__list\"\n};\nconst _hoisted_3 = {\n  class: \"menu__item-img\"\n};\nconst _hoisted_4 = [\"src\"];\nconst _hoisted_5 = {\n  key: 0,\n  class: \"menu__item-name\"\n};\nconst _hoisted_6 = {\n  class: \"menu__item-text\"\n};\nconst _hoisted_7 = {\n  class: \"menu__helpdesk\"\n};\nconst _hoisted_8 = {\n  class: \"menu__feedback-img\"\n};\nconst _hoisted_9 = [\"src\"];\nconst _hoisted_10 = {\n  key: 0,\n  class: \"menu__feedback-text\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ToggleMenuIcon = _resolveComponent(\"ToggleMenuIcon\");\n\n  const _component_RouterLink = _resolveComponent(\"RouterLink\");\n\n  return _openBlock(), _createElementBlock(\"nav\", {\n    class: _normalizeClass([\"menu\", {\n      menu_expanded: _ctx.leftMenuOpen\n    }])\n  }, [_createElementVNode(\"div\", {\n    class: \"menu__toggle\",\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.$emit('toggleMenuVisability'))\n  }, [_ctx.leftMenuOpen ? (_openBlock(), _createElementBlock(\"p\", _hoisted_1, \"АРМ Трейдера\")) : _createCommentVNode(\"v-if\", true), _createVNode(_component_ToggleMenuIcon, {\n    class: _normalizeClass([\"menu__toggle-icon\", {\n      'menu__toggle-icon_open': _ctx.leftMenuOpen\n    }])\n  }, null, 8\n  /* PROPS */\n  , [\"class\"])]), _createElementVNode(\"ul\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.leftMenu, item => {\n    return _openBlock(), _createBlock(_component_RouterLink, {\n      key: item.ITEM_INDEX,\n      role: \"listitem\",\n      class: \"menu__item\",\n      \"active-class\": \"menu__item_active\",\n      to: item.LINK\n    }, {\n      default: _withCtx(({\n        isActive\n      }) => [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"img\", {\n        src: require(`@/assets/img/menu_icons/${_ctx.getIconName(isActive ? item.PARAMS.ICON_NAME + '-active' : item.PARAMS.ICON_NAME)}.svg`)\n      }, null, 8\n      /* PROPS */\n      , _hoisted_4)]), _ctx.leftMenuOpen ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createElementVNode(\"p\", _hoisted_6, _toDisplayString(item.TEXT), 1\n      /* TEXT */\n      )])) : _createCommentVNode(\"v-if\", true)]),\n      _: 2\n      /* DYNAMIC */\n\n    }, 1032\n    /* PROPS, DYNAMIC_SLOTS */\n    , [\"to\"]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]), _createElementVNode(\"div\", _hoisted_7, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.bottomMenu, item => {\n    return _openBlock(), _createBlock(_component_RouterLink, {\n      key: item.ITEM_INDEX,\n      class: \"menu__feedback menu__helpdesk-item\",\n      to: item.LINK,\n      target: \"_blank\"\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"img\", {\n        src: require(`@/assets/img/menu_icons/${item.PARAMS.ICON_NAME}.svg`)\n      }, null, 8\n      /* PROPS */\n      , _hoisted_9)]), _ctx.leftMenuOpen ? (_openBlock(), _createElementBlock(\"p\", _hoisted_10, _toDisplayString(item.TEXT), 1\n      /* TEXT */\n      )) : _createCommentVNode(\"v-if\", true)]),\n      _: 2\n      /* DYNAMIC */\n\n    }, 1032\n    /* PROPS, DYNAMIC_SLOTS */\n    , [\"to\"]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])], 2\n  /* CLASS */\n  );\n}","map":{"version":3,"mappings":";;;;;EASQA,KAAK,EAAC;;;EAUDA,KAAK,EAAC;;;;;EAWNA,KAAK,EAAC;;;EACNA,KAAK,EAAC;;;EAIVA,KAAK,EAAC;;;EAQFA,KAAK,EAAC;;;;;EAORA,KAAK,EAAC;;;;;;;uBAjDfC,oBAsDM,KAtDN,EAsDM;IAtDDD,KAAK,mBAAC,MAAD,EAAO;MAAAE,eAA0BC;IAA1B,CAAP;EAsDJ,CAtDN,GACEC,oBAMM,KANN,EAMM;IANDJ,KAAK,EAAC,cAML;IANqBK,OAAK,sCAAEF,WAAK,sBAAL,CAAF;EAM1B,CANN,GACWA,mCAATF,oBAAuC,GAAvC,EAAuCK,UAAvC,EAAuB,cAAvB,wCACAC,aAGEC,yBAHF,EAGE;IAFAR,KAAK,mBAAC,mBAAD,EAAoB;MAAA,0BACWG;IADX,CAApB;EAEL,CAHF;;EAAA,aAFF,GAOAC,oBAyBK,IAzBL,cAyBK,oBAxBHH,oBAuBaQ,SAvBb,EAuBa,IAvBb,EAuBaC,YAtBIP,aAsBJ,EAtBJQ,IAAgB,IAAZ;yBADbC,aAuBaC,qBAvBb,EAuBa;MArBVC,GAAG,EAAEH,IAAI,CAACI,UAqBA;MApBXC,IAAI,EAAC,UAoBM;MAnBXhB,KAAK,EAAC,YAmBK;MAlBX,gBAAa,mBAkBF;MAjBViB,EAAE,EAAEN,IAAI,CAACO;IAiBC,CAvBb;wBASE,CAUM;QAZIC;MAYJ,CAVN,KAFkB,CAElBf,oBAUM,KAVN,cAUM,CATJA,oBAQE,KARF,EAQE;QAPCgB,GAAG,EAAkBC,OAAO,4BAA4BlB,iBAA8BgB,QAAQ,GAAsBR,IAAI,CAACW,MAAL,CAAYC,SAAZ,GAAqB,SAA3C,GAA6EZ,IAAI,CAACW,MAAL,CAAYC,SAA/H,OAA5B;MAO7B,CARF;;MAAA,aASI,CAVN,CAFkB,EAaiBpB,mCAAnCF,oBAEM,KAFN,cAEM,CADJG,oBAA8C,GAA9C,cAA8CoB,iBAAhBb,IAAI,CAACc,IAAW,CAA9C,EAAuC;MAAA;MAAvC,CACI,CAFN,sCAbkB;;;;KAPpB;;IAAA;GAuBa,CAvBb;;EAAA,CAwBG,EAzBL,GA0BArB,oBAmBM,KAnBN,cAmBM,oBAlBJH,oBAiBaQ,SAjBb,EAiBa,IAjBb,EAiBaC,YAhBIP,eAgBJ,EAhBJQ,IAAkB,IAAd;yBADbC,aAiBaC,qBAjBb,EAiBa;MAfVC,GAAG,EAAEH,IAAI,CAACI,UAeA;MAdXf,KAAK,EAAC,oCAcK;MAbViB,EAAE,EAAEN,IAAI,CAACO,IAaC;MAZXQ,MAAM,EAAC;IAYI,CAjBb;wBAOE,MAMM,CANNtB,oBAMM,KANN,cAMM,CALJA,oBAIE,KAJF,EAIE;QAHCgB,GAAG,EAAkBC,OAAO,4BAA4BV,IAAI,CAACW,MAAL,CAAYC,SAAS,MAAjD;MAG7B,CAJF;;MAAA,aAKI,CANN,CAMM,EAC+BpB,mCAArCF,oBAEI,GAFJ,eAEIuB,iBADCb,IAAI,CAACc,IACN,CAFJ,EACc;MAAA;MADd,sCADM;;;;KAbR;;IAAA;GAiBa,CAjBb;;EAAA,CAkBI,EAnBN,EAlCF;;EAAA","names":["class","_createElementBlock","menu_expanded","_ctx","_createElementVNode","onClick","_hoisted_1","_createVNode","_component_ToggleMenuIcon","_Fragment","_renderList","item","_createBlock","_component_RouterLink","key","ITEM_INDEX","role","to","LINK","isActive","src","require","PARAMS","ICON_NAME","_toDisplayString","TEXT","target"],"sourceRoot":"","sources":["C:\\openserver\\domains\\U190001472_BitumMap_Vue\\src\\components\\components-helpers\\LeftMenu.vue"],"sourcesContent":["<template>\r\n  <nav class=\"menu\" :class=\"{ menu_expanded: leftMenuOpen }\">\r\n    <div class=\"menu__toggle\" @click=\"$emit('toggleMenuVisability')\">\r\n      <p v-if=\"leftMenuOpen\">АРМ Трейдера</p>\r\n      <ToggleMenuIcon\r\n        class=\"menu__toggle-icon\"\r\n        :class=\"{ 'menu__toggle-icon_open': leftMenuOpen }\"\r\n      />\r\n    </div>\r\n    <ul class=\"menu__list\">\r\n      <RouterLink\r\n        v-for=\"item in leftMenu\"\r\n        :key=\"item.ITEM_INDEX\"\r\n        role=\"listitem\"\r\n        class=\"menu__item\"\r\n        active-class=\"menu__item_active\"\r\n        :to=\"item.LINK\"\r\n        v-slot=\"{ isActive }\"\r\n      >\r\n        <div class=\"menu__item-img\">\r\n          <img\r\n            :src=\"\r\n              require(`@/assets/img/menu_icons/${getIconName(\r\n                isActive\r\n                  ? item.PARAMS.ICON_NAME + '-active'\r\n                  : item.PARAMS.ICON_NAME\r\n              )}.svg`)\r\n            \"\r\n          />\r\n        </div>\r\n        <div class=\"menu__item-name\" v-if=\"leftMenuOpen\">\r\n          <p class=\"menu__item-text\">{{ item.TEXT }}</p>\r\n        </div>\r\n      </RouterLink>\r\n    </ul>\r\n    <div class=\"menu__helpdesk\">\r\n      <RouterLink\r\n        v-for=\"item in bottomMenu\"\r\n        :key=\"item.ITEM_INDEX\"\r\n        class=\"menu__feedback menu__helpdesk-item\"\r\n        :to=\"item.LINK\"\r\n        target=\"_blank\"\r\n      >\r\n        <div class=\"menu__feedback-img\">\r\n          <img\r\n            :src=\"\r\n              require(`@/assets/img/menu_icons/${item.PARAMS.ICON_NAME}.svg`)\r\n            \"\r\n          />\r\n        </div>\r\n        <p class=\"menu__feedback-text\" v-if=\"leftMenuOpen\">\r\n          {{ item.TEXT }}\r\n        </p>\r\n      </RouterLink>\r\n    </div>\r\n  </nav>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue';\r\nimport { mapState } from 'vuex';\r\nimport ToggleMenuIcon from './icons/ToggleMenuIcon.vue';\r\n\r\nexport default defineComponent({\r\n  name: 'LeftMenu',\r\n  components: { ToggleMenuIcon },\r\n  props: ['leftMenuOpen'],\r\n  emits: ['toggleMenuVisability'],\r\n\r\n  computed: {\r\n    ...mapState({\r\n      leftMenu: (state) => state.menu.leftMenu,\r\n      bottomMenu: (state) => state.menu.bottomMenu,\r\n    }),\r\n  },\r\n  methods: {\r\n    getIconName(name) {\r\n      if (name) {\r\n        return name;\r\n      } else {\r\n        return 'default';\r\n      }\r\n    },\r\n    getMenu() {\r\n      this.$store.dispatch('menu/getMenu');\r\n    },\r\n  },\r\n  mounted() {\r\n    this.getMenu();\r\n  },\r\n});\r\n</script>\r\n\r\n<style scoped></style>\r\n"]},"metadata":{},"sourceType":"module"}