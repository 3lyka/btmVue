{"ast":null,"code":"import CalendarMonthDayLot from '@/components/views/trading-session/calendar/CalendarMonthDayLot';\nimport CalendarMonthDayLotAdd from '@/components/views/trading-session/calendar/CalendarMonthDayLotAdd';\nimport { useUserStore } from '@/stores/user';\nimport { mapState } from 'vuex';\nimport { mapState as mapStatePinia } from 'pinia';\nexport default {\n  name: 'CalendarMonthDayLotList',\n  emits: ['clickShowLots'],\n  props: {\n    lotsPerDay: Object,\n    defaultShowLots: Number,\n    day: Object,\n    isShowClose: Boolean\n  },\n  data: () => ({\n    isShowLots: false\n  }),\n  watch: {\n    isShowClose(newVal) {\n      if (!newVal) {\n        this.setCalendarModalBoundries({\n          isReset: true\n        });\n      }\n    }\n\n  },\n  computed: { ...mapState({\n      selectedLotId: state => state.lot.lot.id\n    }),\n    ...mapStatePinia(useUserStore, ['isTrader', 'isUmiop']),\n\n    isShowedMore() {\n      return this.lotsPerDay.length > this.defaultShowLots && (!this.isShowLots || !this.isShowClose);\n    }\n\n  },\n  methods: {\n    showLots() {\n      this.isShowLots = true;\n      this.$emit('clickShowLots');\n      this.$nextTick(() => {\n        this.setCalendarModalBoundries();\n      });\n    },\n\n    isDatesMatch(dateA, dateB) {\n      if (!(dateA instanceof Date)) {\n        dateA = new Date(dateA);\n      }\n\n      if (!(dateB instanceof Date)) {\n        dateB = new Date(dateB);\n      }\n\n      return dateA.toLocaleDateString() === dateB.toLocaleDateString();\n    },\n\n    isFutureDay(date) {\n      const today = new Date();\n      return today < date;\n    },\n\n    /** Не дает пересекаться модальным окнам, таким образом, что они видимы при открытии, а не уходят за пределы календаря. */\n    setCalendarModalBoundries(options) {\n      if (!this.calendarEl || !this.modalEl) {\n        // todo: получение элементов через refs.\n        this.calendarEl = document.querySelector('.calendar__month-table');\n        this.modalEl = document.querySelector('.calendar__month-item-wrapper_modal');\n      }\n\n      if (!this.calendarEl || !this.modalEl) return;\n\n      if (options?.isReset) {\n        return this.modalEl.style.transform = `translate(${0}px, ${0}px)`;\n      }\n\n      const calendarRect = this.calendarEl.getBoundingClientRect();\n      const modalRect = this.modalEl.getBoundingClientRect();\n      let translateX = 0;\n      let translateY = 0; // на пересечение left\n\n      if (modalRect.left < calendarRect.left) {\n        translateX = calendarRect.left - modalRect.left;\n      } // на пересечение top\n\n\n      if (modalRect.top < calendarRect.top) {\n        translateY = 16;\n      } // на пересечение right\n\n\n      if (modalRect.right > calendarRect.right) {\n        translateX = calendarRect.right - modalRect.right;\n      } // на пересечение bottom;\n\n\n      if (modalRect.bottom > calendarRect.bottom) {\n        translateY = -(modalRect.height - 165);\n      }\n\n      this.modalEl.style.transform = `translate(${translateX}px, ${translateY}px)`;\n    }\n\n  },\n  components: {\n    CalendarMonthDayLotAdd,\n    CalendarMonthDayLot\n  }\n};","map":{"version":3,"mappings":"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","names":["CalendarMonthDayLot","CalendarMonthDayLotAdd","useUserStore","mapState","mapStatePinia","name","emits","props","lotsPerDay","Object","defaultShowLots","Number","day","isShowClose","Boolean","data","isShowLots","watch","newVal","setCalendarModalBoundries","isReset","computed","selectedLotId","state","lot","id","isShowedMore","length","methods","showLots","$emit","$nextTick","isDatesMatch","dateA","dateB","Date","toLocaleDateString","isFutureDay","date","today","options","calendarEl","modalEl","document","querySelector","style","transform","calendarRect","getBoundingClientRect","modalRect","translateX","translateY","left","top","right","bottom","height","components"],"sourceRoot":"","sources":["C:\\openserver\\domains\\U190001472_BitumMap_Vue\\src\\components\\views\\trading-session\\calendar\\CalendarMonthDayLotList.vue"],"sourcesContent":["<template>\r\n  <ul class=\"calendar__month-item-list\">\r\n    <CalendarMonthDayLot\r\n      v-for=\"(lot, i) in lotsPerDay\"\r\n      :key=\"lot.id\"\r\n      v-show=\"i < defaultShowLots || (isShowLots && isShowClose)\"\r\n      :lot=\"lot\"\r\n      :isLotSelected=\"selectedLotId === lot.id\"\r\n    />\r\n  </ul>\r\n  <!-- скрываем, если модальное окно со всеми слотами открыто -->\r\n  <div class=\"calendar__month-item-footer\" v-if=\"!isShowClose\">\r\n    <div\r\n      @click=\"showLots\"\r\n      v-if=\"isShowedMore\"\r\n      class=\"calendar__month-next-button\"\r\n    >\r\n      Ещё +{{ lotsPerDay.length - defaultShowLots }}\r\n      <svg\r\n        width=\"16\"\r\n        height=\"16\"\r\n        viewBox=\"0 0 16 16\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <path\r\n          d=\"M14 5L8 11L2 5\"\r\n          stroke=\"#0089FF\"\r\n          stroke-miterlimit=\"10\"\r\n          stroke-linecap=\"round\"\r\n          stroke-linejoin=\"round\"\r\n        />\r\n      </svg>\r\n    </div>\r\n    <CalendarMonthDayLotAdd\r\n      :day=\"day.date\"\r\n      v-if=\"(isFutureDay(day.date) || day.current) && isTrader\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport CalendarMonthDayLot from '@/components/views/trading-session/calendar/CalendarMonthDayLot';\r\nimport CalendarMonthDayLotAdd from '@/components/views/trading-session/calendar/CalendarMonthDayLotAdd';\r\nimport { useUserStore } from '@/stores/user';\r\nimport { mapState } from 'vuex';\r\nimport { mapState as mapStatePinia } from 'pinia';\r\n\r\nexport default {\r\n  name: 'CalendarMonthDayLotList',\r\n  emits: ['clickShowLots'],\r\n  props: {\r\n    lotsPerDay: Object,\r\n    defaultShowLots: Number,\r\n    day: Object,\r\n    isShowClose: Boolean,\r\n  },\r\n  data: () => ({\r\n    isShowLots: false,\r\n  }),\r\n\r\n  watch: {\r\n    isShowClose(newVal) {\r\n      if (!newVal) {\r\n        this.setCalendarModalBoundries({ isReset: true });\r\n      }\r\n    },\r\n  },\r\n\r\n  computed: {\r\n    ...mapState({\r\n      selectedLotId: (state) => state.lot.lot.id,\r\n    }),\r\n    ...mapStatePinia(useUserStore, ['isTrader', 'isUmiop']),\r\n\r\n    isShowedMore() {\r\n      return (\r\n        this.lotsPerDay.length > this.defaultShowLots &&\r\n        (!this.isShowLots || !this.isShowClose)\r\n      );\r\n    },\r\n  },\r\n  methods: {\r\n    showLots() {\r\n      this.isShowLots = true;\r\n      this.$emit('clickShowLots');\r\n\r\n      this.$nextTick(() => {\r\n        this.setCalendarModalBoundries();\r\n      });\r\n    },\r\n    isDatesMatch(dateA, dateB) {\r\n      if (!(dateA instanceof Date)) {\r\n        dateA = new Date(dateA);\r\n      }\r\n      if (!(dateB instanceof Date)) {\r\n        dateB = new Date(dateB);\r\n      }\r\n\r\n      return dateA.toLocaleDateString() === dateB.toLocaleDateString();\r\n    },\r\n    isFutureDay(date) {\r\n      const today = new Date();\r\n\r\n      return today < date;\r\n    },\r\n\r\n    /** Не дает пересекаться модальным окнам, таким образом, что они видимы при открытии, а не уходят за пределы календаря. */\r\n    setCalendarModalBoundries(options) {\r\n      if (!this.calendarEl || !this.modalEl) {\r\n        // todo: получение элементов через refs.\r\n        this.calendarEl = document.querySelector('.calendar__month-table');\r\n        this.modalEl = document.querySelector(\r\n          '.calendar__month-item-wrapper_modal'\r\n        );\r\n      }\r\n\r\n      if (!this.calendarEl || !this.modalEl) return;\r\n\r\n      if (options?.isReset) {\r\n        return (this.modalEl.style.transform = `translate(${0}px, ${0}px)`);\r\n      }\r\n\r\n      const calendarRect = this.calendarEl.getBoundingClientRect();\r\n      const modalRect = this.modalEl.getBoundingClientRect();\r\n\r\n      let translateX = 0;\r\n      let translateY = 0;\r\n\r\n      // на пересечение left\r\n      if (modalRect.left < calendarRect.left) {\r\n        translateX = calendarRect.left - modalRect.left;\r\n      }\r\n\r\n      // на пересечение top\r\n      if (modalRect.top < calendarRect.top) {\r\n        translateY = 16;\r\n      }\r\n\r\n      // на пересечение right\r\n      if (modalRect.right > calendarRect.right) {\r\n        translateX = calendarRect.right - modalRect.right;\r\n      }\r\n\r\n      // на пересечение bottom;\r\n      if (modalRect.bottom > calendarRect.bottom) {\r\n        translateY = -(modalRect.height - 165);\r\n      }\r\n\r\n      this.modalEl.style.transform = `translate(${translateX}px, ${translateY}px)`;\r\n    },\r\n  },\r\n  components: { CalendarMonthDayLotAdd, CalendarMonthDayLot },\r\n};\r\n</script>\r\n\r\n<style scoped></style>\r\n"]},"metadata":{},"sourceType":"module"}