{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, createCommentVNode as _createCommentVNode, createStaticVNode as _createStaticVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"regions\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createStaticVNode(\"<div class=\\\"regions__title\\\"><div class=\\\"regions__title-item\\\"><h4 class=\\\"lot-form__item-box-subtitle\\\">Регион</h4></div><div class=\\\"regions__title-item\\\"><h4 class=\\\"lot-form__item-box-subtitle\\\"> Минимальная цена за тонну (без доставки) </h4></div></div>\", 1);\n\nconst _hoisted_3 = {\n  key: 0,\n  class: \"lot-form__item-box\"\n};\nconst _hoisted_4 = {\n  class: \"region-add\"\n};\n\nconst _hoisted_5 = /*#__PURE__*/_createTextVNode(\" Добавить регион \");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_CalendarLotFormAddRegionsItem = _resolveComponent(\"CalendarLotFormAddRegionsItem\");\n\n  const _component_PlusIcon = _resolveComponent(\"PlusIcon\");\n\n  const _component_ElButton = _resolveComponent(\"ElButton\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.arRegions, (regionItem, index) => {\n    return _openBlock(), _createBlock(_component_CalendarLotFormAddRegionsItem, {\n      key: index,\n      index: index,\n      region: regionItem,\n      availableRegions: $options.availableRegions,\n      regionList: $props.regionListResponse,\n      minNomenclaturePrice: $props.minNomenclaturePrice,\n      onOnChangeRegions: $options.onChangeRegions,\n      onRemoveItem: $options.removeItem\n    }, null, 8, [\"index\", \"region\", \"availableRegions\", \"regionList\", \"minNomenclaturePrice\", \"onOnChangeRegions\", \"onRemoveItem\"]);\n  }), 128)), !_ctx.isUmiop ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_ElButton, {\n    onClick: $options.addItem,\n    class: \"region-add__button\",\n    disabled: $options.isAddItemDisabled,\n    type: \"primary\",\n    text: \"\"\n  }, {\n    default: _withCtx(() => [_hoisted_5, _createVNode(_component_PlusIcon, {\n      class: \"region-add__button-icon\"\n    })]),\n    _: 1\n  }, 8, [\"onClick\", \"disabled\"])])])) : _createCommentVNode(\"\", true)]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;;;;;;;EAsBYA,KAAK,EAAC;;;EACpBA,KAAK,EAAC;;;iDAOR;;;;;;;;;uBA9BPC,oBAoCM,KApCN,cAoCM,CAnCJC,UAmCI,qBAzBJD,oBAUEE,SAVF,EAUE,IAVF,EAUEC,YAT8BC,cAS9B,EATuC,CAA/BC,UAA+B,EAAnBC,KAAmB,KAAd;yBAD3BC,aAUEC,wCAVF,EAUE;MARCC,GAAG,EAAEH,KAQN;MAPCA,KAAK,EAAEA,KAOR;MANCI,MAAM,EAAEL,UAMT;MALCM,gBAAgB,EAAEC,yBAKnB;MAJCC,UAAU,EAAEC,yBAIb;MAHCC,oBAAoB,EAAED,2BAGvB;MAFCE,iBAAe,EAAEJ,wBAElB;MADCK,YAAU,EAAEL;IACb,CAVF;GAUE,CAVF,MAyBI,IAdQR,8BAAZJ,oBAaM,KAbN,cAaM,CAZJkB,oBAWM,KAXN,cAWM,CAVJC,aASWC,mBATX,EASW;IARRC,OAAK,EAAET,gBAQC;IAPTb,KAAK,EAAC,oBAOG;IANRuB,QAAQ,EAAEV,0BAMF;IALTW,IAAI,EAAC,SAKI;IAJTC,IAAI,EAAJ;EAIS,CATX;sBAMC,MAEC,0BAA4CC,mBAA5C,EAA4C;MAAlC1B,KAAK,EAAC;IAA4B,CAA5C;;GARF,6BAUI,CAXN,CAYI,CAbN,kCAcI,CApCN","names":["class","_createElementBlock","_hoisted_2","_Fragment","_renderList","_ctx","regionItem","index","_createBlock","_component_CalendarLotFormAddRegionsItem","key","region","availableRegions","$options","regionList","$props","minNomenclaturePrice","onOnChangeRegions","onRemoveItem","_createElementVNode","_createVNode","_component_ElButton","onClick","disabled","type","text","_component_PlusIcon"],"sourceRoot":"","sources":["C:\\openserver\\domains\\U190001472_BitumMap_Vue\\src\\components\\views\\trading-session\\calendar\\CalendarLotFormAddRegions.vue"],"sourcesContent":["<template>\r\n  <div class=\"regions\">\r\n    <div class=\"regions__title\">\r\n      <div class=\"regions__title-item\">\r\n        <h4 class=\"lot-form__item-box-subtitle\">Регион</h4>\r\n      </div>\r\n      <div class=\"regions__title-item\">\r\n        <h4 class=\"lot-form__item-box-subtitle\">\r\n          Минимальная цена за тонну (без доставки)\r\n        </h4>\r\n      </div>\r\n    </div>\r\n    <CalendarLotFormAddRegionsItem\r\n      v-for=\"(regionItem, index) in arRegions\"\r\n      :key=\"index\"\r\n      :index=\"index\"\r\n      :region=\"regionItem\"\r\n      :availableRegions=\"availableRegions\"\r\n      :regionList=\"regionListResponse\"\r\n      :minNomenclaturePrice=\"minNomenclaturePrice\"\r\n      @onChangeRegions=\"onChangeRegions\"\r\n      @removeItem=\"removeItem\"\r\n    />\r\n    <div v-if=\"!isUmiop\" class=\"lot-form__item-box\">\r\n      <div class=\"region-add\">\r\n        <ElButton\r\n          @click=\"addItem\"\r\n          class=\"region-add__button\"\r\n          :disabled=\"isAddItemDisabled\"\r\n          type=\"primary\"\r\n          text\r\n        >\r\n          Добавить регион\r\n          <PlusIcon class=\"region-add__button-icon\" />\r\n        </ElButton>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport CalendarLotFormAddRegionsItem from '@/components/views/trading-session/calendar/CalendarLotFormAddRegionsItem';\r\nimport PlusIcon from '@/components/components-helpers/icons/PlusIcon.vue';\r\nimport { useUserStore } from '@/stores/user';\r\nimport { mapState as mapStatePinia } from 'pinia';\r\n\r\nexport default {\r\n  name: 'CalendarLotFormAddRegions',\r\n  props: ['regionListResponse', 'minNomenclaturePrice', 'currentRegions'],\r\n  emits: ['onSelectRegions', 'onChangeRegions'],\r\n  data: () => ({\r\n    arRegionsItem: [{}],\r\n    selectedRegions: [],\r\n    arRegions: [],\r\n  }),\r\n  watch: {\r\n    currentRegions: {\r\n      handler(newRegions) {\r\n        if (this.arRegions.length) return;\r\n\r\n        const regions = newRegions?.map((region) => {\r\n          if (!region?.regionIds)\r\n            return { ...region, priceMin: region.priceMin };\r\n\r\n          // приводим regionIds к формату который принимает ElSelect (string[])\r\n          return {\r\n            priceMin: region.priceMin,\r\n            regionIds: region.regionIds.map((value) => value?.id),\r\n          };\r\n        });\r\n\r\n        // убираем регионы у которых не выбраны регионы\r\n        this.arRegions = regions?.filter((region) => region?.regionIds);\r\n\r\n        if (!this.arRegions?.length) {\r\n          this.arRegions = [{}];\r\n        }\r\n      },\r\n      immediate: true,\r\n    },\r\n  },\r\n  computed: {\r\n    ...mapStatePinia(useUserStore, ['isTrader', 'isUmiop']),\r\n    availableRegions() {\r\n      // создаем array с ids [\"1\", \"4\", \"3\"]\r\n      const selectedRegionsAll = this.arRegions\r\n        .map((region) => region?.regionIds)\r\n        .flat();\r\n      // убираем дубликаты и через фильтр убирает undefined\r\n      const selectedRegions = [...new Set(selectedRegionsAll)].filter(\r\n        (value) => value\r\n      );\r\n\r\n      const isAllRegionsSelected = selectedRegions.includes('all');\r\n\r\n      if (isAllRegionsSelected) {\r\n        // если выбраны все регионы, то новые регионы нельзя выбирать.\r\n        return [];\r\n      }\r\n\r\n      if (selectedRegions.length) {\r\n        // убираем из выбора 'Все регионы' и если один из регионов выбран, убраем его для последущего выбора.\r\n        return this.regionListResponse.filter((region) => {\r\n          if (region.ID === 'all') return false;\r\n          if (!selectedRegions.includes(region.ID)) return true;\r\n        });\r\n      }\r\n\r\n      return this.regionListResponse;\r\n    },\r\n\r\n    isAddItemDisabled() {\r\n      // если уже выбраны все возможные регионы, то 'disabled'\r\n      // или выбранные значения включают 'all', то 'disabled',\r\n      // или не выбраны никакие значения то также 'disabled'.\r\n      return (\r\n        !this.availableRegions?.length ||\r\n        this.arRegions?.some(\r\n          (region) =>\r\n            region?.regionIds?.includes('all') || !region?.regionIds?.length\r\n        )\r\n      );\r\n    },\r\n  },\r\n  methods: {\r\n    onChangeRegions(selectRegions, removedRegions, data) {\r\n      const { index, ...rest } = data;\r\n      this.arRegions[index] = rest;\r\n\r\n      this.$emit('onChangeRegions', this.arRegions);\r\n    },\r\n    addItem() {\r\n      this.arRegions.push({});\r\n    },\r\n    removeItem(itemIndex) {\r\n      if (this.arRegions.length > 1) this.arRegions.splice(itemIndex, 1);\r\n      else {\r\n        this.arRegions = [{}];\r\n      }\r\n    },\r\n  },\r\n  components: { CalendarLotFormAddRegionsItem, PlusIcon },\r\n};\r\n</script>\r\n\r\n<style scoped></style>\r\n"]},"metadata":{},"sourceType":"module"}