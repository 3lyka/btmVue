{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"calendar\"\n};\nconst _hoisted_2 = {\n  class: \"calendar__title\"\n};\nconst _hoisted_3 = {\n  class: \"calendar__title-left\"\n};\nconst _hoisted_4 = {\n  class: \"calendar__title-right\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_CalendarPagination = _resolveComponent(\"CalendarPagination\");\n\n  const _component_SubHeader = _resolveComponent(\"SubHeader\");\n\n  const _component_CalendarTab = _resolveComponent(\"CalendarTab\");\n\n  const _component_ElAffix = _resolveComponent(\"ElAffix\");\n\n  const _component_CalendarWeek = _resolveComponent(\"CalendarWeek\");\n\n  const _component_CalendarMonth = _resolveComponent(\"CalendarMonth\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_ElAffix, {\n    \"z-index\": 1,\n    offset: 60\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_CalendarPagination, {\n      onClickLast: $options.decrease,\n      onClickNext: $options.increase,\n      activeTab: _ctx.activeTab,\n      monthKey: _ctx.monthKey,\n      year: _ctx.year,\n      months: _ctx.months,\n      calendar: $options.calendar,\n      numberWeek: _ctx.numberWeek\n    }, null, 8, [\"onClickLast\", \"onClickNext\", \"activeTab\", \"monthKey\", \"year\", \"months\", \"calendar\", \"numberWeek\"])]), _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_SubHeader, {\n      class: \"calendar__title-subheader\"\n    }), _createVNode(_component_CalendarTab, {\n      onTab: $options.onTab,\n      activeTab: _ctx.activeTab\n    }, null, 8, [\"onTab\", \"activeTab\"])])])]),\n    _: 1\n  }), _ctx.activeTab === 'week' ? (_openBlock(), _createBlock(_component_CalendarWeek, {\n    key: 0,\n    lots: _ctx.lots,\n    monthKey: _ctx.monthKey,\n    year: _ctx.year,\n    daysWeek: _ctx.daysWeek,\n    months: _ctx.months,\n    date: _ctx.date,\n    calendar: $options.calendar,\n    numberWeek: _ctx.numberWeek\n  }, null, 8, [\"lots\", \"monthKey\", \"year\", \"daysWeek\", \"months\", \"date\", \"calendar\", \"numberWeek\"])) : _ctx.activeTab === 'month' ? (_openBlock(), _createBlock(_component_CalendarMonth, {\n    key: 1,\n    ref: \"calendarMonth\",\n    lots: _ctx.lots,\n    monthKey: _ctx.monthKey,\n    year: _ctx.year,\n    daysWeek: _ctx.daysWeek,\n    months: _ctx.months,\n    date: _ctx.date,\n    calendar: $options.calendar\n  }, null, 8, [\"lots\", \"monthKey\", \"year\", \"daysWeek\", \"months\", \"date\", \"calendar\"])) : _createCommentVNode(\"\", true)]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;;;EAEFA,KAAK,EAAC;;;EACJA,KAAK,EAAC;;;EAYNA,KAAK,EAAC;;;;;;;;;;;;;;;uBAfjBC,oBA4CM,KA5CN,cA4CM,CA3CJC,aAmBUC,kBAnBV,EAmBU;IAnBA,WAAS,CAmBT;IAnBaC,MAAM,EAAE;EAmBrB,CAnBV;sBACE,MAiBM,CAjBNC,oBAiBM,KAjBN,cAiBM,CAhBJA,oBAWM,KAXN,cAWM,CAVJH,aASEI,6BATF,EASE;MARCC,WAAS,EAAEC,iBAQZ;MAPCC,WAAS,EAAED,iBAOZ;MANCE,SAAS,EAAEC,cAMZ;MALCC,QAAQ,EAAED,aAKX;MAJCE,IAAI,EAAEF,SAIP;MAHCG,MAAM,EAAEH,WAGT;MAFCI,QAAQ,EAAEP,iBAEX;MADCQ,UAAU,EAAEL;IACb,CATF,+GAUI,CAXN,CAgBI,EAJJN,oBAGM,KAHN,cAGM,CAFJH,aAA+Ce,oBAA/C,EAA+C;MAApCjB,KAAK,EAAC;IAA8B,CAA/C,CAEI,EADJE,aAAqDgB,sBAArD,EAAqD;MAAvCC,KAAK,EAAEX,cAAgC;MAAxBE,SAAS,EAAEC;IAAa,CAArD,kCACI,CAHN,CAII,CAjBN,CAiBM;;GAlBR,CA2CI,EAtBIA,mBAAS,wBADjBS,aAUEC,uBAVF,EAUE;UAAA;IARCC,IAAI,EAAEX,SAQP;IAPCC,QAAQ,EAAED,aAOX;IANCE,IAAI,EAAEF,SAMP;IALCY,QAAQ,EAAEZ,aAKX;IAJCG,MAAM,EAAEH,WAIT;IAHCa,IAAI,EAAEb,SAGP;IAFCI,QAAQ,EAAEP,iBAEX;IADCQ,UAAU,EAAEL;EACb,CAVF,oGAYaA,mBAAS,yBADtBS,aAUEK,wBAVF,EAUE;UAAA;IARAC,GAAG,EAAC,eAQJ;IAPCJ,IAAI,EAAEX,SAOP;IANCC,QAAQ,EAAED,aAMX;IALCE,IAAI,EAAEF,SAKP;IAJCY,QAAQ,EAAEZ,aAIX;IAHCG,MAAM,EAAEH,WAGT;IAFCa,IAAI,EAAEb,SAEP;IADCI,QAAQ,EAAEP;EACX,CAVF,mHAYI,CA5CN","names":["class","_createElementBlock","_createVNode","_component_ElAffix","offset","_createElementVNode","_component_CalendarPagination","onClickLast","$options","onClickNext","activeTab","_ctx","monthKey","year","months","calendar","numberWeek","_component_SubHeader","_component_CalendarTab","onTab","_createBlock","_component_CalendarWeek","lots","daysWeek","date","_component_CalendarMonth","ref"],"sourceRoot":"","sources":["C:\\openserver\\domains\\U190001472_BitumMap_Vue\\src\\components\\views\\trading-session\\calendar\\Calendar.vue"],"sourcesContent":["<template>\r\n  <div class=\"calendar\">\r\n    <ElAffix :z-index=\"1\" :offset=\"60\">\r\n      <div class=\"calendar__title\">\r\n        <div class=\"calendar__title-left\">\r\n          <CalendarPagination\r\n            @clickLast=\"decrease\"\r\n            @clickNext=\"increase\"\r\n            :activeTab=\"activeTab\"\r\n            :monthKey=\"monthKey\"\r\n            :year=\"year\"\r\n            :months=\"months\"\r\n            :calendar=\"calendar\"\r\n            :numberWeek=\"numberWeek\"\r\n          />\r\n        </div>\r\n        <div class=\"calendar__title-right\">\r\n          <SubHeader class=\"calendar__title-subheader\" />\r\n          <CalendarTab :onTab=\"onTab\" :activeTab=\"activeTab\" />\r\n        </div>\r\n      </div>\r\n    </ElAffix>\r\n    <CalendarWeek\r\n      v-if=\"activeTab === 'week'\"\r\n      :lots=\"lots\"\r\n      :monthKey=\"monthKey\"\r\n      :year=\"year\"\r\n      :daysWeek=\"daysWeek\"\r\n      :months=\"months\"\r\n      :date=\"date\"\r\n      :calendar=\"calendar\"\r\n      :numberWeek=\"numberWeek\"\r\n    />\r\n    <CalendarMonth\r\n      v-else-if=\"activeTab === 'month'\"\r\n      ref=\"calendarMonth\"\r\n      :lots=\"lots\"\r\n      :monthKey=\"monthKey\"\r\n      :year=\"year\"\r\n      :daysWeek=\"daysWeek\"\r\n      :months=\"months\"\r\n      :date=\"date\"\r\n      :calendar=\"calendar\"\r\n    />\r\n    <!-- <CalendarDay v-else-if=\"activeTab === 'day'\" /> -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// import CalendarDay from \"@/components/views/trading-session/calendar/CalendarDay\";\r\nimport CalendarWeek from '@/components/views/trading-session/calendar/CalendarWeek';\r\nimport CalendarMonth from '@/components/views/trading-session/calendar/CalendarMonth';\r\nimport CalendarTab from '@/components/views/trading-session/calendar/CalendarTab';\r\nimport CalendarPagination from '@/components/views/trading-session/calendar/CalendarPagination';\r\nimport { mapState } from 'vuex';\r\nimport SubHeader from '../../../components-helpers/SubHeader.vue';\r\nimport { useInterval } from '@/composables/useInterval';\r\nimport { getCurrentInstance } from 'vue';\r\n\r\nexport default {\r\n  name: 'Calendar',\r\n\r\n  data: () => ({\r\n    activeTab: 'week',\r\n    monthKey: new Date().getMonth(),\r\n    year: new Date().getFullYear(),\r\n    dFirstMonth: '1',\r\n    daysWeek: ['Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб', 'Вс'],\r\n    months: [\r\n      'Январь',\r\n      'Февраль',\r\n      'Март',\r\n      'Апрель',\r\n      'Май',\r\n      'Июнь',\r\n      'Июль',\r\n      'Август',\r\n      'Сентябрь',\r\n      'Октябрь',\r\n      'Ноябрь',\r\n      'Декабрь',\r\n    ],\r\n    date: new Date(),\r\n    numberWeek: 0,\r\n  }),\r\n\r\n  setup() {\r\n    const { ctx } = getCurrentInstance();\r\n\r\n    // делаем запрос на обновление данных, раз в 1 минуту.\r\n    useInterval(() => ctx.getLots(), 60000);\r\n  },\r\n  mounted() {\r\n    this.getActiveTabFromLocalStorage();\r\n\r\n    // При переходе в лот с по клику с календаря возращаем на дату, с которой переходили.\r\n    // В случае при переходе по прямой ссылке, возращаемся в календарь на текущую дату.\r\n    const toCurrentDate = this.$route.params.toCurrentDate === 'true';\r\n    if (toCurrentDate) {\r\n      localStorage.removeItem('numberWeek');\r\n      localStorage.removeItem('monthKey');\r\n      localStorage.removeItem('year');\r\n\r\n      localStorage.removeItem('activeTab'); // возращаем на недельный вид.\r\n      this.activeTab = 'week'; // возращаем на недельный вид.\r\n    }\r\n\r\n    if (this.activeTab === 'week') {\r\n      this.setDefaultWeek();\r\n    } else {\r\n      this.setDefaultMonth();\r\n    }\r\n\r\n    this.getLots();\r\n\r\n    this.$store.subscribe((mutations) => {\r\n      if (mutations.type === 'lot/lotFormSuccess') {\r\n        this.getLots();\r\n      }\r\n    });\r\n  },\r\n  watch: {\r\n    monthKey: {\r\n      handler() {\r\n        this.getLots();\r\n      },\r\n    },\r\n  },\r\n  computed: {\r\n    ...mapState({\r\n      lots: (state) => state.lot.lots,\r\n    }),\r\n    calendar: function () {\r\n      const days = [[]];\r\n      let week = 0;\r\n      let lastDay = new Date(this.year, this.monthKey + 1, 0).getDate();\r\n\r\n      for (let i = 1; i <= lastDay; i++) {\r\n        if (new Date(this.year, this.monthKey, i).getDay() === 1) {\r\n          week++;\r\n          days[week] = [];\r\n        }\r\n\r\n        const date = new Date(this.year, this.monthKey, i);\r\n\r\n        days[week].push({\r\n          number: i,\r\n          monthKey: this.monthKey,\r\n          date,\r\n          current: this.isToday(date),\r\n        });\r\n      }\r\n\r\n      if (days[0].length > 0) {\r\n        lastDay = new Date(this.year, this.monthKey, 0).getDate();\r\n        const firstMonth = 0;\r\n        let previousMonth = this.monthKey - 1;\r\n        let previousYear = this.year;\r\n        if (this.monthKey === firstMonth) {\r\n          previousMonth = 11;\r\n          previousYear = this.year - 1;\r\n        }\r\n        for (let i = days[0].length; i < 7; i++) {\r\n          const date = new Date(previousYear, previousMonth, lastDay);\r\n          days[0].unshift({\r\n            number: lastDay,\r\n            monthKey: previousMonth,\r\n            current: this.isToday(date),\r\n            date: date,\r\n          });\r\n          lastDay--;\r\n        }\r\n      }\r\n\r\n      if (days[days.length - 1].length <= 6) {\r\n        let dayFirst = 1;\r\n        const lastMonth = 11;\r\n        let nextMonth = this.monthKey + 1;\r\n        let nextYear = this.year;\r\n\r\n        if (this.monthKey === lastMonth) {\r\n          nextMonth = 0;\r\n          nextYear = this.year + 1;\r\n        }\r\n\r\n        for (let i = days[days.length - 1].length; i < 7; i++) {\r\n          const date = new Date(nextYear, nextMonth, dayFirst);\r\n          days[days.length - 1].push({\r\n            number: dayFirst,\r\n            monthKey: nextMonth,\r\n            current: this.isToday(date),\r\n            date: date,\r\n          });\r\n          dayFirst++;\r\n        }\r\n      }\r\n\r\n      if (days[0].length === 0) {\r\n        days.splice(0, 1);\r\n      }\r\n\r\n      if (this.$data.activeTab === 'week') {\r\n        return days;\r\n      } else {\r\n        return [].concat(...days);\r\n      }\r\n    },\r\n  },\r\n  methods: {\r\n    clickCloseLots() {\r\n      this.$refs?.calendarMonth?.clickCloseLots();\r\n    },\r\n\r\n    getLots() {\r\n      const dateStart =\r\n          this.$data.activeTab === 'week'\r\n            ? this.calendar.at(0).at(0).date\r\n            : this.calendar.at(0).date,\r\n        dateEnd =\r\n          this.$data.activeTab === 'week'\r\n            ? this.calendar.at(-1).at(-1).date\r\n            : this.calendar.at(-1).date;\r\n\r\n      this.$store.dispatch('lot/getListByMounts', {\r\n        dateStart: dateStart.toLocaleDateString('ru-RU'),\r\n        dateEnd: dateEnd.toLocaleDateString('ru-RU'),\r\n      });\r\n    },\r\n\r\n    onTab(data) {\r\n      this.activeTab = data.code;\r\n      this.setActiveTabToLocalStorage();\r\n    },\r\n    setActiveTabToLocalStorage() {\r\n      //try catch\r\n      localStorage.setItem('activeTab', this.activeTab);\r\n    },\r\n    getActiveTabFromLocalStorage() {\r\n      this.activeTab = localStorage.getItem('activeTab')\r\n        ? localStorage.getItem('activeTab')\r\n        : 'week';\r\n    },\r\n    decrease() {\r\n      this.clickCloseLots();\r\n\r\n      if (this.activeTab === 'week') {\r\n        if (this.monthKey === 0 && this.numberWeek === 0) {\r\n          const day = this.calendar[0].find(({ date }) => date.getDate() === 1);\r\n          const dayOffset = day.date.getDay() > 1 ? 2 : 1;\r\n          this.year--;\r\n          this.numberWeek = this.calendar.length - dayOffset;\r\n          this.monthKey = 11;\r\n        } else if (this.numberWeek === 0) {\r\n          const day = this.calendar[0].find(({ date }) => date.getDate() === 1);\r\n          const dayOffset = day.date.getDay() !== 1 ? 2 : 1;\r\n          this.numberWeek = this.calendar.length - dayOffset;\r\n          this.monthKey--;\r\n        } else {\r\n          this.numberWeek--;\r\n        }\r\n      } else {\r\n        this.monthKey--;\r\n        if (this.monthKey < 0) {\r\n          this.monthKey = 12;\r\n          this.monthKey--;\r\n          this.year--;\r\n        }\r\n      }\r\n      this.setDataToLocalStorage();\r\n    },\r\n    setDefaultWeek() {\r\n      let defaultWeek = 0;\r\n\r\n      this.calendar.forEach(function (week, i) {\r\n        if (week.find((day) => day.current === true)) {\r\n          defaultWeek = i;\r\n        }\r\n      });\r\n\r\n      this.numberWeek = localStorage.getItem('numberWeek')\r\n        ? parseInt(localStorage.getItem('numberWeek'))\r\n        : defaultWeek;\r\n      this.monthKey = localStorage.getItem('monthKey')\r\n        ? parseInt(localStorage.getItem('monthKey'))\r\n        : this.monthKey;\r\n      this.year = localStorage.getItem('year')\r\n        ? parseInt(localStorage.getItem('year'))\r\n        : this.year;\r\n    },\r\n\r\n    setDefaultMonth() {\r\n      this.monthKey = localStorage.getItem('monthKey')\r\n        ? parseInt(localStorage.getItem('monthKey'))\r\n        : this.monthKey;\r\n    },\r\n    increase() {\r\n      this.clickCloseLots();\r\n\r\n      if (this.activeTab === 'week') {\r\n        if (this.numberWeek < this.calendar.length - 1) {\r\n          this.numberWeek++;\r\n        } else {\r\n          const day = this.calendar[this.calendar.length - 1].find(\r\n            ({ date }) => date.getDate() === 1\r\n          );\r\n          this.numberWeek = day ? 1 : 0;\r\n          this.monthKey++;\r\n          const lastMonth = 11;\r\n          if (this.monthKey > lastMonth) {\r\n            this.monthKey = 0;\r\n            this.year++;\r\n          }\r\n        }\r\n      } else {\r\n        this.monthKey++;\r\n        if (this.monthKey > 11) {\r\n          this.monthKey = -1;\r\n          this.monthKey++;\r\n          this.year++;\r\n        }\r\n      }\r\n      this.setDataToLocalStorage();\r\n    },\r\n    isToday(date) {\r\n      const today = new Date();\r\n\r\n      return (\r\n        date.getDate() === today.getDate() &&\r\n        date.getFullYear() === today.getFullYear() &&\r\n        date.getMonth() === today.getMonth()\r\n      );\r\n    },\r\n    setDataToLocalStorage() {\r\n      localStorage.setItem('monthKey', this.monthKey);\r\n      localStorage.setItem('numberWeek', this.numberWeek);\r\n      localStorage.setItem('year', this.year);\r\n    },\r\n  },\r\n  components: {\r\n    CalendarTab,\r\n    CalendarPagination,\r\n    CalendarMonth,\r\n    CalendarWeek,\r\n    SubHeader,\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped></style>\r\n"]},"metadata":{},"sourceType":"module"}