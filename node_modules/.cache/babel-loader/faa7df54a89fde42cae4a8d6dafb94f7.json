{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, normalizeClass as _normalizeClass, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"confirm-distribution\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ElButton = _resolveComponent(\"ElButton\");\n\n  return $options.showFooter && _ctx.offerList?.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [this.offerList.length ? (_openBlock(), _createBlock(_component_ElButton, {\n    key: 0,\n    onClick: _cache[0] || (_cache[0] = $event => $options.onSubmit()),\n    class: _normalizeClass([\"confirm-distribution__button\", $options.isDisableButton ? 'confirm-distribution__button_disable' : '']),\n    disabled: $options.isDisableButton,\n    loading: $data.isSubmitting,\n    size: \"large\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString($options.buttonText), 1\n    /* TEXT */\n    )]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"class\", \"disabled\", \"loading\"])) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"mappings":";;;EAC8CA,KAAK,EAAC;;;;;SAAvCC,uBAAcC,gBAAWC,wBAApCC,oBAYM,KAZN,cAYM,MAVSC,UAAUF,wBADvBG,aAUWC,mBAVX,EAUW;UAAA;IARRC,OAAK,sCAAEP,mBAAF,CAQG;IAPTD,KAAK,mBAAC,8BAAD,EACGC,2BAAe,sCAAf,GAAe,EADlB,EAOI;IALRQ,QAAQ,EAAER,wBAKF;IAJRS,OAAO,EAAEC,kBAID;IAHTC,IAAI,EAAC;EAGI,CAVX;sBASE,MAAgB,mCAAbX,sBAAU;IAAA;KAAG;;;;GATlB;;EAAA,wEAWI,CAZN","names":["class","$options","_ctx","length","_createElementBlock","offerList","_createBlock","_component_ElButton","onClick","disabled","loading","$data","size"],"sourceRoot":"","sources":["C:\\openserver\\domains\\U190001472_BitumMap_Vue\\src\\components\\layouts\\main\\footer\\ConfirmDescription.vue"],"sourcesContent":["<template>\r\n  <div v-if=\"showFooter && offerList?.length\" class=\"confirm-distribution\">\r\n    <ElButton\r\n      v-if=\"this.offerList.length\"\r\n      @click=\"onSubmit()\"\r\n      class=\"confirm-distribution__button\"\r\n      :class=\"isDisableButton ? 'confirm-distribution__button_disable' : ''\"\r\n      :disabled=\"isDisableButton\"\r\n      :loading=\"isSubmitting\"\r\n      size=\"large\"\r\n    >\r\n      {{ buttonText }}\r\n    </ElButton>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState as mapStatePinia } from 'pinia';\r\nimport { useUserStore } from '@/stores/user';\r\nimport { mapGetters, mapState, mapActions } from 'vuex';\r\n\r\nexport default {\r\n  name: 'ConfirmDescription',\r\n  data() {\r\n    return {\r\n      isSubmitting: false,\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapStatePinia(useUserStore, ['isTrader', 'isUmiop']),\r\n    ...mapGetters({\r\n      offerList: 'offer/offerListWithEdited',\r\n    }),\r\n    ...mapState({\r\n      lot: (state) => state.lot.lot,\r\n      umiop: (state) => state.offer.umiop,\r\n      // offerList: state => state.offer.offerList,\r\n    }),\r\n    isDisableButton() {\r\n      const offersConfirmOrCancelledUmiop = this.offerList.filter(\r\n        (offer) =>\r\n          offer.status.code === 'umiop_done' ||\r\n          offer.status.code === 'umiop_cancelled'\r\n      );\r\n      if (\r\n        (this.umiop.showUmiop && this.isTrader) ||\r\n        (this.lot.status.code === 'umiop_check' && this.isTrader) ||\r\n        (this.lot.status.code === 'processing' && this.isUmiop) ||\r\n        this.lot.status.code === 'receiving' ||\r\n        this.lot.status.code === 'waiting' ||\r\n        (offersConfirmOrCancelledUmiop.length > 0 && this.isUmiop)\r\n      ) {\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    },\r\n    buttonText() {\r\n      if (this.isUmiop) {\r\n        return 'Согласовать распределение';\r\n      } else {\r\n        return 'Подтвердить распределение';\r\n      }\r\n    },\r\n    isReceivingStatusLot() {\r\n      return this.lot.status.code === 'receiving';\r\n    },\r\n    isWaitingStatusLot() {\r\n      return this.lot.status.code === 'waiting';\r\n    },\r\n    isCompletedStatusLot() {\r\n      return this.lot.status.code === 'completed';\r\n    },\r\n    isCancelledStatusLot() {\r\n      return this.lot.status.code === 'cancelled';\r\n    },\r\n    showFooter() {\r\n      if (\r\n        this.isCompletedStatusLot ||\r\n        this.isCancelledStatusLot ||\r\n        this.isReceivingStatusLot ||\r\n        this.isWaitingStatusLot\r\n      ) {\r\n        return false;\r\n      }\r\n      return true;\r\n    },\r\n  },\r\n  methods: {\r\n    ...mapActions('offer', ['resetEditedOffers']),\r\n    onSubmit() {\r\n      this.resetEditedOffers();\r\n\r\n      this.isSubmitting = true;\r\n\r\n      if (this.isTrader) {\r\n        this.confirmDescriptionByTrader();\r\n      } else if (this.isUmiop) {\r\n        this.confirmDescriptionByUmiop();\r\n      }\r\n\r\n      setTimeout(() => {\r\n        this.$store.dispatch('lot/getById', { id: this.lot.id });\r\n        this.$store.dispatch('offer/getListByLotId', this.lot.id);\r\n\r\n        this.isSubmitting = false;\r\n      }, 1000);\r\n\r\n      this.resetEditedOffers();\r\n    },\r\n    confirmDescriptionByTrader() {\r\n      this.$store.dispatch('lot/confirmDescriptionByTrader', this.lot.id);\r\n      this.$store.dispatch('offer/confirmDescriptionByTrader', this.offerList);\r\n    },\r\n    confirmDescriptionByUmiop() {\r\n      this.$store.dispatch('offer/confirmDescriptionByUmiop', this.lot.id); // Edited offers is first, because \"isUmiopEdited\" maybe set\r\n      this.$store.dispatch('lot/confirmDescriptionByUmiop', this.lot.id);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped></style>\r\n"]},"metadata":{},"sourceType":"module"}