{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, createBlock as _createBlock, createTextVNode as _createTextVNode, mergeProps as _mergeProps } from \"vue\";\nconst _hoisted_1 = {\n  class: \"aside\"\n};\nconst _hoisted_2 = {\n  class: \"lot-form__header\"\n};\nconst _hoisted_3 = {\n  class: \"lot-form__header-title\"\n};\nconst _hoisted_4 = {\n  class: \"lot-form__content\"\n};\n\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"h3\", {\n  class: \"lot-form__title\"\n}, \"Даты\", -1\n/* HOISTED */\n);\n\nconst _hoisted_6 = {\n  key: 0,\n  class: \"lot-form__item\"\n};\nconst _hoisted_7 = {\n  class: \"lot-form__item-box\"\n};\n\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"h4\", {\n  class: \"lot-form__item-box-subtitle\"\n}, \"Торги\", -1\n/* HOISTED */\n);\n\nconst _hoisted_9 = {\n  class: \"period-interval\"\n};\nconst _hoisted_10 = {\n  class: \"lot-form__item-box\"\n};\n\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"h4\", {\n  class: \"lot-form__item-box-subtitle\"\n}, \"Отгрузка\", -1\n/* HOISTED */\n);\n\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"h3\", {\n  class: \"lot-form__title\"\n}, \"Продукт\", -1\n/* HOISTED */\n);\n\nconst _hoisted_13 = {\n  class: \"lot-form__item\"\n};\nconst _hoisted_14 = {\n  class: \"lot-form__item-box\"\n};\n\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"h4\", {\n  class: \"lot-form__item-box-subtitle\"\n}, \"Базис отгрузки\", -1\n/* HOISTED */\n);\n\nconst _hoisted_16 = {\n  class: \"basis\"\n};\nconst _hoisted_17 = {\n  class: \"lot-form__item-box\"\n};\n\nconst _hoisted_18 = /*#__PURE__*/_createElementVNode(\"h4\", {\n  class: \"lot-form__item-box-subtitle\"\n}, \"Номенклатура\", -1\n/* HOISTED */\n);\n\nconst _hoisted_19 = {\n  class: \"mark-bm\"\n};\nconst _hoisted_20 = {\n  class: \"lot-form__item\"\n};\nconst _hoisted_21 = {\n  class: \"lot-form__item-box\"\n};\n\nconst _hoisted_22 = /*#__PURE__*/_createElementVNode(\"h4\", {\n  class: \"lot-form__item-box-subtitle\"\n}, \"Объем, т\", -1\n/* HOISTED */\n);\n\nconst _hoisted_23 = {\n  class: \"prepend\"\n};\nconst _hoisted_24 = {\n  key: 0,\n  class: \"lot-form__item-box lot-form__multiplicity\"\n};\nconst _hoisted_25 = {\n  class: \"lot-form__item-box-subtitle\"\n};\n\nconst _hoisted_26 = /*#__PURE__*/_createTextVNode(\" Кратность \");\n\nconst _hoisted_27 = /*#__PURE__*/_createElementVNode(\"h3\", {\n  class: \"lot-form__title\"\n}, \"Регион продаж\", -1\n/* HOISTED */\n);\n\nconst _hoisted_28 = {\n  class: \"lot-form__item\"\n};\nconst _hoisted_29 = {\n  class: \"comment-form\"\n};\n\nconst _hoisted_30 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"lot-form__item-box-subtitle\"\n}, [/*#__PURE__*/_createElementVNode(\"h4\", {\n  class: \"lot-form__item-box-subtitle\"\n}, \"Комментарий для КА\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_31 = {\n  class: \"lot-form__footer\"\n};\nconst _hoisted_32 = {\n  class: \"lot-form__submit\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_IconClose = _resolveComponent(\"IconClose\");\n\n  const _component_ElButton = _resolveComponent(\"ElButton\");\n\n  const _component_ElDatePicker = _resolveComponent(\"ElDatePicker\");\n\n  const _component_ElFormItem = _resolveComponent(\"ElFormItem\");\n\n  const _component_TimeRangeSelect = _resolveComponent(\"TimeRangeSelect\");\n\n  const _component_ElOption = _resolveComponent(\"ElOption\");\n\n  const _component_ElSelect = _resolveComponent(\"ElSelect\");\n\n  const _component_ElInputNumber = _resolveComponent(\"ElInputNumber\");\n\n  const _component_CalendarLotFormAddRegions = _resolveComponent(\"CalendarLotFormAddRegions\");\n\n  const _component_ElInput = _resolveComponent(\"ElInput\");\n\n  const _component_ConfirmModal = _resolveComponent(\"ConfirmModal\");\n\n  const _component_ElForm = _resolveComponent(\"ElForm\");\n\n  return _openBlock(), _createElementBlock(\"aside\", _hoisted_1, [_createVNode(_component_ElForm, {\n    model: _ctx.ruleForm,\n    rules: _ctx.rules,\n    ref: \"ruleForm\",\n    class: \"lot-form\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"p\", _hoisted_3, _toDisplayString($options.lotTitle), 1\n    /* TEXT */\n    ), _createVNode(_component_ElButton, {\n      class: \"lot-form__header-close\",\n      text: \"\",\n      onClick: $options.closeFormWithConfirm\n    }, {\n      default: _withCtx(() => [_createVNode(_component_IconClose)]),\n      _: 1\n      /* STABLE */\n\n    }, 8\n    /* PROPS */\n    , [\"onClick\"])]), _createElementVNode(\"div\", _hoisted_4, [_hoisted_5, $props.isCalendarLotFormOpen ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [_hoisted_8, _createElementVNode(\"div\", _hoisted_9, [_createVNode(_component_ElFormItem, {\n      prop: \"dateStart\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_ElDatePicker, {\n        type: \"date\",\n        class: \"period-interval__item\",\n        \"prefix-icon\": $options.customCalendarPrefix,\n        format: \"DD.MM.YYYY\",\n        modelValue: _ctx.ruleForm.dateStart,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.ruleForm.dateStart = $event),\n        \"disabled-date\": $options.disabledDate,\n        placement: \"top-start\",\n        disabled: _ctx.isUmiop,\n        onChange: $options.setIsRuleFormEdited\n      }, null, 8\n      /* PROPS */\n      , [\"prefix-icon\", \"modelValue\", \"disabled-date\", \"disabled\", \"onChange\"])]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_ElFormItem, {\n      prop: \"timeInterval\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_TimeRangeSelect, {\n        class: \"period-interval__item\",\n        modelValue: _ctx.ruleForm.timeInterval,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.ruleForm.timeInterval = $event),\n        disabled: _ctx.isUmiop,\n        onChange: $options.setIsRuleFormEdited\n      }, null, 8\n      /* PROPS */\n      , [\"modelValue\", \"disabled\", \"onChange\"])]),\n      _: 1\n      /* STABLE */\n\n    })])]), _createElementVNode(\"div\", _hoisted_10, [_hoisted_11, _createVNode(_component_ElFormItem, {\n      prop: \"shippingDate\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_ElDatePicker, {\n        class: \"period-interval__item\",\n        \"prefix-icon\": $options.customCalendarPrefix,\n        format: \"DD.MM.YYYY\",\n        modelValue: _ctx.ruleForm.shippingDate,\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.ruleForm.shippingDate = $event),\n        \"disabled-date\": $options.disabledShippingDate,\n        disabled: _ctx.isUmiop,\n        onChange: $options.setIsRuleFormEdited\n      }, null, 8\n      /* PROPS */\n      , [\"prefix-icon\", \"modelValue\", \"disabled-date\", \"disabled\", \"onChange\"])]),\n      _: 1\n      /* STABLE */\n\n    })])])) : _createCommentVNode(\"v-if\", true), _hoisted_12, _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"div\", _hoisted_14, [_hoisted_15, _createElementVNode(\"div\", _hoisted_16, [_createVNode(_component_ElFormItem, {\n      prop: \"factoryId\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_ElSelect, {\n        class: \"basis__select\",\n        modelValue: _ctx.ruleForm.factoryId,\n        \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.ruleForm.factoryId = $event),\n        onChange: _cache[4] || (_cache[4] = $event => $options.setFactory($event)),\n        disabled: _ctx.lot.isSaleButtonClicked || _ctx.lot.lot.isResold || _ctx.isUmiop\n      }, {\n        default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.factoryList, factory => {\n          return _openBlock(), _createBlock(_component_ElOption, {\n            key: factory.ID,\n            label: factory.SHORT_NAME || factory.NAME,\n            value: factory.ID\n          }, null, 8\n          /* PROPS */\n          , [\"label\", \"value\"]);\n        }), 128\n        /* KEYED_FRAGMENT */\n        ))]),\n        _: 1\n        /* STABLE */\n\n      }, 8\n      /* PROPS */\n      , [\"modelValue\", \"disabled\"])]),\n      _: 1\n      /* STABLE */\n\n    })])]), _createElementVNode(\"div\", _hoisted_17, [_hoisted_18, _createElementVNode(\"div\", _hoisted_19, [_createVNode(_component_ElFormItem, {\n      prop: \"productId\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_ElSelect, {\n        class: \"mark-bm__select\",\n        modelValue: _ctx.ruleForm.productId,\n        \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => _ctx.ruleForm.productId = $event),\n        filterable: \"\",\n        change: $options.getProductListByFactoryId(this.ruleForm.factoryId),\n        disabled: _ctx.lot.isSaleButtonClicked || _ctx.lot.lot.isResold || _ctx.isUmiop\n      }, {\n        default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.productsList, product => {\n          return _openBlock(), _createBlock(_component_ElOption, {\n            key: product.ID,\n            label: product.SHORT_NAME || product.SHORT_NAME,\n            value: product.ID\n          }, null, 8\n          /* PROPS */\n          , [\"label\", \"value\"]);\n        }), 128\n        /* KEYED_FRAGMENT */\n        ))]),\n        _: 1\n        /* STABLE */\n\n      }, 8\n      /* PROPS */\n      , [\"modelValue\", \"change\", \"disabled\"])]),\n      _: 1\n      /* STABLE */\n\n    })])])]), _createElementVNode(\"div\", _hoisted_20, [_createElementVNode(\"div\", _hoisted_21, [_hoisted_22, _createElementVNode(\"div\", _hoisted_23, [_createVNode(_component_ElFormItem, {\n      prop: \"weight\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_ElInputNumber, {\n        type: \"number\",\n        class: \"prepend__select\",\n        modelValue: _ctx.ruleForm.weight,\n        \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => _ctx.ruleForm.weight = $event),\n        modelModifiers: {\n          number: true\n        },\n        min: 0,\n        max: 999999,\n        step: _ctx.ruleForm.multiplicity,\n        \"step-strictly\": \"\",\n        disabled: $options.disabledWeight(_ctx.ruleForm.factoryId) || _ctx.isUmiop,\n        onChange: $options.setIsRuleFormEdited\n      }, null, 8\n      /* PROPS */\n      , [\"modelValue\", \"step\", \"disabled\", \"onChange\"])]),\n      _: 1\n      /* STABLE */\n\n    })])]), _ctx.ruleForm.factoryId ? (_openBlock(), _createElementBlock(\"div\", _hoisted_24, [_createElementVNode(\"h4\", _hoisted_25, [_hoisted_26, _createElementVNode(\"label\", null, _toDisplayString(_ctx.ruleForm.multiplicity) + \" т\", 1\n    /* TEXT */\n    )])])) : _createCommentVNode(\"v-if\", true)]), _hoisted_27, _createElementVNode(\"div\", _hoisted_28, [(_openBlock(), _createBlock(_component_CalendarLotFormAddRegions, {\n      key: _ctx.resetFormKey,\n      regionListResponse: _ctx.regionListResponse,\n      minNomenclaturePrice: this.ruleForm.minNomenclaturePrice,\n      currentRegions: this.ruleForm.regions,\n      onOnChangeRegions: $options.onChangeRegions\n    }, null, 8\n    /* PROPS */\n    , [\"regionListResponse\", \"minNomenclaturePrice\", \"currentRegions\", \"onOnChangeRegions\"]))]), _createElementVNode(\"div\", _hoisted_29, [_hoisted_30, _createVNode(_component_ElFormItem, null, {\n      default: _withCtx(() => [_createVNode(_component_ElInput, {\n        modelValue: _ctx.ruleForm.comment,\n        \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => _ctx.ruleForm.comment = $event),\n        type: \"textarea\",\n        rows: 3,\n        placeholder: \"Введите данные...\",\n        disabled: _ctx.isUmiop,\n        onChange: $options.setIsRuleFormEdited\n      }, null, 8\n      /* PROPS */\n      , [\"modelValue\", \"disabled\", \"onChange\"])]),\n      _: 1\n      /* STABLE */\n\n    })])]), _createElementVNode(\"div\", _hoisted_31, [_createElementVNode(\"div\", _hoisted_32, [_createVNode(_component_ElButton, {\n      type: \"primary\",\n      onClick: _cache[8] || (_cache[8] = $event => $options.onSubmit('ruleForm')),\n      class: \"lot-form__submit-button\",\n      disabled: $options.isDisable || _ctx.isUmiop\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.button.submit.text), 1\n      /* TEXT */\n      )]),\n      _: 1\n      /* STABLE */\n\n    }, 8\n    /* PROPS */\n    , [\"disabled\"]), _createVNode(_component_ElButton, {\n      class: \"lot-form__submit-button-close\",\n      onClick: $options.clickClose,\n      disabled: _ctx.isUmiop\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.button.close.text), 1\n      /* TEXT */\n      )]),\n      _: 1\n      /* STABLE */\n\n    }, 8\n    /* PROPS */\n    , [\"onClick\", \"disabled\"])])]), _createVNode(_component_ConfirmModal, _mergeProps({\n      modelValue: _ctx.confirmModal.isVisible,\n      \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => _ctx.confirmModal.isVisible = $event)\n    }, _ctx.confirmModal.text, {\n      onHandleAction: $options.handleConfirmAction,\n      ref: \"confirmModal\"\n    }), null, 16\n    /* FULL_PROPS */\n    , [\"modelValue\", \"onHandleAction\"])]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"model\", \"rules\"])]);\n}","map":{"version":3,"mappings":"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","names":["class","_createElementVNode","_createElementBlock","_createVNode","_component_ElForm","model","_ctx","rules","ref","_toDisplayString","$options","_component_ElButton","text","onClick","_component_IconClose","_hoisted_5","$props","_hoisted_8","_component_ElFormItem","prop","_component_ElDatePicker","type","format","dateStart","$event","placement","disabled","onChange","_component_TimeRangeSelect","timeInterval","_hoisted_11","shippingDate","_hoisted_12","_hoisted_15","_component_ElSelect","factoryId","isSaleButtonClicked","lot","isResold","_Fragment","_renderList","factory","_createBlock","_component_ElOption","key","ID","label","SHORT_NAME","NAME","value","_hoisted_18","productId","filterable","change","ruleForm","product","_hoisted_22","_component_ElInputNumber","weight","number","min","max","step","multiplicity","_hoisted_27","_component_CalendarLotFormAddRegions","regionListResponse","minNomenclaturePrice","currentRegions","regions","onOnChangeRegions","_hoisted_30","_component_ElInput","comment","rows","placeholder","submit","close","_component_ConfirmModal","isVisible","onHandleAction"],"sourceRoot":"","sources":["C:\\openserver\\domains\\U190001472_BitumMap_Vue\\src\\components\\views\\trading-session\\calendar\\CalendarLotForm.vue"],"sourcesContent":["<template>\r\n  <aside class=\"aside\">\r\n    <ElForm :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleForm\" class=\"lot-form\">\r\n      <div class=\"lot-form__header\">\r\n        <p class=\"lot-form__header-title\">\r\n          {{ lotTitle }}\r\n        </p>\r\n        <ElButton\r\n          class=\"lot-form__header-close\"\r\n          text\r\n          @click=\"closeFormWithConfirm\"\r\n        >\r\n          <IconClose />\r\n        </ElButton>\r\n      </div>\r\n      <div class=\"lot-form__content\">\r\n        <h3 class=\"lot-form__title\">Даты</h3>\r\n        <div class=\"lot-form__item\" v-if=\"isCalendarLotFormOpen\">\r\n          <div class=\"lot-form__item-box\">\r\n            <h4 class=\"lot-form__item-box-subtitle\">Торги</h4>\r\n            <div class=\"period-interval\">\r\n              <ElFormItem prop=\"dateStart\">\r\n                <ElDatePicker\r\n                  type=\"date\"\r\n                  class=\"period-interval__item\"\r\n                  :prefix-icon=\"customCalendarPrefix\"\r\n                  format=\"DD.MM.YYYY\"\r\n                  v-model=\"ruleForm.dateStart\"\r\n                  :disabled-date=\"disabledDate\"\r\n                  placement=\"top-start\"\r\n                  :disabled=\"isUmiop\"\r\n                  @change=\"setIsRuleFormEdited\"\r\n                />\r\n              </ElFormItem>\r\n              <ElFormItem prop=\"timeInterval\">\r\n                <TimeRangeSelect\r\n                  class=\"period-interval__item\"\r\n                  v-model=\"ruleForm.timeInterval\"\r\n                  :disabled=\"isUmiop\"\r\n                  @change=\"setIsRuleFormEdited\"\r\n                />\r\n              </ElFormItem>\r\n            </div>\r\n          </div>\r\n          <div class=\"lot-form__item-box\">\r\n            <h4 class=\"lot-form__item-box-subtitle\">Отгрузка</h4>\r\n            <ElFormItem prop=\"shippingDate\">\r\n              <ElDatePicker\r\n                class=\"period-interval__item\"\r\n                :prefix-icon=\"customCalendarPrefix\"\r\n                format=\"DD.MM.YYYY\"\r\n                v-model=\"ruleForm.shippingDate\"\r\n                :disabled-date=\"disabledShippingDate\"\r\n                :disabled=\"isUmiop\"\r\n                @change=\"setIsRuleFormEdited\"\r\n              />\r\n            </ElFormItem>\r\n          </div>\r\n        </div>\r\n        <h3 class=\"lot-form__title\">Продукт</h3>\r\n        <div class=\"lot-form__item\">\r\n          <div class=\"lot-form__item-box\">\r\n            <h4 class=\"lot-form__item-box-subtitle\">Базис отгрузки</h4>\r\n            <div class=\"basis\">\r\n              <ElFormItem prop=\"factoryId\">\r\n                <ElSelect\r\n                  class=\"basis__select\"\r\n                  v-model=\"ruleForm.factoryId\"\r\n                  @change=\"setFactory($event)\"\r\n                  :disabled=\"\r\n                    lot.isSaleButtonClicked || lot.lot.isResold || isUmiop\r\n                  \"\r\n                >\r\n                  <ElOption\r\n                    v-for=\"factory in factoryList\"\r\n                    :key=\"factory.ID\"\r\n                    :label=\"factory.SHORT_NAME || factory.NAME\"\r\n                    :value=\"factory.ID\"\r\n                  />\r\n                </ElSelect>\r\n              </ElFormItem>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"lot-form__item-box\">\r\n            <h4 class=\"lot-form__item-box-subtitle\">Номенклатура</h4>\r\n            <div class=\"mark-bm\">\r\n              <ElFormItem prop=\"productId\">\r\n                <ElSelect\r\n                  class=\"mark-bm__select\"\r\n                  v-model=\"ruleForm.productId\"\r\n                  filterable\r\n                  :change=\"getProductListByFactoryId(this.ruleForm.factoryId)\"\r\n                  :disabled=\"\r\n                    lot.isSaleButtonClicked || lot.lot.isResold || isUmiop\r\n                  \"\r\n                >\r\n                  <ElOption\r\n                    v-for=\"product in productsList\"\r\n                    :key=\"product.ID\"\r\n                    :label=\"product.SHORT_NAME || product.SHORT_NAME\"\r\n                    :value=\"product.ID\"\r\n                  />\r\n                </ElSelect>\r\n              </ElFormItem>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"lot-form__item\">\r\n          <div class=\"lot-form__item-box\">\r\n            <h4 class=\"lot-form__item-box-subtitle\">Объем, т</h4>\r\n            <div class=\"prepend\">\r\n              <ElFormItem prop=\"weight\">\r\n                <ElInputNumber\r\n                  type=\"number\"\r\n                  class=\"prepend__select\"\r\n                  v-model.number=\"ruleForm.weight\"\r\n                  :min=\"0\"\r\n                  :max=\"999999\"\r\n                  :step=\"ruleForm.multiplicity\"\r\n                  step-strictly\r\n                  :disabled=\"disabledWeight(ruleForm.factoryId) || isUmiop\"\r\n                  @change=\"setIsRuleFormEdited\"\r\n                />\r\n              </ElFormItem>\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            v-if=\"ruleForm.factoryId\"\r\n            class=\"lot-form__item-box lot-form__multiplicity\"\r\n          >\r\n            <h4 class=\"lot-form__item-box-subtitle\">\r\n              Кратность <label>{{ ruleForm.multiplicity }} т</label>\r\n            </h4>\r\n          </div>\r\n        </div>\r\n        <h3 class=\"lot-form__title\">Регион продаж</h3>\r\n        <div class=\"lot-form__item\">\r\n          <CalendarLotFormAddRegions\r\n            :key=\"resetFormKey\"\r\n            :regionListResponse=\"regionListResponse\"\r\n            :minNomenclaturePrice=\"this.ruleForm.minNomenclaturePrice\"\r\n            :currentRegions=\"this.ruleForm.regions\"\r\n            @onChangeRegions=\"onChangeRegions\"\r\n          />\r\n        </div>\r\n        <div class=\"comment-form\">\r\n          <div class=\"lot-form__item-box-subtitle\">\r\n            <h4 class=\"lot-form__item-box-subtitle\">Комментарий для КА</h4>\r\n          </div>\r\n          <ElFormItem>\r\n            <ElInput\r\n              v-model=\"ruleForm.comment\"\r\n              type=\"textarea\"\r\n              :rows=\"3\"\r\n              placeholder=\"Введите данные...\"\r\n              :disabled=\"isUmiop\"\r\n              @change=\"setIsRuleFormEdited\"\r\n            />\r\n          </ElFormItem>\r\n        </div>\r\n      </div>\r\n      <div class=\"lot-form__footer\">\r\n        <div class=\"lot-form__submit\">\r\n          <ElButton\r\n            type=\"primary\"\r\n            @click=\"onSubmit('ruleForm')\"\r\n            class=\"lot-form__submit-button\"\r\n            :disabled=\"isDisable || isUmiop\"\r\n          >\r\n            {{ button.submit.text }}\r\n          </ElButton>\r\n          <ElButton\r\n            class=\"lot-form__submit-button-close\"\r\n            @click=\"clickClose\"\r\n            :disabled=\"isUmiop\"\r\n          >\r\n            {{ button.close.text }}\r\n          </ElButton>\r\n        </div>\r\n      </div>\r\n\r\n      <ConfirmModal\r\n        v-model=\"confirmModal.isVisible\"\r\n        v-bind=\"confirmModal.text\"\r\n        @handleAction=\"handleConfirmAction\"\r\n        ref=\"confirmModal\"\r\n      />\r\n    </ElForm>\r\n  </aside>\r\n</template>\r\n\r\n<script>\r\nimport TimerIcon from '@/components/components-helpers/TimerIcon';\r\nimport CalendarIcon from '@/components/components-helpers/CalendarIcon';\r\nimport axios from '@/utils/axios';\r\nimport CalendarLotFormAddRegions from '@/components/views/trading-session/calendar/CalendarLotFormAddRegions';\r\nimport { mapState } from 'vuex';\r\nimport { ElDatePicker } from 'element-plus';\r\nimport IconClose from '@/components/components-helpers/IconClose.vue';\r\nimport TimeRangeSelect from '@/components/components-helpers/TimeRangeSelect.vue';\r\nimport ConfirmModal from '@/components/components-helpers/ConfirmModal.vue';\r\nimport { mapState as mapStatePinia } from 'pinia';\r\nimport { useUserStore } from '@/stores/user';\r\n\r\nconst CONFIRM_MODAL_TEXT = {\r\n  save: {\r\n    title: 'Сохранение изменений',\r\n    message: 'Сохранить изменения в лоте?',\r\n    confirmButtonText: 'Сохранить',\r\n    cancelButtonText: 'Отменить',\r\n  },\r\n  delete: {\r\n    title: 'Удаление лота',\r\n    message: 'Лот будет удален без возможности восстановления',\r\n    confirmButtonText: 'Удалить',\r\n    cancelButtonText: 'Отменить',\r\n  },\r\n  close: {\r\n    title: 'Уверены, что хотите закрыть?',\r\n    message: 'Все внесенные изменения будут потеряны',\r\n    confirmButtonText: 'Закрыть лот',\r\n    cancelButtonText: 'Продолжить редактирование',\r\n  },\r\n};\r\n\r\nfunction checkWeightValidator(rule, value, callback) {\r\n  if (!value) {\r\n    return callback(new Error('Укажите объем'));\r\n  } else {\r\n    callback();\r\n  }\r\n}\r\n\r\nfunction checkTimeEndValidator(rule, value, callback) {\r\n  const [lotStartDate, lotEndDate] = value;\r\n\r\n  if (!(lotStartDate & lotEndDate)) {\r\n    return callback(new Error('Выберите время'));\r\n  }\r\n\r\n  const selectedDateStart = new Date(this.ruleForm.dateStart);\r\n  const dateStartWithoutTime = new Date(\r\n    selectedDateStart.getFullYear(),\r\n    selectedDateStart.getMonth(),\r\n    selectedDateStart.getDate()\r\n  );\r\n  const isStartDateToday =\r\n    this.isToday.toLocaleDateString() ===\r\n    dateStartWithoutTime.toLocaleDateString();\r\n\r\n  const currentDate = new Date();\r\n  currentDate.setSeconds(0, 0);\r\n\r\n  const lotStartTime = new Date(lotStartDate);\r\n  const lotEndTime = new Date(lotEndDate);\r\n\r\n  if (!isStartDateToday) {\r\n    // нет проверки на конкретный день даты, т.к. добавление времени в запрос на edit и add делается в другом месте.\r\n    // поэтому достаточно сбросить время на 00:00.\r\n    currentDate.setTime(this.isToday);\r\n  }\r\n\r\n  const isEndTimeMoreThanStartTime =\r\n    lotEndTime.getTime() < lotStartTime.getTime();\r\n  if (isEndTimeMoreThanStartTime)\r\n    return callback(\r\n      new Error('Время окончания не может быть раньше времени начала')\r\n    );\r\n\r\n  if (\r\n    currentDate.getTime() > lotStartTime.getTime() ||\r\n    currentDate.getTime() > lotEndTime.getTime()\r\n  ) {\r\n    callback(\r\n      new Error(\r\n        'Время начала и окончания не может быть раньше текущего времени'\r\n      )\r\n    );\r\n  } else {\r\n    callback();\r\n  }\r\n}\r\n\r\nfunction checkFirstRegionSelected(rule, value, callback) {\r\n  const isAnyRegionSelected = value?.some(\r\n    (region) => region?.regionIds?.length\r\n  );\r\n\r\n  if (!isAnyRegionSelected) {\r\n    return callback(new Error('Выберите регион'));\r\n  } else {\r\n    callback();\r\n  }\r\n}\r\n\r\nexport default {\r\n  name: 'CalendarLotForm',\r\n  emits: ['onSelectRegions', 'onChangeRegions'],\r\n\r\n  props: {\r\n    isCalendarLotFormOpen: Boolean,\r\n  },\r\n\r\n  data: (ctx) => ({\r\n    resetFormKey: 1,\r\n\r\n    confirmModal: {\r\n      isVisible: false,\r\n      text: { ...CONFIRM_MODAL_TEXT.delete },\r\n      confirmCb: null,\r\n      declineCb: null,\r\n    },\r\n\r\n    regionListResponse: [],\r\n    button: {\r\n      submit: {\r\n        text: 'Создать',\r\n      },\r\n      close: {\r\n        text: 'Отменить',\r\n        code: 'close',\r\n      },\r\n    },\r\n    factoryList: {},\r\n    productsList: [],\r\n    id: null,\r\n\r\n    method: 'addLot',\r\n    isRuleFormEdited: false,\r\n    ruleForm: {\r\n      dateStart: null,\r\n      timeInterval: [],\r\n      shippingDate: null,\r\n      factoryId: '',\r\n      productId: '',\r\n      weight: 0,\r\n      multiplicity: 0,\r\n      isMumultiplicityDisabled: true,\r\n      regions: [],\r\n      minNomenclaturePrice: 0,\r\n      comment: '',\r\n    },\r\n    rules: {\r\n      dateStart: [\r\n        {\r\n          type: 'date',\r\n          required: true,\r\n          message: 'Выберите дату',\r\n          trigger: 'submit',\r\n        },\r\n      ],\r\n      timeInterval: [\r\n        {\r\n          validator: checkTimeEndValidator.bind(ctx),\r\n          trigger: 'change',\r\n        },\r\n      ],\r\n      shippingDate: [\r\n        {\r\n          type: 'date',\r\n          required: true,\r\n          message: 'Выберите дату',\r\n          trigger: 'blur',\r\n        },\r\n      ],\r\n      factoryId: [\r\n        {\r\n          required: true,\r\n          message: 'Выберите базис отгрузки',\r\n          trigger: 'change',\r\n        },\r\n      ],\r\n      productId: [\r\n        {\r\n          required: true,\r\n          message: 'Выберите номенклатуру',\r\n          trigger: 'change',\r\n        },\r\n      ],\r\n      weight: [\r\n        {\r\n          validator: checkWeightValidator,\r\n          trigger: 'submit',\r\n        },\r\n      ],\r\n      regions: [\r\n        {\r\n          required: true,\r\n          validator: checkFirstRegionSelected,\r\n          trigger: 'change',\r\n        },\r\n      ],\r\n    },\r\n  }),\r\n  computed: {\r\n    ...mapStatePinia(useUserStore, ['isTrader', 'isUmiop']),\r\n    ...mapStatePinia(useUserStore, { userId: (state) => state.user?.userId }),\r\n\r\n    ...mapState({\r\n      lot: (state) => state.lot,\r\n    }),\r\n\r\n    customTimePrefix() {\r\n      return TimerIcon;\r\n    },\r\n    customCalendarPrefix() {\r\n      return CalendarIcon;\r\n    },\r\n    isDisable() {\r\n      return this.$store.state.lot.isCalendarLotFormDisable;\r\n    },\r\n    isToday() {\r\n      return new Date(\r\n        new Date().getFullYear(),\r\n        new Date().getMonth(),\r\n        new Date().getDate()\r\n      );\r\n    },\r\n    hourNow() {\r\n      return new Date().getHours();\r\n    },\r\n    lotTitle() {\r\n      const lotId = this.$store?.state?.lot?.lot?.id;\r\n      if (lotId) return `Лот №${lotId}`;\r\n      return 'Лот';\r\n    },\r\n  },\r\n  mounted() {\r\n    axios\r\n      .post('rest/regions/getList/')\r\n      .then((response) => {\r\n        this.regionListResponse = [{ ID: 'all', NAME: 'Все регионы' }].concat(\r\n          response.data\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        console.log('getRegionsList error => ', error);\r\n      })\r\n      .finally(() => (this.loading = false));\r\n\r\n    this.$store.subscribe((mutations) => {\r\n      if (mutations.type === 'lot/lotFormEdit') {\r\n        this.resetRuleForm({ isFormEdit: true });\r\n\r\n        this.button.submit.text = 'Сохранить';\r\n        this.button.close.text = 'Удалить';\r\n        this.button.close.code = 'delete';\r\n        this.clearEmptyItemValidate('ruleForm', 'productId');\r\n\r\n        const dateStart = new Date(this.$store.state.lot.lot.dateStart);\r\n        const timeInterval = [];\r\n        timeInterval[0] = dateStart;\r\n        timeInterval[1] = new Date(this.$store.state.lot.lot.dateEnd);\r\n        let arShippingDate = [];\r\n        arShippingDate = this.$store.state.lot.lot.shippingDate.split('.');\r\n        const shippingDate = new Date(\r\n          arShippingDate[2],\r\n          arShippingDate[1] - 1,\r\n          arShippingDate[0]\r\n        );\r\n\r\n        this.id = this.$store.state.lot.lot.id;\r\n        this.method = 'editLot';\r\n\r\n        // if(mutations.type === 'lot/setLotForm') {\r\n        //   this.method = 'addLot'\r\n        // }\r\n        this.ruleForm.dateStart = dateStart;\r\n        this.ruleForm.timeInterval = timeInterval;\r\n        this.ruleForm.shippingDate = shippingDate;\r\n        this.ruleForm.factoryId = this.$store.state.lot.lot.factory.id;\r\n        this.ruleForm.productId = this.$store.state.lot.lot.product.id;\r\n        this.ruleForm.weight = Number(this.$store.state.lot.lot.weight);\r\n        this.ruleForm.multiplicity = Number(\r\n          this.$store.state.lot.lot.multiplicity\r\n        );\r\n        this.ruleForm.regions = this.$store.state.lot.lot.regions; //todo: добавить массив регионов\r\n        this.ruleForm.comment = this.$store.state.lot.lot.comment;\r\n      }\r\n\r\n      if (\r\n        mutations.type === 'lot/lotFormClose' ||\r\n        mutations.type === 'lot/lotFormSuccess'\r\n      ) {\r\n        this.resetRuleForm();\r\n      }\r\n\r\n      // mutations.type === 'lot/getListSuccess' вызывается при нажатии \"продать товар\", отслеживаем здесь и заполняем данные карточки создания из хранилища.\r\n      if (\r\n        mutations.type === 'lot/getListSuccess' &&\r\n        this.$store.state.lot.isSaleButtonClicked\r\n      ) {\r\n        this.resetRuleForm({ isSaleButtonClicked: true });\r\n\r\n        this.id = null;\r\n        this.method = 'addLot';\r\n        // let dateStart = new Date()\r\n        // let timeInterval = []\r\n        // timeInterval[0] = dateStart\r\n        // timeInterval[1] = new Date(storeLot.dateEnd)\r\n        let arShippingDate = [];\r\n        arShippingDate = this.$store.state.lot.lot.shippingDate.split('.');\r\n        const shippingDate = new Date(\r\n          arShippingDate[2],\r\n          arShippingDate[1] - 1,\r\n          arShippingDate[0]\r\n        );\r\n\r\n        this.ruleForm.dateStart = new Date(this.$store.state.lot.lot.dateStart);\r\n        this.ruleForm.timeInterval = [];\r\n        this.ruleForm.shippingDate = shippingDate;\r\n        this.ruleForm.factoryId = this.$store.state.lot.lot.factory.id;\r\n        this.ruleForm.productId = this.$store.state.lot.lot.product.id;\r\n        this.ruleForm.weight = Number(this.$store.state.lot.lot.weight);\r\n        this.ruleForm.multiplicity = Number(\r\n          this.$store.state.lot.lot.multiplicity\r\n        );\r\n        this.ruleForm.regions = this.$store.state.lot.lot.regions; //todo: добавить массив регионов\r\n        this.ruleForm.comment = this.$store.state.lot.lot.comment;\r\n\r\n        this.ruleForm.saleLotId = this.$store.state.lot.lot.id;\r\n        this.$store.state.lot.lot.id = null;\r\n      }\r\n\r\n      if (mutations.type === 'lot/lotFormStart') {\r\n        this.resetRuleForm();\r\n        this.clearEmptyItemValidate('ruleForm', 'productId');\r\n        this.ruleForm.dateStart = this.$store.state.lot.createLotDate;\r\n      }\r\n    });\r\n\r\n    this.getFactoryListByUserId(this.userId);\r\n  },\r\n\r\n  unmounted() {\r\n    this.$store.commit('lot/setIsSaleButtonClicked', { value: false });\r\n  },\r\n\r\n  methods: {\r\n    resetRuleForm(options) {\r\n      this.$store.commit('lot/setIsSaleButtonClicked', {\r\n        value: options?.isSaleButtonClicked || false,\r\n      });\r\n      this.$refs?.ruleForm?.resetFields();\r\n\r\n      if (options?.isFormEdit || options?.isSaleButtonClicked || false) {\r\n        this.resetFormKey++;\r\n      }\r\n\r\n      this.id = null;\r\n      this.method = 'addLot';\r\n      this.ruleForm.dateStart = null;\r\n      this.ruleForm.timeInterval = [];\r\n      this.ruleForm.shippingDate = '';\r\n      this.ruleForm.factoryId = '';\r\n      this.ruleForm.productId = '';\r\n      this.ruleForm.weight = 0;\r\n      this.ruleForm.multiplicity = 1;\r\n      this.ruleForm.regions = [];\r\n      this.ruleForm.comment = '';\r\n      this.ruleForm.saleLotId = '';\r\n\r\n      this.button.submit.text = 'Создать';\r\n      this.button.close.text = 'Отменить';\r\n      this.button.close.code = 'close';\r\n\r\n      this.$store.state.lot.isCalendarLotFormDisable = false;\r\n    },\r\n    // setWeight(weight) {\r\n    //   if(weight % this.ruleForm.multiplicity === 0) {\r\n    //     this.ruleForm.weight = weight\r\n    //   } else {\r\n    //     this.ruleForm.weight = this.ruleForm.weight - weight % this.ruleForm.multiplicity\r\n    //   }\r\n    // },\r\n\r\n    onChangeRegions(data) {\r\n      this.ruleForm.regions = data;\r\n      this.setIsRuleFormEdited();\r\n    },\r\n    clearValidate(formName) {\r\n      this.$refs[formName].clearValidate();\r\n    },\r\n    clearEmptyItemValidate(formName, itemName) {\r\n      if (this.productsList) {\r\n        itemName = { props: itemName };\r\n        this.$refs[formName]?.clearValidate(itemName);\r\n      }\r\n    },\r\n    setFactory(factoryId) {\r\n      this.clearProductId();\r\n      this.ruleForm.weight = 0;\r\n      this.setMultiplicity(factoryId);\r\n\r\n      this.setIsRuleFormEdited();\r\n    },\r\n    setMultiplicity(factoryId) {\r\n      const arMultiplicity = this.factoryList\r\n        .map((factory) => {\r\n          if (factory.ID === factoryId) {\r\n            return factory.MULTIPLICITY;\r\n          }\r\n        })\r\n        .filter((element) => element !== undefined && element !== null);\r\n\r\n      this.ruleForm.multiplicity = Number(...arMultiplicity)\r\n        ? Number(...arMultiplicity)\r\n        : 1;\r\n    },\r\n    clearProductId() {\r\n      this.ruleForm.productId = '';\r\n    },\r\n    getFactoryListByUserId(id) {\r\n      axios\r\n        .post('rest/factory/getListByUserId/', { userId: id })\r\n        .then((response) => {\r\n          this.factoryList = response.data;\r\n        })\r\n        .catch((error) => {\r\n          console.log('getFactoryListByUserId error => ', error);\r\n          return {};\r\n        })\r\n        .finally(() => (this.loading = false));\r\n    },\r\n    getProductListByFactoryId(factoryId) {\r\n      if (factoryId) {\r\n        axios\r\n          .post('rest/products/getByFactoryId/', { id: factoryId })\r\n          .then((response) => {\r\n            this.productsList = response.data.sort((a, b) =>\r\n              a.SHORT_NAME.localeCompare(b.SHORT_NAME, 'ru', { numeric: true })\r\n            );\r\n            this.ruleForm.minNomenclaturePrice = this.productsList\r\n              .map((p) => {\r\n                if (p.ID === this.ruleForm.productId) {\r\n                  return p.MIN_PRICE ? Number(p.MIN_PRICE) : 0;\r\n                }\r\n              })\r\n              .filter((element) => element !== undefined);\r\n          })\r\n          .catch((error) => {\r\n            console.log('getProductsList error => ', error);\r\n            this.productsList = {};\r\n          })\r\n          .finally(() => {\r\n            this.loading = false;\r\n            // this.setIsRuleFormEdited()\r\n          });\r\n      }\r\n    },\r\n    addArrLot() {\r\n      const arTimeStartAndEnd = [];\r\n      let dateStart = '';\r\n      let dateEnd = '';\r\n      let shippingDate = '';\r\n      let arRegions = [];\r\n\r\n      if (this.ruleForm.timeInterval !== null) {\r\n        this.ruleForm.timeInterval.forEach(function (date) {\r\n          let min = date.getMinutes();\r\n          min = ('0' + min).slice(-2);\r\n\r\n          let hours = date.getHours();\r\n          hours = ('0' + hours).slice(-2);\r\n\r\n          arTimeStartAndEnd.push(hours + ':' + min + ':00');\r\n        });\r\n      }\r\n      if (this.ruleForm.dateStart !== null) {\r\n        dateStart =\r\n          this.ruleForm.dateStart.toLocaleDateString('ru-RU') +\r\n          ' ' +\r\n          arTimeStartAndEnd[0];\r\n        dateEnd =\r\n          this.ruleForm.dateStart.toLocaleDateString('ru-RU') +\r\n          ' ' +\r\n          arTimeStartAndEnd[1];\r\n      }\r\n      if (this.ruleForm.shippingDate !== null) {\r\n        shippingDate = this.ruleForm.shippingDate.toLocaleDateString('ru-RU');\r\n      }\r\n\r\n      arRegions = this.ruleForm.regions?.map((region) => {\r\n        // для отправки приводим [{id: '3', name: 'Москва'}, {id: '4', name: 'Нижний новгород'] в [3, 4];\r\n        const regionIds = region?.regionIds?.map((regionId) => {\r\n          if (typeof regionId === 'string') return regionId;\r\n          if (typeof regionId === 'object' && regionId?.id) return regionId.id;\r\n          return regionId;\r\n        });\r\n\r\n        return {\r\n          priceMin: region?.priceMin,\r\n          regionIds: regionIds || region.regionIds,\r\n        };\r\n      });\r\n\r\n      return {\r\n        id: this.id,\r\n        userId: this.userId,\r\n        dateStart: dateStart,\r\n        dateEnd: dateEnd,\r\n        shippingDate: shippingDate,\r\n        factoryId: this.ruleForm.factoryId,\r\n        productId: this.ruleForm.productId,\r\n        weight: Number(this.ruleForm.weight),\r\n        multiplicity: Number(this.ruleForm.multiplicity),\r\n        regions: arRegions,\r\n        comment: this.ruleForm.comment,\r\n        saleLotId: this.ruleForm.saleLotId,\r\n      };\r\n    },\r\n    makeRange(start, end) {\r\n      const result = [];\r\n      for (let i = start; i <= end; i++) {\r\n        result.push(i);\r\n      }\r\n      return result;\r\n    },\r\n    disabledHours() {\r\n      if (this.ruleForm.dateStart) {\r\n        if (\r\n          this.ruleForm.dateStart.toLocaleDateString() ===\r\n          this.isToday.toLocaleDateString()\r\n        ) {\r\n          return this.makeRange(0, this.hourNow - 1);\r\n        } else {\r\n          return [];\r\n        }\r\n      } else {\r\n        return [];\r\n      }\r\n    },\r\n    disabledMinutes(hour) {\r\n      if (hour === this.hourNow) {\r\n        const minuteStart = new Date().getMinutes() - 1;\r\n        return this.makeRange(0, minuteStart);\r\n      }\r\n    },\r\n    disabledDate(day) {\r\n      return (\r\n        day.getTime() < this.isToday.getTime() &&\r\n        day.getTime() !== this.isToday.getTime()\r\n      );\r\n    },\r\n    disabledShippingDate(day) {\r\n      if (this.ruleForm.dateStart) {\r\n        return (\r\n          day.getTime() < this.ruleForm.dateStart.getTime() &&\r\n          day.getTime() !== this.ruleForm.dateStart.getTime()\r\n        );\r\n      } else {\r\n        return (\r\n          day.getTime() < this.isToday.getTime() &&\r\n          day.getTime() !== this.isToday.getTime()\r\n        );\r\n      }\r\n    },\r\n    disabledWeight(factoryId) {\r\n      if (factoryId) {\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    },\r\n\r\n    onSubmit(formName) {\r\n      this.$refs[formName].validate((valid) => {\r\n        if (valid) {\r\n          this.$store.state.lot.isCalendarLotFormDisable = true;\r\n\r\n          const submitCallback = () => {\r\n            this.handleSubmit();\r\n            this.$store.state.lot.isCalendarLotFormDisable = false;\r\n            this.closeForm();\r\n          };\r\n\r\n          if (this.button.submit.text === 'Создать') return submitCallback();\r\n\r\n          if (!this.isRuleFormEdited) return submitCallback();\r\n\r\n          this.confirmModal = {\r\n            isVisible: true,\r\n            text: { ...CONFIRM_MODAL_TEXT.save },\r\n            confirmCb: () => {\r\n              submitCallback();\r\n            },\r\n            declineCb: () => {\r\n              this.$store.state.lot.isCalendarLotFormDisable = false;\r\n            },\r\n          };\r\n        } else {\r\n          console.log('CalendarLotForm validate error ');\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n\r\n    handleSubmit() {\r\n      if (this.method === 'addLot') {\r\n        this.$store.dispatch('lot/add', this.addArrLot());\r\n      } else if (this.method === 'editLot') {\r\n        this.$store.dispatch('lot/edit', this.addArrLot());\r\n      }\r\n    },\r\n\r\n    clickClose() {\r\n      if (this.button.close.code === 'delete') {\r\n        return this.deleteLot();\r\n        // this.closeForm()\r\n      }\r\n\r\n      if (this.isRuleFormEdited && this.button.close.code === 'close') {\r\n        return (this.confirmModal = {\r\n          isVisible: true,\r\n          text: { ...CONFIRM_MODAL_TEXT.close },\r\n          confirmCb: () => {\r\n            this.closeForm();\r\n          },\r\n        });\r\n      }\r\n\r\n      this.closeForm();\r\n    },\r\n\r\n    deleteLot() {\r\n      this.confirmModal = {\r\n        isVisible: true,\r\n        text: { ...CONFIRM_MODAL_TEXT.delete },\r\n        confirmCb: () => {\r\n          this.$store.dispatch('lot/delete', { id: this.id });\r\n          this.closeForm();\r\n        },\r\n      };\r\n    },\r\n    closeForm() {\r\n      this.resetFormKey++;\r\n      this.$store.commit('lot/lotFormClose');\r\n      this.clearValidate('ruleForm');\r\n\r\n      this.setIsRuleFormEdited(false);\r\n    },\r\n\r\n    /**\r\n     * @param {'confirm' | 'decline'} action\r\n     */\r\n    handleConfirmAction(action) {\r\n      if (action === 'confirm' && this.confirmModal.confirmCb) {\r\n        return this.confirmModal.confirmCb();\r\n      }\r\n\r\n      if (action === 'decline' && this.confirmModal.declineCb) {\r\n        return this.confirmModal.declineCb();\r\n      }\r\n\r\n      // ElMessage({ type: 'info', message: 'Действие отменено' });\r\n    },\r\n\r\n    closeFormWithConfirm() {\r\n      if (this.isRuleFormEdited) {\r\n        return (this.confirmModal = {\r\n          isVisible: true,\r\n          text: { ...CONFIRM_MODAL_TEXT.close },\r\n          confirmCb: () => {\r\n            this.closeForm();\r\n          },\r\n        });\r\n      }\r\n\r\n      this.closeForm();\r\n    },\r\n\r\n    setIsRuleFormEdited(isEdited = true) {\r\n      this.isRuleFormEdited = Boolean(isEdited);\r\n    },\r\n  },\r\n  components: {\r\n    CalendarLotFormAddRegions,\r\n    ElDatePicker,\r\n    IconClose,\r\n    TimeRangeSelect,\r\n    ConfirmModal,\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped></style>\r\n"]},"metadata":{},"sourceType":"module"}