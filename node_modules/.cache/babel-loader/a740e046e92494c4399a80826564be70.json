{"ast":null,"code":"import axios from '@/utils/axios';\n\nconst state = () => ({\n  offer: {\n    factory: {},\n    product: {},\n    status: {}\n  },\n  offerList: [],\n  editedOffers: [],\n  umiop: {\n    offerList: [],\n    showUmiop: false\n  }\n});\n\nconst mutations = {\n  setUmiop(state) {\n    state.umiop.offerList = state.offerList.filter(offer => {\n      if (offer.switchAccepted && !offer.isAccepted || offer.status.code === 'umiop_check') {\n        return true;\n      } else {\n        return false;\n      }\n    });\n\n    if (state.umiop.offerList.length > 0) {\n      state.umiop.showUmiop = true;\n    } else {\n      state.umiop.showUmiop = false;\n    }\n  },\n\n  setSwitchAccepted(state, payload) {\n    state.offerList = state.offerList.filter(offer => {\n      if (offer.id === payload.offerId) {\n        offer.switchAccepted = payload.switchAccepted;\n\n        if (payload.switchAccepted === false && payload.isTrader && (offer.status.code === 'new' || offer.status.code === 'cancelled' || offer.status.code === 'done')) {\n          offer.weightSale = 0;\n        }\n\n        if (payload.switchAccepted === true && payload.weightSale === 0 && payload.isTrader && (offer.status.code === 'new' || offer.status.code === 'cancelled' || offer.status.code === 'done')) {\n          offer.weightSale = Number(payload.multiplicity);\n        }\n\n        return true;\n      } else {\n        return true;\n      }\n    });\n  },\n\n  setSwitchAcceptedToValidWeightSale(state, payload) {\n    state.offerList = state.offerList.filter(offer => {\n      if (offer.id === payload.offerId) {\n        offer.switchAccepted = payload.isValidWeightSale;\n        return true;\n      } else {\n        return true;\n      }\n    });\n  },\n\n  offerFormStart(state, payload) {\n    state.calendarLotFormOpen = true;\n    state.isCalendarLotFormDisable = false;\n    state.createLotDate = payload;\n  },\n\n  offerFormSuccess(state) {\n    state.calendarLotFormOpen = false;\n  },\n\n  offerFormFailure(state, payload) {\n    state.isCalendarLotFormDisable = true;\n    state.createLotError = payload;\n  },\n\n  offerFormClose(state) {\n    state.calendarLotFormOpen = false;\n    state.isCalendarLotFormDisable = false;\n  },\n\n  offerFormEdit(state, payload) {\n    state.lot = payload;\n    state.calendarLotFormOpen = true;\n  },\n\n  setOffer(state, payload) {\n    state.lot = payload;\n  },\n\n  setOfferForm(state, payload) {\n    state.lot = payload;\n    state.calendarLotFormOpen = true;\n  },\n\n  // todo: Логика формы кандидат на рефакторинг. Коммиты предназначены только для dev tools.\n  // в текущей реализации может использоваться для отслеживания коммитов. В частности в CalendarLotForm.vue\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  getListSuccess() {},\n\n  setOffersList(state, payload) {\n    let offers = JSON.parse(JSON.stringify(payload)),\n        offersSet = [];\n    offersSet = offers.map(origOffer => {\n      let offer = Object.assign({}, origOffer);\n\n      if (offer.isAccepted === true) {\n        if (offer.status.code === 'new') {\n          if (!offer.weightSale) {\n            offer.weightSale = offer.weight;\n            offer.switchAccepted = true;\n          }\n\n          if (offer.weightSale) {\n            offer.switchAccepted = true;\n          }\n\n          return offer;\n        }\n\n        if (offer.status.code === 'done') {\n          if (!offer.weightSale) {\n            offer.switchAccepted = false;\n          } else {\n            offer.switchAccepted = true;\n          }\n\n          return offer;\n        }\n\n        if (offer.status.code === 'cancelled') {\n          offer.switchAccepted = false;\n          return offer;\n        }\n      } else {\n        if (offer.status.code !== 'umiop_check' && offer.status.code !== 'umiop_done') {\n          offer.weightSale = 0;\n          offer.switchAccepted = false;\n        } else if (offer.status.code !== 'umiop_done') {\n          offer.switchAccepted = true;\n        }\n\n        return offer;\n      }\n    });\n    const listWithEdited = offersSet.map(offer => {\n      const editedOffer = state.editedOffers.find(editedOffer => editedOffer.id === offer.id);\n      if (editedOffer) return editedOffer;\n      return offer;\n    });\n    state.offerList = listWithEdited;\n  },\n\n  setStatusInitialAndCanceled(state, payload) {\n    state.offerList = payload.filter(offer => {\n      if (offer.switchAccepted === false && (offer.status.code === 'new' || offer.status.code === 'done')) {\n        //offer.status.id = '';\n        offer.status.name = 'Отклонено';\n        offer.status.code = 'cancelled';\n        return true;\n      } else if (offer.switchAccepted === true && offer.status.code === 'cancelled') {\n        //offer.status.id = '';\n        offer.status.name = 'Принято';\n        offer.status.code = 'new';\n        return true;\n      } else {\n        return true;\n      }\n    });\n  },\n\n  setEditedOffers(state, {\n    editedOffers\n  }) {\n    state.editedOffers = editedOffers;\n  }\n\n};\nconst actions = {\n  onSwitchAccepted(context, payload) {\n    context.commit('setSwitchAccepted', payload);\n    context.commit('setUmiop');\n  },\n\n  async getListByLotId({\n    commit\n  }, id) {\n    try {\n      const {\n        data\n      } = await axios.post('rest/trading/offer/getListByLotId/', {\n        id\n      });\n\n      if (data) {\n        commit('setOffersList', data);\n        commit('setUmiop');\n      }\n    } catch (e) {\n      console.log('offer getOffersByLotId error => ', e);\n    }\n  },\n\n  setUmiopCheckStatusesByIds(context, ids) {\n    axios.post('rest/trading/offer/setUmiopCheckStatusesByIds/', {\n      ids: ids\n    }).then(() => {\n      context.commit('offerFormSuccess');\n    }).catch(error => {\n      console.log('offer setUmiopCheckStatuses error => ', error);\n    });\n  },\n\n  confirmDescriptionByTrader(context, offerList) {\n    //switchAccepted\n    context.commit('setStatusInitialAndCanceled', offerList);\n    axios.post('rest/trading/offer/confirmDescriptionByTrader/', {\n      offerList: context.state.offerList\n    }).then(() => {\n      context.commit('getListSuccess');\n    }).catch(error => {\n      console.log('offer confirmDescriptionByTrader error => ', error);\n    });\n  },\n\n  confirmDescriptionByUmiop(context, lotId) {\n    if (context.getters.offerIdsUmiopRejected.length) {\n      context.commit('lot/setLotIsUmiopEdited', null, {\n        root: true\n      });\n    }\n\n    axios.post('rest/trading/offer/confirmDescriptionByUmiop/', {\n      ids: context.getters.offerIdsUmiopDone,\n      lotId: lotId,\n      isUmiopEdited: Boolean(context.getters.offerIdsUmiopRejected.length)\n    }).then(() => {\n      context.commit('offerFormSuccess');\n    }).catch(error => {\n      console.log('offer confirmDescriptionByUmiop error => ', error);\n    });\n  },\n\n  setCancelledStatusesByIds(context, ids) {\n    axios.post('rest/trading/offer/setCancelledStatusesByIds/', {\n      ids: ids\n    }).then(() => {\n      context.commit('offerFormSuccess');\n    }).catch(error => {\n      console.log('offer setUmiopCheckStatuses error => ', error);\n    });\n  },\n\n  setWeightSaleByIds(context, data) {\n    axios.post('rest/trading/offer/setWeightSaleByIds/', data).then(() => {\n      context.commit('offerFormSuccess');\n    }).catch(error => {\n      console.log('offer setUmiopCheckStatuses error => ', error);\n    });\n  },\n\n  // Сохряем отректированное предложение, передаем как payload на изменение в этот action.\n  setEditedOffers({\n    commit,\n    state\n  }, {\n    offer\n  }) {\n    const editedOffers = [];\n    let isFoundInEdited = false;\n    state.editedOffers.forEach(editedOffer => {\n      if (editedOffer.id === offer.id) {\n        isFoundInEdited = true;\n        editedOffers.push(offer);\n      } else {\n        editedOffers.push(editedOffer);\n      }\n    });\n\n    if (!isFoundInEdited) {\n      editedOffers.push(offer);\n    }\n\n    commit('setEditedOffers', {\n      editedOffers\n    });\n  },\n\n  resetEditedOffers({\n    commit\n  }) {\n    commit('setEditedOffers', {\n      editedOffers: []\n    });\n  }\n\n};\nconst getters = {\n  offerIdsUmiopDone: state => {\n    let offerIdsUmiopDone = state.offerList.map(offer => {\n      if (offer.status.code === 'umiop_check' && offer.switchAccepted === true) {\n        return offer.id;\n      }\n    });\n    return offerIdsUmiopDone;\n  },\n  offerIdsUmiopRejected: state => {\n    let offerIdsUmiopRejected = state.offerList.filter(offer => {\n      if (offer.status.code === 'umiop_check' && offer.switchAccepted === false) {\n        return offer.id;\n      }\n    });\n    return offerIdsUmiopRejected;\n  },\n\n  // todo: Remove. Make use of state.offer.offerList instead.\n  offerListWithEdited(state) {\n    if (!state.editedOffers.length) {\n      return state.offerList;\n    }\n\n    return state.offerList;\n  }\n\n};\nconst setters = {};\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions,\n  getters,\n  setters\n};","map":{"version":3,"names":["axios","state","offer","factory","product","status","offerList","editedOffers","umiop","showUmiop","mutations","setUmiop","filter","switchAccepted","isAccepted","code","length","setSwitchAccepted","payload","id","offerId","isTrader","weightSale","Number","multiplicity","setSwitchAcceptedToValidWeightSale","isValidWeightSale","offerFormStart","calendarLotFormOpen","isCalendarLotFormDisable","createLotDate","offerFormSuccess","offerFormFailure","createLotError","offerFormClose","offerFormEdit","lot","setOffer","setOfferForm","getListSuccess","setOffersList","offers","JSON","parse","stringify","offersSet","map","origOffer","Object","assign","weight","listWithEdited","editedOffer","find","setStatusInitialAndCanceled","name","setEditedOffers","actions","onSwitchAccepted","context","commit","getListByLotId","data","post","e","console","log","setUmiopCheckStatusesByIds","ids","then","catch","error","confirmDescriptionByTrader","confirmDescriptionByUmiop","lotId","getters","offerIdsUmiopRejected","root","offerIdsUmiopDone","isUmiopEdited","Boolean","setCancelledStatusesByIds","setWeightSaleByIds","isFoundInEdited","forEach","push","resetEditedOffers","offerListWithEdited","setters","namespaced"],"sources":["C:/openserver/domains/U190001472_BitumMap_Vue/src/store/modules/trading/offer.js"],"sourcesContent":["import axios from '@/utils/axios';\r\n\r\nconst state = () => ({\r\n  offer: {\r\n    factory: {},\r\n    product: {},\r\n    status: {},\r\n  },\r\n  offerList: [],\r\n  editedOffers: [],\r\n  umiop: {\r\n    offerList: [],\r\n    showUmiop: false,\r\n  },\r\n});\r\n\r\nconst mutations = {\r\n  setUmiop(state) {\r\n    state.umiop.offerList = state.offerList.filter((offer) => {\r\n      if (\r\n        (offer.switchAccepted && !offer.isAccepted) ||\r\n        offer.status.code === 'umiop_check'\r\n      ) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    });\r\n\r\n    if (state.umiop.offerList.length > 0) {\r\n      state.umiop.showUmiop = true;\r\n    } else {\r\n      state.umiop.showUmiop = false;\r\n    }\r\n  },\r\n  setSwitchAccepted(state, payload) {\r\n    state.offerList = state.offerList.filter((offer) => {\r\n      if (offer.id === payload.offerId) {\r\n        offer.switchAccepted = payload.switchAccepted;\r\n        if (\r\n          payload.switchAccepted === false &&\r\n          payload.isTrader &&\r\n          (offer.status.code === 'new' ||\r\n            offer.status.code === 'cancelled' ||\r\n            offer.status.code === 'done')\r\n        ) {\r\n          offer.weightSale = 0;\r\n        }\r\n        if (\r\n          payload.switchAccepted === true &&\r\n          payload.weightSale === 0 &&\r\n          payload.isTrader &&\r\n          (offer.status.code === 'new' ||\r\n            offer.status.code === 'cancelled' ||\r\n            offer.status.code === 'done')\r\n        ) {\r\n          offer.weightSale = Number(payload.multiplicity);\r\n        }\r\n\r\n        return true;\r\n      } else {\r\n        return true;\r\n      }\r\n    });\r\n  },\r\n  setSwitchAcceptedToValidWeightSale(state, payload) {\r\n    state.offerList = state.offerList.filter((offer) => {\r\n      if (offer.id === payload.offerId) {\r\n        offer.switchAccepted = payload.isValidWeightSale;\r\n        return true;\r\n      } else {\r\n        return true;\r\n      }\r\n    });\r\n  },\r\n  offerFormStart(state, payload) {\r\n    state.calendarLotFormOpen = true;\r\n    state.isCalendarLotFormDisable = false;\r\n    state.createLotDate = payload;\r\n  },\r\n  offerFormSuccess(state) {\r\n    state.calendarLotFormOpen = false;\r\n  },\r\n  offerFormFailure(state, payload) {\r\n    state.isCalendarLotFormDisable = true;\r\n    state.createLotError = payload;\r\n  },\r\n  offerFormClose(state) {\r\n    state.calendarLotFormOpen = false;\r\n    state.isCalendarLotFormDisable = false;\r\n  },\r\n  offerFormEdit(state, payload) {\r\n    state.lot = payload;\r\n    state.calendarLotFormOpen = true;\r\n  },\r\n  setOffer(state, payload) {\r\n    state.lot = payload;\r\n  },\r\n  setOfferForm(state, payload) {\r\n    state.lot = payload;\r\n    state.calendarLotFormOpen = true;\r\n  },\r\n\r\n  // todo: Логика формы кандидат на рефакторинг. Коммиты предназначены только для dev tools.\r\n  // в текущей реализации может использоваться для отслеживания коммитов. В частности в CalendarLotForm.vue\r\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n  getListSuccess() {},\r\n  setOffersList(state, payload) {\r\n    let offers = JSON.parse(JSON.stringify(payload)),\r\n      offersSet = [];\r\n\r\n    offersSet = offers.map((origOffer) => {\r\n      let offer = Object.assign({}, origOffer);\r\n\r\n      if (offer.isAccepted === true) {\r\n        if (offer.status.code === 'new') {\r\n          if (!offer.weightSale) {\r\n            offer.weightSale = offer.weight;\r\n            offer.switchAccepted = true;\r\n          }\r\n\r\n          if (offer.weightSale) {\r\n            offer.switchAccepted = true;\r\n          }\r\n\r\n          return offer;\r\n        }\r\n\r\n        if (offer.status.code === 'done') {\r\n          if (!offer.weightSale) {\r\n            offer.switchAccepted = false;\r\n          } else {\r\n            offer.switchAccepted = true;\r\n          }\r\n\r\n          return offer;\r\n        }\r\n\r\n        if (offer.status.code === 'cancelled') {\r\n          offer.switchAccepted = false;\r\n          return offer;\r\n        }\r\n      } else {\r\n        if (\r\n          offer.status.code !== 'umiop_check' &&\r\n          offer.status.code !== 'umiop_done'\r\n        ) {\r\n          offer.weightSale = 0;\r\n          offer.switchAccepted = false;\r\n        } else if (offer.status.code !== 'umiop_done') {\r\n          offer.switchAccepted = true;\r\n        }\r\n\r\n        return offer;\r\n      }\r\n    });\r\n\r\n    const listWithEdited = offersSet.map((offer) => {\r\n      const editedOffer = state.editedOffers.find(\r\n        (editedOffer) => editedOffer.id === offer.id\r\n      );\r\n\r\n      if (editedOffer) return editedOffer;\r\n      return offer;\r\n    });\r\n\r\n    state.offerList = listWithEdited;\r\n  },\r\n  setStatusInitialAndCanceled(state, payload) {\r\n    state.offerList = payload.filter((offer) => {\r\n      if (\r\n        offer.switchAccepted === false &&\r\n        (offer.status.code === 'new' || offer.status.code === 'done')\r\n      ) {\r\n        //offer.status.id = '';\r\n        offer.status.name = 'Отклонено';\r\n        offer.status.code = 'cancelled';\r\n        return true;\r\n      } else if (\r\n        offer.switchAccepted === true &&\r\n        offer.status.code === 'cancelled'\r\n      ) {\r\n        //offer.status.id = '';\r\n        offer.status.name = 'Принято';\r\n        offer.status.code = 'new';\r\n        return true;\r\n      } else {\r\n        return true;\r\n      }\r\n    });\r\n  },\r\n\r\n  setEditedOffers(state, { editedOffers }) {\r\n    state.editedOffers = editedOffers;\r\n  },\r\n};\r\n\r\nconst actions = {\r\n  onSwitchAccepted(context, payload) {\r\n    context.commit('setSwitchAccepted', payload);\r\n    context.commit('setUmiop');\r\n  },\r\n  async getListByLotId({ commit }, id) {\r\n    try {\r\n      const { data } = await axios.post('rest/trading/offer/getListByLotId/', {\r\n        id,\r\n      });\r\n      if (data) {\r\n        commit('setOffersList', data);\r\n        commit('setUmiop');\r\n      }\r\n    } catch (e) {\r\n      console.log('offer getOffersByLotId error => ', e);\r\n    }\r\n  },\r\n  setUmiopCheckStatusesByIds(context, ids) {\r\n    axios\r\n      .post('rest/trading/offer/setUmiopCheckStatusesByIds/', { ids: ids })\r\n      .then(() => {\r\n        context.commit('offerFormSuccess');\r\n      })\r\n      .catch((error) => {\r\n        console.log('offer setUmiopCheckStatuses error => ', error);\r\n      });\r\n  },\r\n  confirmDescriptionByTrader(context, offerList) {\r\n    //switchAccepted\r\n    context.commit('setStatusInitialAndCanceled', offerList);\r\n    axios\r\n      .post('rest/trading/offer/confirmDescriptionByTrader/', {\r\n        offerList: context.state.offerList,\r\n      })\r\n      .then(() => {\r\n        context.commit('getListSuccess');\r\n      })\r\n      .catch((error) => {\r\n        console.log('offer confirmDescriptionByTrader error => ', error);\r\n      });\r\n  },\r\n  confirmDescriptionByUmiop(context, lotId) {\r\n    if (context.getters.offerIdsUmiopRejected.length) {\r\n      context.commit('lot/setLotIsUmiopEdited', null, { root: true });\r\n    }\r\n\r\n    axios\r\n      .post('rest/trading/offer/confirmDescriptionByUmiop/', {\r\n        ids: context.getters.offerIdsUmiopDone,\r\n        lotId: lotId,\r\n        isUmiopEdited: Boolean(context.getters.offerIdsUmiopRejected.length),\r\n      })\r\n      .then(() => {\r\n        context.commit('offerFormSuccess');\r\n      })\r\n      .catch((error) => {\r\n        console.log('offer confirmDescriptionByUmiop error => ', error);\r\n      });\r\n  },\r\n\r\n  setCancelledStatusesByIds(context, ids) {\r\n    axios\r\n      .post('rest/trading/offer/setCancelledStatusesByIds/', { ids: ids })\r\n      .then(() => {\r\n        context.commit('offerFormSuccess');\r\n      })\r\n      .catch((error) => {\r\n        console.log('offer setUmiopCheckStatuses error => ', error);\r\n      });\r\n  },\r\n  setWeightSaleByIds(context, data) {\r\n    axios\r\n      .post('rest/trading/offer/setWeightSaleByIds/', data)\r\n      .then(() => {\r\n        context.commit('offerFormSuccess');\r\n      })\r\n      .catch((error) => {\r\n        console.log('offer setUmiopCheckStatuses error => ', error);\r\n      });\r\n  },\r\n\r\n  // Сохряем отректированное предложение, передаем как payload на изменение в этот action.\r\n  setEditedOffers({ commit, state }, { offer }) {\r\n    const editedOffers = [];\r\n    let isFoundInEdited = false;\r\n\r\n    state.editedOffers.forEach((editedOffer) => {\r\n      if (editedOffer.id === offer.id) {\r\n        isFoundInEdited = true;\r\n        editedOffers.push(offer);\r\n      } else {\r\n        editedOffers.push(editedOffer);\r\n      }\r\n    });\r\n\r\n    if (!isFoundInEdited) {\r\n      editedOffers.push(offer);\r\n    }\r\n\r\n    commit('setEditedOffers', { editedOffers });\r\n  },\r\n\r\n  resetEditedOffers({ commit }) {\r\n    commit('setEditedOffers', { editedOffers: [] });\r\n  },\r\n};\r\n\r\nconst getters = {\r\n  offerIdsUmiopDone: (state) => {\r\n    let offerIdsUmiopDone = state.offerList.map((offer) => {\r\n      if (\r\n        offer.status.code === 'umiop_check' &&\r\n        offer.switchAccepted === true\r\n      ) {\r\n        return offer.id;\r\n      }\r\n    });\r\n\r\n    return offerIdsUmiopDone;\r\n  },\r\n  offerIdsUmiopRejected: (state) => {\r\n    let offerIdsUmiopRejected = state.offerList.filter((offer) => {\r\n      if (\r\n        offer.status.code === 'umiop_check' &&\r\n        offer.switchAccepted === false\r\n      ) {\r\n        return offer.id;\r\n      }\r\n    });\r\n\r\n    return offerIdsUmiopRejected;\r\n  },\r\n\r\n  // todo: Remove. Make use of state.offer.offerList instead.\r\n  offerListWithEdited(state) {\r\n    if (!state.editedOffers.length) {\r\n      return state.offerList;\r\n    }\r\n\r\n    return state.offerList;\r\n  },\r\n};\r\n\r\nconst setters = {};\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state,\r\n  mutations,\r\n  actions,\r\n  getters,\r\n  setters,\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,eAAlB;;AAEA,MAAMC,KAAK,GAAG,OAAO;EACnBC,KAAK,EAAE;IACLC,OAAO,EAAE,EADJ;IAELC,OAAO,EAAE,EAFJ;IAGLC,MAAM,EAAE;EAHH,CADY;EAMnBC,SAAS,EAAE,EANQ;EAOnBC,YAAY,EAAE,EAPK;EAQnBC,KAAK,EAAE;IACLF,SAAS,EAAE,EADN;IAELG,SAAS,EAAE;EAFN;AARY,CAAP,CAAd;;AAcA,MAAMC,SAAS,GAAG;EAChBC,QAAQ,CAACV,KAAD,EAAQ;IACdA,KAAK,CAACO,KAAN,CAAYF,SAAZ,GAAwBL,KAAK,CAACK,SAAN,CAAgBM,MAAhB,CAAwBV,KAAD,IAAW;MACxD,IACGA,KAAK,CAACW,cAAN,IAAwB,CAACX,KAAK,CAACY,UAAhC,IACAZ,KAAK,CAACG,MAAN,CAAaU,IAAb,KAAsB,aAFxB,EAGE;QACA,OAAO,IAAP;MACD,CALD,MAKO;QACL,OAAO,KAAP;MACD;IACF,CATuB,CAAxB;;IAWA,IAAId,KAAK,CAACO,KAAN,CAAYF,SAAZ,CAAsBU,MAAtB,GAA+B,CAAnC,EAAsC;MACpCf,KAAK,CAACO,KAAN,CAAYC,SAAZ,GAAwB,IAAxB;IACD,CAFD,MAEO;MACLR,KAAK,CAACO,KAAN,CAAYC,SAAZ,GAAwB,KAAxB;IACD;EACF,CAlBe;;EAmBhBQ,iBAAiB,CAAChB,KAAD,EAAQiB,OAAR,EAAiB;IAChCjB,KAAK,CAACK,SAAN,GAAkBL,KAAK,CAACK,SAAN,CAAgBM,MAAhB,CAAwBV,KAAD,IAAW;MAClD,IAAIA,KAAK,CAACiB,EAAN,KAAaD,OAAO,CAACE,OAAzB,EAAkC;QAChClB,KAAK,CAACW,cAAN,GAAuBK,OAAO,CAACL,cAA/B;;QACA,IACEK,OAAO,CAACL,cAAR,KAA2B,KAA3B,IACAK,OAAO,CAACG,QADR,KAECnB,KAAK,CAACG,MAAN,CAAaU,IAAb,KAAsB,KAAtB,IACCb,KAAK,CAACG,MAAN,CAAaU,IAAb,KAAsB,WADvB,IAECb,KAAK,CAACG,MAAN,CAAaU,IAAb,KAAsB,MAJxB,CADF,EAME;UACAb,KAAK,CAACoB,UAAN,GAAmB,CAAnB;QACD;;QACD,IACEJ,OAAO,CAACL,cAAR,KAA2B,IAA3B,IACAK,OAAO,CAACI,UAAR,KAAuB,CADvB,IAEAJ,OAAO,CAACG,QAFR,KAGCnB,KAAK,CAACG,MAAN,CAAaU,IAAb,KAAsB,KAAtB,IACCb,KAAK,CAACG,MAAN,CAAaU,IAAb,KAAsB,WADvB,IAECb,KAAK,CAACG,MAAN,CAAaU,IAAb,KAAsB,MALxB,CADF,EAOE;UACAb,KAAK,CAACoB,UAAN,GAAmBC,MAAM,CAACL,OAAO,CAACM,YAAT,CAAzB;QACD;;QAED,OAAO,IAAP;MACD,CAvBD,MAuBO;QACL,OAAO,IAAP;MACD;IACF,CA3BiB,CAAlB;EA4BD,CAhDe;;EAiDhBC,kCAAkC,CAACxB,KAAD,EAAQiB,OAAR,EAAiB;IACjDjB,KAAK,CAACK,SAAN,GAAkBL,KAAK,CAACK,SAAN,CAAgBM,MAAhB,CAAwBV,KAAD,IAAW;MAClD,IAAIA,KAAK,CAACiB,EAAN,KAAaD,OAAO,CAACE,OAAzB,EAAkC;QAChClB,KAAK,CAACW,cAAN,GAAuBK,OAAO,CAACQ,iBAA/B;QACA,OAAO,IAAP;MACD,CAHD,MAGO;QACL,OAAO,IAAP;MACD;IACF,CAPiB,CAAlB;EAQD,CA1De;;EA2DhBC,cAAc,CAAC1B,KAAD,EAAQiB,OAAR,EAAiB;IAC7BjB,KAAK,CAAC2B,mBAAN,GAA4B,IAA5B;IACA3B,KAAK,CAAC4B,wBAAN,GAAiC,KAAjC;IACA5B,KAAK,CAAC6B,aAAN,GAAsBZ,OAAtB;EACD,CA/De;;EAgEhBa,gBAAgB,CAAC9B,KAAD,EAAQ;IACtBA,KAAK,CAAC2B,mBAAN,GAA4B,KAA5B;EACD,CAlEe;;EAmEhBI,gBAAgB,CAAC/B,KAAD,EAAQiB,OAAR,EAAiB;IAC/BjB,KAAK,CAAC4B,wBAAN,GAAiC,IAAjC;IACA5B,KAAK,CAACgC,cAAN,GAAuBf,OAAvB;EACD,CAtEe;;EAuEhBgB,cAAc,CAACjC,KAAD,EAAQ;IACpBA,KAAK,CAAC2B,mBAAN,GAA4B,KAA5B;IACA3B,KAAK,CAAC4B,wBAAN,GAAiC,KAAjC;EACD,CA1Ee;;EA2EhBM,aAAa,CAAClC,KAAD,EAAQiB,OAAR,EAAiB;IAC5BjB,KAAK,CAACmC,GAAN,GAAYlB,OAAZ;IACAjB,KAAK,CAAC2B,mBAAN,GAA4B,IAA5B;EACD,CA9Ee;;EA+EhBS,QAAQ,CAACpC,KAAD,EAAQiB,OAAR,EAAiB;IACvBjB,KAAK,CAACmC,GAAN,GAAYlB,OAAZ;EACD,CAjFe;;EAkFhBoB,YAAY,CAACrC,KAAD,EAAQiB,OAAR,EAAiB;IAC3BjB,KAAK,CAACmC,GAAN,GAAYlB,OAAZ;IACAjB,KAAK,CAAC2B,mBAAN,GAA4B,IAA5B;EACD,CArFe;;EAuFhB;EACA;EACA;EACAW,cAAc,GAAG,CAAE,CA1FH;;EA2FhBC,aAAa,CAACvC,KAAD,EAAQiB,OAAR,EAAiB;IAC5B,IAAIuB,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAe1B,OAAf,CAAX,CAAb;IAAA,IACE2B,SAAS,GAAG,EADd;IAGAA,SAAS,GAAGJ,MAAM,CAACK,GAAP,CAAYC,SAAD,IAAe;MACpC,IAAI7C,KAAK,GAAG8C,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,SAAlB,CAAZ;;MAEA,IAAI7C,KAAK,CAACY,UAAN,KAAqB,IAAzB,EAA+B;QAC7B,IAAIZ,KAAK,CAACG,MAAN,CAAaU,IAAb,KAAsB,KAA1B,EAAiC;UAC/B,IAAI,CAACb,KAAK,CAACoB,UAAX,EAAuB;YACrBpB,KAAK,CAACoB,UAAN,GAAmBpB,KAAK,CAACgD,MAAzB;YACAhD,KAAK,CAACW,cAAN,GAAuB,IAAvB;UACD;;UAED,IAAIX,KAAK,CAACoB,UAAV,EAAsB;YACpBpB,KAAK,CAACW,cAAN,GAAuB,IAAvB;UACD;;UAED,OAAOX,KAAP;QACD;;QAED,IAAIA,KAAK,CAACG,MAAN,CAAaU,IAAb,KAAsB,MAA1B,EAAkC;UAChC,IAAI,CAACb,KAAK,CAACoB,UAAX,EAAuB;YACrBpB,KAAK,CAACW,cAAN,GAAuB,KAAvB;UACD,CAFD,MAEO;YACLX,KAAK,CAACW,cAAN,GAAuB,IAAvB;UACD;;UAED,OAAOX,KAAP;QACD;;QAED,IAAIA,KAAK,CAACG,MAAN,CAAaU,IAAb,KAAsB,WAA1B,EAAuC;UACrCb,KAAK,CAACW,cAAN,GAAuB,KAAvB;UACA,OAAOX,KAAP;QACD;MACF,CA5BD,MA4BO;QACL,IACEA,KAAK,CAACG,MAAN,CAAaU,IAAb,KAAsB,aAAtB,IACAb,KAAK,CAACG,MAAN,CAAaU,IAAb,KAAsB,YAFxB,EAGE;UACAb,KAAK,CAACoB,UAAN,GAAmB,CAAnB;UACApB,KAAK,CAACW,cAAN,GAAuB,KAAvB;QACD,CAND,MAMO,IAAIX,KAAK,CAACG,MAAN,CAAaU,IAAb,KAAsB,YAA1B,EAAwC;UAC7Cb,KAAK,CAACW,cAAN,GAAuB,IAAvB;QACD;;QAED,OAAOX,KAAP;MACD;IACF,CA5CW,CAAZ;IA8CA,MAAMiD,cAAc,GAAGN,SAAS,CAACC,GAAV,CAAe5C,KAAD,IAAW;MAC9C,MAAMkD,WAAW,GAAGnD,KAAK,CAACM,YAAN,CAAmB8C,IAAnB,CACjBD,WAAD,IAAiBA,WAAW,CAACjC,EAAZ,KAAmBjB,KAAK,CAACiB,EADxB,CAApB;MAIA,IAAIiC,WAAJ,EAAiB,OAAOA,WAAP;MACjB,OAAOlD,KAAP;IACD,CAPsB,CAAvB;IASAD,KAAK,CAACK,SAAN,GAAkB6C,cAAlB;EACD,CAvJe;;EAwJhBG,2BAA2B,CAACrD,KAAD,EAAQiB,OAAR,EAAiB;IAC1CjB,KAAK,CAACK,SAAN,GAAkBY,OAAO,CAACN,MAAR,CAAgBV,KAAD,IAAW;MAC1C,IACEA,KAAK,CAACW,cAAN,KAAyB,KAAzB,KACCX,KAAK,CAACG,MAAN,CAAaU,IAAb,KAAsB,KAAtB,IAA+Bb,KAAK,CAACG,MAAN,CAAaU,IAAb,KAAsB,MADtD,CADF,EAGE;QACA;QACAb,KAAK,CAACG,MAAN,CAAakD,IAAb,GAAoB,WAApB;QACArD,KAAK,CAACG,MAAN,CAAaU,IAAb,GAAoB,WAApB;QACA,OAAO,IAAP;MACD,CARD,MAQO,IACLb,KAAK,CAACW,cAAN,KAAyB,IAAzB,IACAX,KAAK,CAACG,MAAN,CAAaU,IAAb,KAAsB,WAFjB,EAGL;QACA;QACAb,KAAK,CAACG,MAAN,CAAakD,IAAb,GAAoB,SAApB;QACArD,KAAK,CAACG,MAAN,CAAaU,IAAb,GAAoB,KAApB;QACA,OAAO,IAAP;MACD,CARM,MAQA;QACL,OAAO,IAAP;MACD;IACF,CApBiB,CAAlB;EAqBD,CA9Ke;;EAgLhByC,eAAe,CAACvD,KAAD,EAAQ;IAAEM;EAAF,CAAR,EAA0B;IACvCN,KAAK,CAACM,YAAN,GAAqBA,YAArB;EACD;;AAlLe,CAAlB;AAqLA,MAAMkD,OAAO,GAAG;EACdC,gBAAgB,CAACC,OAAD,EAAUzC,OAAV,EAAmB;IACjCyC,OAAO,CAACC,MAAR,CAAe,mBAAf,EAAoC1C,OAApC;IACAyC,OAAO,CAACC,MAAR,CAAe,UAAf;EACD,CAJa;;EAKd,MAAMC,cAAN,CAAqB;IAAED;EAAF,CAArB,EAAiCzC,EAAjC,EAAqC;IACnC,IAAI;MACF,MAAM;QAAE2C;MAAF,IAAW,MAAM9D,KAAK,CAAC+D,IAAN,CAAW,oCAAX,EAAiD;QACtE5C;MADsE,CAAjD,CAAvB;;MAGA,IAAI2C,IAAJ,EAAU;QACRF,MAAM,CAAC,eAAD,EAAkBE,IAAlB,CAAN;QACAF,MAAM,CAAC,UAAD,CAAN;MACD;IACF,CARD,CAQE,OAAOI,CAAP,EAAU;MACVC,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAAgDF,CAAhD;IACD;EACF,CAjBa;;EAkBdG,0BAA0B,CAACR,OAAD,EAAUS,GAAV,EAAe;IACvCpE,KAAK,CACF+D,IADH,CACQ,gDADR,EAC0D;MAAEK,GAAG,EAAEA;IAAP,CAD1D,EAEGC,IAFH,CAEQ,MAAM;MACVV,OAAO,CAACC,MAAR,CAAe,kBAAf;IACD,CAJH,EAKGU,KALH,CAKUC,KAAD,IAAW;MAChBN,OAAO,CAACC,GAAR,CAAY,uCAAZ,EAAqDK,KAArD;IACD,CAPH;EAQD,CA3Ba;;EA4BdC,0BAA0B,CAACb,OAAD,EAAUrD,SAAV,EAAqB;IAC7C;IACAqD,OAAO,CAACC,MAAR,CAAe,6BAAf,EAA8CtD,SAA9C;IACAN,KAAK,CACF+D,IADH,CACQ,gDADR,EAC0D;MACtDzD,SAAS,EAAEqD,OAAO,CAAC1D,KAAR,CAAcK;IAD6B,CAD1D,EAIG+D,IAJH,CAIQ,MAAM;MACVV,OAAO,CAACC,MAAR,CAAe,gBAAf;IACD,CANH,EAOGU,KAPH,CAOUC,KAAD,IAAW;MAChBN,OAAO,CAACC,GAAR,CAAY,4CAAZ,EAA0DK,KAA1D;IACD,CATH;EAUD,CAzCa;;EA0CdE,yBAAyB,CAACd,OAAD,EAAUe,KAAV,EAAiB;IACxC,IAAIf,OAAO,CAACgB,OAAR,CAAgBC,qBAAhB,CAAsC5D,MAA1C,EAAkD;MAChD2C,OAAO,CAACC,MAAR,CAAe,yBAAf,EAA0C,IAA1C,EAAgD;QAAEiB,IAAI,EAAE;MAAR,CAAhD;IACD;;IAED7E,KAAK,CACF+D,IADH,CACQ,+CADR,EACyD;MACrDK,GAAG,EAAET,OAAO,CAACgB,OAAR,CAAgBG,iBADgC;MAErDJ,KAAK,EAAEA,KAF8C;MAGrDK,aAAa,EAAEC,OAAO,CAACrB,OAAO,CAACgB,OAAR,CAAgBC,qBAAhB,CAAsC5D,MAAvC;IAH+B,CADzD,EAMGqD,IANH,CAMQ,MAAM;MACVV,OAAO,CAACC,MAAR,CAAe,kBAAf;IACD,CARH,EASGU,KATH,CASUC,KAAD,IAAW;MAChBN,OAAO,CAACC,GAAR,CAAY,2CAAZ,EAAyDK,KAAzD;IACD,CAXH;EAYD,CA3Da;;EA6DdU,yBAAyB,CAACtB,OAAD,EAAUS,GAAV,EAAe;IACtCpE,KAAK,CACF+D,IADH,CACQ,+CADR,EACyD;MAAEK,GAAG,EAAEA;IAAP,CADzD,EAEGC,IAFH,CAEQ,MAAM;MACVV,OAAO,CAACC,MAAR,CAAe,kBAAf;IACD,CAJH,EAKGU,KALH,CAKUC,KAAD,IAAW;MAChBN,OAAO,CAACC,GAAR,CAAY,uCAAZ,EAAqDK,KAArD;IACD,CAPH;EAQD,CAtEa;;EAuEdW,kBAAkB,CAACvB,OAAD,EAAUG,IAAV,EAAgB;IAChC9D,KAAK,CACF+D,IADH,CACQ,wCADR,EACkDD,IADlD,EAEGO,IAFH,CAEQ,MAAM;MACVV,OAAO,CAACC,MAAR,CAAe,kBAAf;IACD,CAJH,EAKGU,KALH,CAKUC,KAAD,IAAW;MAChBN,OAAO,CAACC,GAAR,CAAY,uCAAZ,EAAqDK,KAArD;IACD,CAPH;EAQD,CAhFa;;EAkFd;EACAf,eAAe,CAAC;IAAEI,MAAF;IAAU3D;EAAV,CAAD,EAAoB;IAAEC;EAAF,CAApB,EAA+B;IAC5C,MAAMK,YAAY,GAAG,EAArB;IACA,IAAI4E,eAAe,GAAG,KAAtB;IAEAlF,KAAK,CAACM,YAAN,CAAmB6E,OAAnB,CAA4BhC,WAAD,IAAiB;MAC1C,IAAIA,WAAW,CAACjC,EAAZ,KAAmBjB,KAAK,CAACiB,EAA7B,EAAiC;QAC/BgE,eAAe,GAAG,IAAlB;QACA5E,YAAY,CAAC8E,IAAb,CAAkBnF,KAAlB;MACD,CAHD,MAGO;QACLK,YAAY,CAAC8E,IAAb,CAAkBjC,WAAlB;MACD;IACF,CAPD;;IASA,IAAI,CAAC+B,eAAL,EAAsB;MACpB5E,YAAY,CAAC8E,IAAb,CAAkBnF,KAAlB;IACD;;IAED0D,MAAM,CAAC,iBAAD,EAAoB;MAAErD;IAAF,CAApB,CAAN;EACD,CArGa;;EAuGd+E,iBAAiB,CAAC;IAAE1B;EAAF,CAAD,EAAa;IAC5BA,MAAM,CAAC,iBAAD,EAAoB;MAAErD,YAAY,EAAE;IAAhB,CAApB,CAAN;EACD;;AAzGa,CAAhB;AA4GA,MAAMoE,OAAO,GAAG;EACdG,iBAAiB,EAAG7E,KAAD,IAAW;IAC5B,IAAI6E,iBAAiB,GAAG7E,KAAK,CAACK,SAAN,CAAgBwC,GAAhB,CAAqB5C,KAAD,IAAW;MACrD,IACEA,KAAK,CAACG,MAAN,CAAaU,IAAb,KAAsB,aAAtB,IACAb,KAAK,CAACW,cAAN,KAAyB,IAF3B,EAGE;QACA,OAAOX,KAAK,CAACiB,EAAb;MACD;IACF,CAPuB,CAAxB;IASA,OAAO2D,iBAAP;EACD,CAZa;EAadF,qBAAqB,EAAG3E,KAAD,IAAW;IAChC,IAAI2E,qBAAqB,GAAG3E,KAAK,CAACK,SAAN,CAAgBM,MAAhB,CAAwBV,KAAD,IAAW;MAC5D,IACEA,KAAK,CAACG,MAAN,CAAaU,IAAb,KAAsB,aAAtB,IACAb,KAAK,CAACW,cAAN,KAAyB,KAF3B,EAGE;QACA,OAAOX,KAAK,CAACiB,EAAb;MACD;IACF,CAP2B,CAA5B;IASA,OAAOyD,qBAAP;EACD,CAxBa;;EA0Bd;EACAW,mBAAmB,CAACtF,KAAD,EAAQ;IACzB,IAAI,CAACA,KAAK,CAACM,YAAN,CAAmBS,MAAxB,EAAgC;MAC9B,OAAOf,KAAK,CAACK,SAAb;IACD;;IAED,OAAOL,KAAK,CAACK,SAAb;EACD;;AAjCa,CAAhB;AAoCA,MAAMkF,OAAO,GAAG,EAAhB;AAEA,eAAe;EACbC,UAAU,EAAE,IADC;EAEbxF,KAFa;EAGbS,SAHa;EAIb+C,OAJa;EAKbkB,OALa;EAMba;AANa,CAAf"},"metadata":{},"sourceType":"module"}