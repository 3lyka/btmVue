{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport TimerIcon from '@/components/components-helpers/TimerIcon';\nimport CalendarIcon from '@/components/components-helpers/CalendarIcon';\nimport axios from '@/utils/axios';\nimport CalendarLotFormAddRegions from '@/components/views/trading-session/calendar/CalendarLotFormAddRegions';\nimport { mapState } from 'vuex';\nimport { ElDatePicker } from 'element-plus';\nimport IconClose from '@/components/components-helpers/IconClose.vue';\nimport TimeRangeSelect from '@/components/components-helpers/TimeRangeSelect.vue';\nimport ConfirmModal from '@/components/components-helpers/ConfirmModal.vue';\nimport { mapState as mapStatePinia } from 'pinia';\nimport { useUserStore } from '@/stores/user';\nconst CONFIRM_MODAL_TEXT = {\n  save: {\n    title: 'Сохранение изменений',\n    message: 'Сохранить изменения в лоте?',\n    confirmButtonText: 'Сохранить',\n    cancelButtonText: 'Отменить'\n  },\n  delete: {\n    title: 'Удаление лота',\n    message: 'Лот будет удален без возможности восстановления',\n    confirmButtonText: 'Удалить',\n    cancelButtonText: 'Отменить'\n  },\n  close: {\n    title: 'Уверены, что хотите закрыть?',\n    message: 'Все внесенные изменения будут потеряны',\n    confirmButtonText: 'Закрыть лот',\n    cancelButtonText: 'Продолжить редактирование'\n  }\n};\n\nfunction checkWeightValidator(rule, value, callback) {\n  if (!value) {\n    return callback(new Error('Укажите объем'));\n  } else {\n    callback();\n  }\n}\n\nfunction checkTimeEndValidator(rule, value, callback) {\n  const [lotStartDate, lotEndDate] = value;\n\n  if (!(lotStartDate & lotEndDate)) {\n    return callback(new Error('Выберите время'));\n  }\n\n  const selectedDateStart = new Date(this.ruleForm.dateStart);\n  const dateStartWithoutTime = new Date(selectedDateStart.getFullYear(), selectedDateStart.getMonth(), selectedDateStart.getDate());\n  const isStartDateToday = this.isToday.toLocaleDateString() === dateStartWithoutTime.toLocaleDateString();\n  const currentDate = new Date();\n  currentDate.setSeconds(0, 0);\n  const lotStartTime = new Date(lotStartDate);\n  const lotEndTime = new Date(lotEndDate);\n\n  if (!isStartDateToday) {\n    // нет проверки на конкретный день даты, т.к. добавление времени в запрос на edit и add делается в другом месте.\n    // поэтому достаточно сбросить время на 00:00.\n    currentDate.setTime(this.isToday);\n  }\n\n  const isEndTimeMoreThanStartTime = lotEndTime.getTime() < lotStartTime.getTime();\n  if (isEndTimeMoreThanStartTime) return callback(new Error('Время окончания не может быть раньше времени начала'));\n\n  if (currentDate.getTime() > lotStartTime.getTime() || currentDate.getTime() > lotEndTime.getTime()) {\n    callback(new Error('Время начала и окончания не может быть раньше текущего времени'));\n  } else {\n    callback();\n  }\n}\n\nfunction checkFirstRegionSelected(rule, value, callback) {\n  const isAnyRegionSelected = value?.some(region => region?.regionIds?.length);\n\n  if (!isAnyRegionSelected) {\n    return callback(new Error('Выберите регион'));\n  } else {\n    callback();\n  }\n}\n\nexport default {\n  name: 'CalendarLotForm',\n  emits: ['onSelectRegions', 'onChangeRegions'],\n  props: {\n    isCalendarLotFormOpen: Boolean\n  },\n  data: ctx => ({\n    resetFormKey: 1,\n    confirmModal: {\n      isVisible: false,\n      text: { ...CONFIRM_MODAL_TEXT.delete\n      },\n      confirmCb: null,\n      declineCb: null\n    },\n    regionListResponse: [],\n    button: {\n      submit: {\n        text: 'Создать'\n      },\n      close: {\n        text: 'Отменить',\n        code: 'close'\n      }\n    },\n    factoryList: {},\n    productsList: [],\n    id: null,\n    method: 'addLot',\n    isRuleFormEdited: false,\n    ruleForm: {\n      dateStart: null,\n      timeInterval: [],\n      shippingDate: null,\n      factoryId: '',\n      productId: '',\n      weight: 0,\n      multiplicity: 0,\n      isMumultiplicityDisabled: true,\n      regions: [],\n      minNomenclaturePrice: 0,\n      comment: ''\n    },\n    rules: {\n      dateStart: [{\n        type: 'date',\n        required: true,\n        message: 'Выберите дату',\n        trigger: 'submit'\n      }],\n      timeInterval: [{\n        validator: checkTimeEndValidator.bind(ctx),\n        trigger: 'change'\n      }],\n      shippingDate: [{\n        type: 'date',\n        required: true,\n        message: 'Выберите дату',\n        trigger: 'blur'\n      }],\n      factoryId: [{\n        required: true,\n        message: 'Выберите базис отгрузки',\n        trigger: 'change'\n      }],\n      productId: [{\n        required: true,\n        message: 'Выберите номенклатуру',\n        trigger: 'change'\n      }],\n      weight: [{\n        validator: checkWeightValidator,\n        trigger: 'submit'\n      }],\n      regions: [{\n        required: true,\n        validator: checkFirstRegionSelected,\n        trigger: 'change'\n      }]\n    }\n  }),\n  computed: { ...mapStatePinia(useUserStore, ['isTrader', 'isUmiop']),\n    ...mapStatePinia(useUserStore, {\n      userId: state => state.user?.userId\n    }),\n    ...mapState({\n      lot: state => state.lot\n    }),\n\n    customTimePrefix() {\n      return TimerIcon;\n    },\n\n    customCalendarPrefix() {\n      return CalendarIcon;\n    },\n\n    isDisable() {\n      return this.$store.state.lot.isCalendarLotFormDisable;\n    },\n\n    isToday() {\n      return new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate());\n    },\n\n    hourNow() {\n      return new Date().getHours();\n    },\n\n    lotTitle() {\n      const lotId = this.$store?.state?.lot?.lot?.id;\n      if (lotId) return `Лот №${lotId}`;\n      return 'Лот';\n    }\n\n  },\n\n  mounted() {\n    axios.post('rest/regions/getList/').then(response => {\n      this.regionListResponse = [{\n        ID: 'all',\n        NAME: 'Все регионы'\n      }].concat(response.data);\n    }).catch(error => {\n      console.log('getRegionsList error => ', error);\n    }).finally(() => this.loading = false);\n    this.$store.subscribe(mutations => {\n      if (mutations.type === 'lot/lotFormEdit') {\n        this.resetRuleForm({\n          isFormEdit: true\n        });\n        this.button.submit.text = 'Сохранить';\n        this.button.close.text = 'Удалить';\n        this.button.close.code = 'delete';\n        this.clearEmptyItemValidate('ruleForm', 'productId');\n        const dateStart = new Date(this.$store.state.lot.lot.dateStart);\n        const timeInterval = [];\n        timeInterval[0] = dateStart;\n        timeInterval[1] = new Date(this.$store.state.lot.lot.dateEnd);\n        let arShippingDate = [];\n        arShippingDate = this.$store.state.lot.lot.shippingDate.split('.');\n        const shippingDate = new Date(arShippingDate[2], arShippingDate[1] - 1, arShippingDate[0]);\n        this.id = this.$store.state.lot.lot.id;\n        this.method = 'editLot'; // if(mutations.type === 'lot/setLotForm') {\n        //   this.method = 'addLot'\n        // }\n\n        this.ruleForm.dateStart = dateStart;\n        this.ruleForm.timeInterval = timeInterval;\n        this.ruleForm.shippingDate = shippingDate;\n        this.ruleForm.factoryId = this.$store.state.lot.lot.factory.id;\n        this.ruleForm.productId = this.$store.state.lot.lot.product.id;\n        this.ruleForm.weight = Number(this.$store.state.lot.lot.weight);\n        this.ruleForm.multiplicity = Number(this.$store.state.lot.lot.multiplicity);\n        this.ruleForm.regions = this.$store.state.lot.lot.regions; //todo: добавить массив регионов\n\n        this.ruleForm.comment = this.$store.state.lot.lot.comment;\n      }\n\n      if (mutations.type === 'lot/lotFormClose' || mutations.type === 'lot/lotFormSuccess') {\n        this.resetRuleForm();\n      } // mutations.type === 'lot/getListSuccess' вызывается при нажатии \"продать товар\", отслеживаем здесь и заполняем данные карточки создания из хранилища.\n\n\n      if (mutations.type === 'lot/getListSuccess' && this.$store.state.lot.isSaleButtonClicked) {\n        this.resetRuleForm({\n          isSaleButtonClicked: true\n        });\n        this.id = null;\n        this.method = 'addLot'; // let dateStart = new Date()\n        // let timeInterval = []\n        // timeInterval[0] = dateStart\n        // timeInterval[1] = new Date(storeLot.dateEnd)\n\n        let arShippingDate = [];\n        arShippingDate = this.$store.state.lot.lot.shippingDate.split('.');\n        const shippingDate = new Date(arShippingDate[2], arShippingDate[1] - 1, arShippingDate[0]);\n        this.ruleForm.dateStart = new Date(this.$store.state.lot.lot.dateStart);\n        this.ruleForm.timeInterval = [];\n        this.ruleForm.shippingDate = shippingDate;\n        this.ruleForm.factoryId = this.$store.state.lot.lot.factory.id;\n        this.ruleForm.productId = this.$store.state.lot.lot.product.id;\n        this.ruleForm.weight = Number(this.$store.state.lot.lot.weight);\n        this.ruleForm.multiplicity = Number(this.$store.state.lot.lot.multiplicity);\n        this.ruleForm.regions = this.$store.state.lot.lot.regions; //todo: добавить массив регионов\n\n        this.ruleForm.comment = this.$store.state.lot.lot.comment;\n        this.ruleForm.saleLotId = this.$store.state.lot.lot.id;\n        this.$store.state.lot.lot.id = null;\n      }\n\n      if (mutations.type === 'lot/lotFormStart') {\n        this.resetRuleForm();\n        this.clearEmptyItemValidate('ruleForm', 'productId');\n        this.ruleForm.dateStart = this.$store.state.lot.createLotDate;\n      }\n    });\n    this.getFactoryListByUserId(this.userId);\n  },\n\n  unmounted() {\n    this.$store.commit('lot/setIsSaleButtonClicked', {\n      value: false\n    });\n  },\n\n  methods: {\n    resetRuleForm(options) {\n      this.$store.commit('lot/setIsSaleButtonClicked', {\n        value: options?.isSaleButtonClicked || false\n      });\n      this.$refs?.ruleForm?.resetFields();\n\n      if (options?.isFormEdit || options?.isSaleButtonClicked || false) {\n        this.resetFormKey++;\n      }\n\n      this.id = null;\n      this.method = 'addLot';\n      this.ruleForm.dateStart = null;\n      this.ruleForm.timeInterval = [];\n      this.ruleForm.shippingDate = '';\n      this.ruleForm.factoryId = '';\n      this.ruleForm.productId = '';\n      this.ruleForm.weight = 0;\n      this.ruleForm.multiplicity = 1;\n      this.ruleForm.regions = [];\n      this.ruleForm.comment = '';\n      this.ruleForm.saleLotId = '';\n      this.button.submit.text = 'Создать';\n      this.button.close.text = 'Отменить';\n      this.button.close.code = 'close';\n      this.$store.state.lot.isCalendarLotFormDisable = false;\n    },\n\n    // setWeight(weight) {\n    //   if(weight % this.ruleForm.multiplicity === 0) {\n    //     this.ruleForm.weight = weight\n    //   } else {\n    //     this.ruleForm.weight = this.ruleForm.weight - weight % this.ruleForm.multiplicity\n    //   }\n    // },\n    onChangeRegions(data) {\n      this.ruleForm.regions = data;\n      this.setIsRuleFormEdited();\n    },\n\n    clearValidate(formName) {\n      this.$refs[formName].clearValidate();\n    },\n\n    clearEmptyItemValidate(formName, itemName) {\n      if (this.productsList) {\n        itemName = {\n          props: itemName\n        };\n        this.$refs[formName]?.clearValidate(itemName);\n      }\n    },\n\n    setFactory(factoryId) {\n      this.clearProductId();\n      this.ruleForm.weight = 0;\n      this.setMultiplicity(factoryId);\n      this.setIsRuleFormEdited();\n    },\n\n    setMultiplicity(factoryId) {\n      const arMultiplicity = this.factoryList.map(factory => {\n        if (factory.ID === factoryId) {\n          return factory.MULTIPLICITY;\n        }\n      }).filter(element => element !== undefined && element !== null);\n      this.ruleForm.multiplicity = Number(...arMultiplicity) ? Number(...arMultiplicity) : 1;\n    },\n\n    clearProductId() {\n      this.ruleForm.productId = '';\n    },\n\n    getFactoryListByUserId(id) {\n      axios.post('rest/factory/getListByUserId/', {\n        userId: id\n      }).then(response => {\n        this.factoryList = response.data;\n      }).catch(error => {\n        console.log('getFactoryListByUserId error => ', error);\n        return {};\n      }).finally(() => this.loading = false);\n    },\n\n    getProductListByFactoryId(factoryId) {\n      if (factoryId) {\n        axios.post('rest/products/getByFactoryId/', {\n          id: factoryId\n        }).then(response => {\n          this.productsList = response.data.sort((a, b) => a.SHORT_NAME.localeCompare(b.SHORT_NAME, 'ru', {\n            numeric: true\n          }));\n          this.ruleForm.minNomenclaturePrice = this.productsList.map(p => {\n            if (p.ID === this.ruleForm.productId) {\n              return p.MIN_PRICE ? Number(p.MIN_PRICE) : 0;\n            }\n          }).filter(element => element !== undefined);\n        }).catch(error => {\n          console.log('getProductsList error => ', error);\n          this.productsList = {};\n        }).finally(() => {\n          this.loading = false; // this.setIsRuleFormEdited()\n        });\n      }\n    },\n\n    addArrLot() {\n      const arTimeStartAndEnd = [];\n      let dateStart = '';\n      let dateEnd = '';\n      let shippingDate = '';\n      let arRegions = [];\n\n      if (this.ruleForm.timeInterval !== null) {\n        this.ruleForm.timeInterval.forEach(function (date) {\n          let min = date.getMinutes();\n          min = ('0' + min).slice(-2);\n          let hours = date.getHours();\n          hours = ('0' + hours).slice(-2);\n          arTimeStartAndEnd.push(hours + ':' + min + ':00');\n        });\n      }\n\n      if (this.ruleForm.dateStart !== null) {\n        dateStart = this.ruleForm.dateStart.toLocaleDateString('ru-RU') + ' ' + arTimeStartAndEnd[0];\n        dateEnd = this.ruleForm.dateStart.toLocaleDateString('ru-RU') + ' ' + arTimeStartAndEnd[1];\n      }\n\n      if (this.ruleForm.shippingDate !== null) {\n        shippingDate = this.ruleForm.shippingDate.toLocaleDateString('ru-RU');\n      }\n\n      arRegions = this.ruleForm.regions?.map(region => {\n        // для отправки приводим [{id: '3', name: 'Москва'}, {id: '4', name: 'Нижний новгород'] в [3, 4];\n        const regionIds = region?.regionIds?.map(regionId => {\n          if (typeof regionId === 'string') return regionId;\n          if (typeof regionId === 'object' && regionId?.id) return regionId.id;\n          return regionId;\n        });\n        return {\n          priceMin: region?.priceMin,\n          regionIds: regionIds || region.regionIds\n        };\n      });\n      return {\n        id: this.id,\n        userId: this.userId,\n        dateStart: dateStart,\n        dateEnd: dateEnd,\n        shippingDate: shippingDate,\n        factoryId: this.ruleForm.factoryId,\n        productId: this.ruleForm.productId,\n        weight: Number(this.ruleForm.weight),\n        multiplicity: Number(this.ruleForm.multiplicity),\n        regions: arRegions,\n        comment: this.ruleForm.comment,\n        saleLotId: this.ruleForm.saleLotId\n      };\n    },\n\n    makeRange(start, end) {\n      const result = [];\n\n      for (let i = start; i <= end; i++) {\n        result.push(i);\n      }\n\n      return result;\n    },\n\n    disabledHours() {\n      if (this.ruleForm.dateStart) {\n        if (this.ruleForm.dateStart.toLocaleDateString() === this.isToday.toLocaleDateString()) {\n          return this.makeRange(0, this.hourNow - 1);\n        } else {\n          return [];\n        }\n      } else {\n        return [];\n      }\n    },\n\n    disabledMinutes(hour) {\n      if (hour === this.hourNow) {\n        const minuteStart = new Date().getMinutes() - 1;\n        return this.makeRange(0, minuteStart);\n      }\n    },\n\n    disabledDate(day) {\n      return day.getTime() < this.isToday.getTime() && day.getTime() !== this.isToday.getTime();\n    },\n\n    disabledShippingDate(day) {\n      if (this.ruleForm.dateStart) {\n        return day.getTime() < this.ruleForm.dateStart.getTime() && day.getTime() !== this.ruleForm.dateStart.getTime();\n      } else {\n        return day.getTime() < this.isToday.getTime() && day.getTime() !== this.isToday.getTime();\n      }\n    },\n\n    disabledWeight(factoryId) {\n      if (factoryId) {\n        return false;\n      }\n\n      return true;\n    },\n\n    onSubmit(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          this.$store.state.lot.isCalendarLotFormDisable = true;\n\n          const submitCallback = () => {\n            this.handleSubmit();\n            this.$store.state.lot.isCalendarLotFormDisable = false;\n            this.closeForm();\n          };\n\n          if (this.button.submit.text === 'Создать') return submitCallback();\n          if (!this.isRuleFormEdited) return submitCallback();\n          this.confirmModal = {\n            isVisible: true,\n            text: { ...CONFIRM_MODAL_TEXT.save\n            },\n            confirmCb: () => {\n              submitCallback();\n            },\n            declineCb: () => {\n              this.$store.state.lot.isCalendarLotFormDisable = false;\n            }\n          };\n        } else {\n          console.log('CalendarLotForm validate error ');\n          return false;\n        }\n      });\n    },\n\n    handleSubmit() {\n      if (this.method === 'addLot') {\n        this.$store.dispatch('lot/add', this.addArrLot());\n      } else if (this.method === 'editLot') {\n        this.$store.dispatch('lot/edit', this.addArrLot());\n      }\n    },\n\n    clickClose() {\n      if (this.button.close.code === 'delete') {\n        return this.deleteLot(); // this.closeForm()\n      }\n\n      if (this.isRuleFormEdited && this.button.close.code === 'close') {\n        return this.confirmModal = {\n          isVisible: true,\n          text: { ...CONFIRM_MODAL_TEXT.close\n          },\n          confirmCb: () => {\n            this.closeForm();\n          }\n        };\n      }\n\n      this.closeForm();\n    },\n\n    deleteLot() {\n      this.confirmModal = {\n        isVisible: true,\n        text: { ...CONFIRM_MODAL_TEXT.delete\n        },\n        confirmCb: () => {\n          this.$store.dispatch('lot/delete', {\n            id: this.id\n          });\n          this.closeForm();\n        }\n      };\n    },\n\n    closeForm() {\n      this.resetFormKey++;\n      this.$store.commit('lot/lotFormClose');\n      this.clearValidate('ruleForm');\n      this.setIsRuleFormEdited(false);\n    },\n\n    /**\r\n     * @param {'confirm' | 'decline'} action\r\n     */\n    handleConfirmAction(action) {\n      if (action === 'confirm' && this.confirmModal.confirmCb) {\n        return this.confirmModal.confirmCb();\n      }\n\n      if (action === 'decline' && this.confirmModal.declineCb) {\n        return this.confirmModal.declineCb();\n      } // ElMessage({ type: 'info', message: 'Действие отменено' });\n\n    },\n\n    closeFormWithConfirm() {\n      if (this.isRuleFormEdited) {\n        return this.confirmModal = {\n          isVisible: true,\n          text: { ...CONFIRM_MODAL_TEXT.close\n          },\n          confirmCb: () => {\n            this.closeForm();\n          }\n        };\n      }\n\n      this.closeForm();\n    },\n\n    setIsRuleFormEdited(isEdited = true) {\n      this.isRuleFormEdited = Boolean(isEdited);\n    }\n\n  },\n  components: {\n    CalendarLotFormAddRegions,\n    ElDatePicker,\n    IconClose,\n    TimeRangeSelect,\n    ConfirmModal\n  }\n};","map":{"version":3,"mappings":"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","names":["TimerIcon","CalendarIcon","axios","CalendarLotFormAddRegions","mapState","ElDatePicker","IconClose","TimeRangeSelect","ConfirmModal","mapStatePinia","useUserStore","CONFIRM_MODAL_TEXT","save","title","message","confirmButtonText","cancelButtonText","delete","close","checkWeightValidator","rule","value","callback","Error","checkTimeEndValidator","lotStartDate","lotEndDate","selectedDateStart","Date","ruleForm","dateStart","dateStartWithoutTime","getFullYear","getMonth","getDate","isStartDateToday","isToday","toLocaleDateString","currentDate","setSeconds","lotStartTime","lotEndTime","setTime","isEndTimeMoreThanStartTime","getTime","checkFirstRegionSelected","isAnyRegionSelected","some","region","regionIds","length","name","emits","props","isCalendarLotFormOpen","Boolean","data","ctx","resetFormKey","confirmModal","isVisible","text","confirmCb","declineCb","regionListResponse","button","submit","code","factoryList","productsList","id","method","isRuleFormEdited","timeInterval","shippingDate","factoryId","productId","weight","multiplicity","isMumultiplicityDisabled","regions","minNomenclaturePrice","comment","rules","type","required","trigger","validator","bind","computed","userId","state","user","lot","customTimePrefix","customCalendarPrefix","isDisable","$store","isCalendarLotFormDisable","hourNow","getHours","lotTitle","lotId","mounted","post","then","response","ID","NAME","concat","catch","error","console","log","finally","loading","subscribe","mutations","resetRuleForm","isFormEdit","clearEmptyItemValidate","dateEnd","arShippingDate","split","factory","product","Number","isSaleButtonClicked","saleLotId","createLotDate","getFactoryListByUserId","unmounted","commit","methods","options","$refs","resetFields","onChangeRegions","setIsRuleFormEdited","clearValidate","formName","itemName","setFactory","clearProductId","setMultiplicity","arMultiplicity","map","MULTIPLICITY","filter","element","undefined","getProductListByFactoryId","sort","a","b","SHORT_NAME","localeCompare","numeric","p","MIN_PRICE","addArrLot","arTimeStartAndEnd","arRegions","forEach","date","min","getMinutes","slice","hours","push","regionId","priceMin","makeRange","start","end","result","i","disabledHours","disabledMinutes","hour","minuteStart","disabledDate","day","disabledShippingDate","disabledWeight","onSubmit","validate","valid","submitCallback","handleSubmit","closeForm","dispatch","clickClose","deleteLot","handleConfirmAction","action","closeFormWithConfirm","isEdited","components"],"sourceRoot":"","sources":["C:\\openserver\\domains\\U190001472_BitumMap_Vue\\src\\components\\views\\trading-session\\calendar\\CalendarLotForm.vue"],"sourcesContent":["<template>\r\n  <aside class=\"aside\">\r\n    <ElForm :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleForm\" class=\"lot-form\">\r\n      <div class=\"lot-form__header\">\r\n        <p class=\"lot-form__header-title\">\r\n          {{ lotTitle }}\r\n        </p>\r\n        <ElButton\r\n          class=\"lot-form__header-close\"\r\n          text\r\n          @click=\"closeFormWithConfirm\"\r\n        >\r\n          <IconClose />\r\n        </ElButton>\r\n      </div>\r\n      <div class=\"lot-form__content\">\r\n        <h3 class=\"lot-form__title\">Даты</h3>\r\n        <div class=\"lot-form__item\" v-if=\"isCalendarLotFormOpen\">\r\n          <div class=\"lot-form__item-box\">\r\n            <h4 class=\"lot-form__item-box-subtitle\">Торги</h4>\r\n            <div class=\"period-interval\">\r\n              <ElFormItem prop=\"dateStart\">\r\n                <ElDatePicker\r\n                  type=\"date\"\r\n                  class=\"period-interval__item\"\r\n                  :prefix-icon=\"customCalendarPrefix\"\r\n                  format=\"DD.MM.YYYY\"\r\n                  v-model=\"ruleForm.dateStart\"\r\n                  :disabled-date=\"disabledDate\"\r\n                  placement=\"top-start\"\r\n                  :disabled=\"isUmiop\"\r\n                  @change=\"setIsRuleFormEdited\"\r\n                />\r\n              </ElFormItem>\r\n              <ElFormItem prop=\"timeInterval\">\r\n                <TimeRangeSelect\r\n                  class=\"period-interval__item\"\r\n                  v-model=\"ruleForm.timeInterval\"\r\n                  :disabled=\"isUmiop\"\r\n                  @change=\"setIsRuleFormEdited\"\r\n                />\r\n              </ElFormItem>\r\n            </div>\r\n          </div>\r\n          <div class=\"lot-form__item-box\">\r\n            <h4 class=\"lot-form__item-box-subtitle\">Отгрузка</h4>\r\n            <ElFormItem prop=\"shippingDate\">\r\n              <ElDatePicker\r\n                class=\"period-interval__item\"\r\n                :prefix-icon=\"customCalendarPrefix\"\r\n                format=\"DD.MM.YYYY\"\r\n                v-model=\"ruleForm.shippingDate\"\r\n                :disabled-date=\"disabledShippingDate\"\r\n                :disabled=\"isUmiop\"\r\n                @change=\"setIsRuleFormEdited\"\r\n              />\r\n            </ElFormItem>\r\n          </div>\r\n        </div>\r\n        <h3 class=\"lot-form__title\">Продукт</h3>\r\n        <div class=\"lot-form__item\">\r\n          <div class=\"lot-form__item-box\">\r\n            <h4 class=\"lot-form__item-box-subtitle\">Базис отгрузки</h4>\r\n            <div class=\"basis\">\r\n              <ElFormItem prop=\"factoryId\">\r\n                <ElSelect\r\n                  class=\"basis__select\"\r\n                  v-model=\"ruleForm.factoryId\"\r\n                  @change=\"setFactory($event)\"\r\n                  :disabled=\"\r\n                    lot.isSaleButtonClicked || lot.lot.isResold || isUmiop\r\n                  \"\r\n                >\r\n                  <ElOption\r\n                    v-for=\"factory in factoryList\"\r\n                    :key=\"factory.ID\"\r\n                    :label=\"factory.SHORT_NAME || factory.NAME\"\r\n                    :value=\"factory.ID\"\r\n                  />\r\n                </ElSelect>\r\n              </ElFormItem>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"lot-form__item-box\">\r\n            <h4 class=\"lot-form__item-box-subtitle\">Номенклатура</h4>\r\n            <div class=\"mark-bm\">\r\n              <ElFormItem prop=\"productId\">\r\n                <ElSelect\r\n                  class=\"mark-bm__select\"\r\n                  v-model=\"ruleForm.productId\"\r\n                  filterable\r\n                  :change=\"getProductListByFactoryId(this.ruleForm.factoryId)\"\r\n                  :disabled=\"\r\n                    lot.isSaleButtonClicked || lot.lot.isResold || isUmiop\r\n                  \"\r\n                >\r\n                  <ElOption\r\n                    v-for=\"product in productsList\"\r\n                    :key=\"product.ID\"\r\n                    :label=\"product.SHORT_NAME || product.SHORT_NAME\"\r\n                    :value=\"product.ID\"\r\n                  />\r\n                </ElSelect>\r\n              </ElFormItem>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"lot-form__item\">\r\n          <div class=\"lot-form__item-box\">\r\n            <h4 class=\"lot-form__item-box-subtitle\">Объем, т</h4>\r\n            <div class=\"prepend\">\r\n              <ElFormItem prop=\"weight\">\r\n                <ElInputNumber\r\n                  type=\"number\"\r\n                  class=\"prepend__select\"\r\n                  v-model.number=\"ruleForm.weight\"\r\n                  :min=\"0\"\r\n                  :max=\"999999\"\r\n                  :step=\"ruleForm.multiplicity\"\r\n                  step-strictly\r\n                  :disabled=\"disabledWeight(ruleForm.factoryId) || isUmiop\"\r\n                  @change=\"setIsRuleFormEdited\"\r\n                />\r\n              </ElFormItem>\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            v-if=\"ruleForm.factoryId\"\r\n            class=\"lot-form__item-box lot-form__multiplicity\"\r\n          >\r\n            <h4 class=\"lot-form__item-box-subtitle\">\r\n              Кратность <label>{{ ruleForm.multiplicity }} т</label>\r\n            </h4>\r\n          </div>\r\n        </div>\r\n        <h3 class=\"lot-form__title\">Регион продаж</h3>\r\n        <div class=\"lot-form__item\">\r\n          <CalendarLotFormAddRegions\r\n            :key=\"resetFormKey\"\r\n            :regionListResponse=\"regionListResponse\"\r\n            :minNomenclaturePrice=\"this.ruleForm.minNomenclaturePrice\"\r\n            :currentRegions=\"this.ruleForm.regions\"\r\n            @onChangeRegions=\"onChangeRegions\"\r\n          />\r\n        </div>\r\n        <div class=\"comment-form\">\r\n          <div class=\"lot-form__item-box-subtitle\">\r\n            <h4 class=\"lot-form__item-box-subtitle\">Комментарий для КА</h4>\r\n          </div>\r\n          <ElFormItem>\r\n            <ElInput\r\n              v-model=\"ruleForm.comment\"\r\n              type=\"textarea\"\r\n              :rows=\"3\"\r\n              placeholder=\"Введите данные...\"\r\n              :disabled=\"isUmiop\"\r\n              @change=\"setIsRuleFormEdited\"\r\n            />\r\n          </ElFormItem>\r\n        </div>\r\n      </div>\r\n      <div class=\"lot-form__footer\">\r\n        <div class=\"lot-form__submit\">\r\n          <ElButton\r\n            type=\"primary\"\r\n            @click=\"onSubmit('ruleForm')\"\r\n            class=\"lot-form__submit-button\"\r\n            :disabled=\"isDisable || isUmiop\"\r\n          >\r\n            {{ button.submit.text }}\r\n          </ElButton>\r\n          <ElButton\r\n            class=\"lot-form__submit-button-close\"\r\n            @click=\"clickClose\"\r\n            :disabled=\"isUmiop\"\r\n          >\r\n            {{ button.close.text }}\r\n          </ElButton>\r\n        </div>\r\n      </div>\r\n\r\n      <ConfirmModal\r\n        v-model=\"confirmModal.isVisible\"\r\n        v-bind=\"confirmModal.text\"\r\n        @handleAction=\"handleConfirmAction\"\r\n        ref=\"confirmModal\"\r\n      />\r\n    </ElForm>\r\n  </aside>\r\n</template>\r\n\r\n<script>\r\nimport TimerIcon from '@/components/components-helpers/TimerIcon';\r\nimport CalendarIcon from '@/components/components-helpers/CalendarIcon';\r\nimport axios from '@/utils/axios';\r\nimport CalendarLotFormAddRegions from '@/components/views/trading-session/calendar/CalendarLotFormAddRegions';\r\nimport { mapState } from 'vuex';\r\nimport { ElDatePicker } from 'element-plus';\r\nimport IconClose from '@/components/components-helpers/IconClose.vue';\r\nimport TimeRangeSelect from '@/components/components-helpers/TimeRangeSelect.vue';\r\nimport ConfirmModal from '@/components/components-helpers/ConfirmModal.vue';\r\nimport { mapState as mapStatePinia } from 'pinia';\r\nimport { useUserStore } from '@/stores/user';\r\n\r\nconst CONFIRM_MODAL_TEXT = {\r\n  save: {\r\n    title: 'Сохранение изменений',\r\n    message: 'Сохранить изменения в лоте?',\r\n    confirmButtonText: 'Сохранить',\r\n    cancelButtonText: 'Отменить',\r\n  },\r\n  delete: {\r\n    title: 'Удаление лота',\r\n    message: 'Лот будет удален без возможности восстановления',\r\n    confirmButtonText: 'Удалить',\r\n    cancelButtonText: 'Отменить',\r\n  },\r\n  close: {\r\n    title: 'Уверены, что хотите закрыть?',\r\n    message: 'Все внесенные изменения будут потеряны',\r\n    confirmButtonText: 'Закрыть лот',\r\n    cancelButtonText: 'Продолжить редактирование',\r\n  },\r\n};\r\n\r\nfunction checkWeightValidator(rule, value, callback) {\r\n  if (!value) {\r\n    return callback(new Error('Укажите объем'));\r\n  } else {\r\n    callback();\r\n  }\r\n}\r\n\r\nfunction checkTimeEndValidator(rule, value, callback) {\r\n  const [lotStartDate, lotEndDate] = value;\r\n\r\n  if (!(lotStartDate & lotEndDate)) {\r\n    return callback(new Error('Выберите время'));\r\n  }\r\n\r\n  const selectedDateStart = new Date(this.ruleForm.dateStart);\r\n  const dateStartWithoutTime = new Date(\r\n    selectedDateStart.getFullYear(),\r\n    selectedDateStart.getMonth(),\r\n    selectedDateStart.getDate()\r\n  );\r\n  const isStartDateToday =\r\n    this.isToday.toLocaleDateString() ===\r\n    dateStartWithoutTime.toLocaleDateString();\r\n\r\n  const currentDate = new Date();\r\n  currentDate.setSeconds(0, 0);\r\n\r\n  const lotStartTime = new Date(lotStartDate);\r\n  const lotEndTime = new Date(lotEndDate);\r\n\r\n  if (!isStartDateToday) {\r\n    // нет проверки на конкретный день даты, т.к. добавление времени в запрос на edit и add делается в другом месте.\r\n    // поэтому достаточно сбросить время на 00:00.\r\n    currentDate.setTime(this.isToday);\r\n  }\r\n\r\n  const isEndTimeMoreThanStartTime =\r\n    lotEndTime.getTime() < lotStartTime.getTime();\r\n  if (isEndTimeMoreThanStartTime)\r\n    return callback(\r\n      new Error('Время окончания не может быть раньше времени начала')\r\n    );\r\n\r\n  if (\r\n    currentDate.getTime() > lotStartTime.getTime() ||\r\n    currentDate.getTime() > lotEndTime.getTime()\r\n  ) {\r\n    callback(\r\n      new Error(\r\n        'Время начала и окончания не может быть раньше текущего времени'\r\n      )\r\n    );\r\n  } else {\r\n    callback();\r\n  }\r\n}\r\n\r\nfunction checkFirstRegionSelected(rule, value, callback) {\r\n  const isAnyRegionSelected = value?.some(\r\n    (region) => region?.regionIds?.length\r\n  );\r\n\r\n  if (!isAnyRegionSelected) {\r\n    return callback(new Error('Выберите регион'));\r\n  } else {\r\n    callback();\r\n  }\r\n}\r\n\r\nexport default {\r\n  name: 'CalendarLotForm',\r\n  emits: ['onSelectRegions', 'onChangeRegions'],\r\n\r\n  props: {\r\n    isCalendarLotFormOpen: Boolean,\r\n  },\r\n\r\n  data: (ctx) => ({\r\n    resetFormKey: 1,\r\n\r\n    confirmModal: {\r\n      isVisible: false,\r\n      text: { ...CONFIRM_MODAL_TEXT.delete },\r\n      confirmCb: null,\r\n      declineCb: null,\r\n    },\r\n\r\n    regionListResponse: [],\r\n    button: {\r\n      submit: {\r\n        text: 'Создать',\r\n      },\r\n      close: {\r\n        text: 'Отменить',\r\n        code: 'close',\r\n      },\r\n    },\r\n    factoryList: {},\r\n    productsList: [],\r\n    id: null,\r\n\r\n    method: 'addLot',\r\n    isRuleFormEdited: false,\r\n    ruleForm: {\r\n      dateStart: null,\r\n      timeInterval: [],\r\n      shippingDate: null,\r\n      factoryId: '',\r\n      productId: '',\r\n      weight: 0,\r\n      multiplicity: 0,\r\n      isMumultiplicityDisabled: true,\r\n      regions: [],\r\n      minNomenclaturePrice: 0,\r\n      comment: '',\r\n    },\r\n    rules: {\r\n      dateStart: [\r\n        {\r\n          type: 'date',\r\n          required: true,\r\n          message: 'Выберите дату',\r\n          trigger: 'submit',\r\n        },\r\n      ],\r\n      timeInterval: [\r\n        {\r\n          validator: checkTimeEndValidator.bind(ctx),\r\n          trigger: 'change',\r\n        },\r\n      ],\r\n      shippingDate: [\r\n        {\r\n          type: 'date',\r\n          required: true,\r\n          message: 'Выберите дату',\r\n          trigger: 'blur',\r\n        },\r\n      ],\r\n      factoryId: [\r\n        {\r\n          required: true,\r\n          message: 'Выберите базис отгрузки',\r\n          trigger: 'change',\r\n        },\r\n      ],\r\n      productId: [\r\n        {\r\n          required: true,\r\n          message: 'Выберите номенклатуру',\r\n          trigger: 'change',\r\n        },\r\n      ],\r\n      weight: [\r\n        {\r\n          validator: checkWeightValidator,\r\n          trigger: 'submit',\r\n        },\r\n      ],\r\n      regions: [\r\n        {\r\n          required: true,\r\n          validator: checkFirstRegionSelected,\r\n          trigger: 'change',\r\n        },\r\n      ],\r\n    },\r\n  }),\r\n  computed: {\r\n    ...mapStatePinia(useUserStore, ['isTrader', 'isUmiop']),\r\n    ...mapStatePinia(useUserStore, { userId: (state) => state.user?.userId }),\r\n\r\n    ...mapState({\r\n      lot: (state) => state.lot,\r\n    }),\r\n\r\n    customTimePrefix() {\r\n      return TimerIcon;\r\n    },\r\n    customCalendarPrefix() {\r\n      return CalendarIcon;\r\n    },\r\n    isDisable() {\r\n      return this.$store.state.lot.isCalendarLotFormDisable;\r\n    },\r\n    isToday() {\r\n      return new Date(\r\n        new Date().getFullYear(),\r\n        new Date().getMonth(),\r\n        new Date().getDate()\r\n      );\r\n    },\r\n    hourNow() {\r\n      return new Date().getHours();\r\n    },\r\n    lotTitle() {\r\n      const lotId = this.$store?.state?.lot?.lot?.id;\r\n      if (lotId) return `Лот №${lotId}`;\r\n      return 'Лот';\r\n    },\r\n  },\r\n  mounted() {\r\n    axios\r\n      .post('rest/regions/getList/')\r\n      .then((response) => {\r\n        this.regionListResponse = [{ ID: 'all', NAME: 'Все регионы' }].concat(\r\n          response.data\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        console.log('getRegionsList error => ', error);\r\n      })\r\n      .finally(() => (this.loading = false));\r\n\r\n    this.$store.subscribe((mutations) => {\r\n      if (mutations.type === 'lot/lotFormEdit') {\r\n        this.resetRuleForm({ isFormEdit: true });\r\n\r\n        this.button.submit.text = 'Сохранить';\r\n        this.button.close.text = 'Удалить';\r\n        this.button.close.code = 'delete';\r\n        this.clearEmptyItemValidate('ruleForm', 'productId');\r\n\r\n        const dateStart = new Date(this.$store.state.lot.lot.dateStart);\r\n        const timeInterval = [];\r\n        timeInterval[0] = dateStart;\r\n        timeInterval[1] = new Date(this.$store.state.lot.lot.dateEnd);\r\n        let arShippingDate = [];\r\n        arShippingDate = this.$store.state.lot.lot.shippingDate.split('.');\r\n        const shippingDate = new Date(\r\n          arShippingDate[2],\r\n          arShippingDate[1] - 1,\r\n          arShippingDate[0]\r\n        );\r\n\r\n        this.id = this.$store.state.lot.lot.id;\r\n        this.method = 'editLot';\r\n\r\n        // if(mutations.type === 'lot/setLotForm') {\r\n        //   this.method = 'addLot'\r\n        // }\r\n        this.ruleForm.dateStart = dateStart;\r\n        this.ruleForm.timeInterval = timeInterval;\r\n        this.ruleForm.shippingDate = shippingDate;\r\n        this.ruleForm.factoryId = this.$store.state.lot.lot.factory.id;\r\n        this.ruleForm.productId = this.$store.state.lot.lot.product.id;\r\n        this.ruleForm.weight = Number(this.$store.state.lot.lot.weight);\r\n        this.ruleForm.multiplicity = Number(\r\n          this.$store.state.lot.lot.multiplicity\r\n        );\r\n        this.ruleForm.regions = this.$store.state.lot.lot.regions; //todo: добавить массив регионов\r\n        this.ruleForm.comment = this.$store.state.lot.lot.comment;\r\n      }\r\n\r\n      if (\r\n        mutations.type === 'lot/lotFormClose' ||\r\n        mutations.type === 'lot/lotFormSuccess'\r\n      ) {\r\n        this.resetRuleForm();\r\n      }\r\n\r\n      // mutations.type === 'lot/getListSuccess' вызывается при нажатии \"продать товар\", отслеживаем здесь и заполняем данные карточки создания из хранилища.\r\n      if (\r\n        mutations.type === 'lot/getListSuccess' &&\r\n        this.$store.state.lot.isSaleButtonClicked\r\n      ) {\r\n        this.resetRuleForm({ isSaleButtonClicked: true });\r\n\r\n        this.id = null;\r\n        this.method = 'addLot';\r\n        // let dateStart = new Date()\r\n        // let timeInterval = []\r\n        // timeInterval[0] = dateStart\r\n        // timeInterval[1] = new Date(storeLot.dateEnd)\r\n        let arShippingDate = [];\r\n        arShippingDate = this.$store.state.lot.lot.shippingDate.split('.');\r\n        const shippingDate = new Date(\r\n          arShippingDate[2],\r\n          arShippingDate[1] - 1,\r\n          arShippingDate[0]\r\n        );\r\n\r\n        this.ruleForm.dateStart = new Date(this.$store.state.lot.lot.dateStart);\r\n        this.ruleForm.timeInterval = [];\r\n        this.ruleForm.shippingDate = shippingDate;\r\n        this.ruleForm.factoryId = this.$store.state.lot.lot.factory.id;\r\n        this.ruleForm.productId = this.$store.state.lot.lot.product.id;\r\n        this.ruleForm.weight = Number(this.$store.state.lot.lot.weight);\r\n        this.ruleForm.multiplicity = Number(\r\n          this.$store.state.lot.lot.multiplicity\r\n        );\r\n        this.ruleForm.regions = this.$store.state.lot.lot.regions; //todo: добавить массив регионов\r\n        this.ruleForm.comment = this.$store.state.lot.lot.comment;\r\n\r\n        this.ruleForm.saleLotId = this.$store.state.lot.lot.id;\r\n        this.$store.state.lot.lot.id = null;\r\n      }\r\n\r\n      if (mutations.type === 'lot/lotFormStart') {\r\n        this.resetRuleForm();\r\n        this.clearEmptyItemValidate('ruleForm', 'productId');\r\n        this.ruleForm.dateStart = this.$store.state.lot.createLotDate;\r\n      }\r\n    });\r\n\r\n    this.getFactoryListByUserId(this.userId);\r\n  },\r\n\r\n  unmounted() {\r\n    this.$store.commit('lot/setIsSaleButtonClicked', { value: false });\r\n  },\r\n\r\n  methods: {\r\n    resetRuleForm(options) {\r\n      this.$store.commit('lot/setIsSaleButtonClicked', {\r\n        value: options?.isSaleButtonClicked || false,\r\n      });\r\n      this.$refs?.ruleForm?.resetFields();\r\n\r\n      if (options?.isFormEdit || options?.isSaleButtonClicked || false) {\r\n        this.resetFormKey++;\r\n      }\r\n\r\n      this.id = null;\r\n      this.method = 'addLot';\r\n      this.ruleForm.dateStart = null;\r\n      this.ruleForm.timeInterval = [];\r\n      this.ruleForm.shippingDate = '';\r\n      this.ruleForm.factoryId = '';\r\n      this.ruleForm.productId = '';\r\n      this.ruleForm.weight = 0;\r\n      this.ruleForm.multiplicity = 1;\r\n      this.ruleForm.regions = [];\r\n      this.ruleForm.comment = '';\r\n      this.ruleForm.saleLotId = '';\r\n\r\n      this.button.submit.text = 'Создать';\r\n      this.button.close.text = 'Отменить';\r\n      this.button.close.code = 'close';\r\n\r\n      this.$store.state.lot.isCalendarLotFormDisable = false;\r\n    },\r\n    // setWeight(weight) {\r\n    //   if(weight % this.ruleForm.multiplicity === 0) {\r\n    //     this.ruleForm.weight = weight\r\n    //   } else {\r\n    //     this.ruleForm.weight = this.ruleForm.weight - weight % this.ruleForm.multiplicity\r\n    //   }\r\n    // },\r\n\r\n    onChangeRegions(data) {\r\n      this.ruleForm.regions = data;\r\n      this.setIsRuleFormEdited();\r\n    },\r\n    clearValidate(formName) {\r\n      this.$refs[formName].clearValidate();\r\n    },\r\n    clearEmptyItemValidate(formName, itemName) {\r\n      if (this.productsList) {\r\n        itemName = { props: itemName };\r\n        this.$refs[formName]?.clearValidate(itemName);\r\n      }\r\n    },\r\n    setFactory(factoryId) {\r\n      this.clearProductId();\r\n      this.ruleForm.weight = 0;\r\n      this.setMultiplicity(factoryId);\r\n\r\n      this.setIsRuleFormEdited();\r\n    },\r\n    setMultiplicity(factoryId) {\r\n      const arMultiplicity = this.factoryList\r\n        .map((factory) => {\r\n          if (factory.ID === factoryId) {\r\n            return factory.MULTIPLICITY;\r\n          }\r\n        })\r\n        .filter((element) => element !== undefined && element !== null);\r\n\r\n      this.ruleForm.multiplicity = Number(...arMultiplicity)\r\n        ? Number(...arMultiplicity)\r\n        : 1;\r\n    },\r\n    clearProductId() {\r\n      this.ruleForm.productId = '';\r\n    },\r\n    getFactoryListByUserId(id) {\r\n      axios\r\n        .post('rest/factory/getListByUserId/', { userId: id })\r\n        .then((response) => {\r\n          this.factoryList = response.data;\r\n        })\r\n        .catch((error) => {\r\n          console.log('getFactoryListByUserId error => ', error);\r\n          return {};\r\n        })\r\n        .finally(() => (this.loading = false));\r\n    },\r\n    getProductListByFactoryId(factoryId) {\r\n      if (factoryId) {\r\n        axios\r\n          .post('rest/products/getByFactoryId/', { id: factoryId })\r\n          .then((response) => {\r\n            this.productsList = response.data.sort((a, b) =>\r\n              a.SHORT_NAME.localeCompare(b.SHORT_NAME, 'ru', { numeric: true })\r\n            );\r\n            this.ruleForm.minNomenclaturePrice = this.productsList\r\n              .map((p) => {\r\n                if (p.ID === this.ruleForm.productId) {\r\n                  return p.MIN_PRICE ? Number(p.MIN_PRICE) : 0;\r\n                }\r\n              })\r\n              .filter((element) => element !== undefined);\r\n          })\r\n          .catch((error) => {\r\n            console.log('getProductsList error => ', error);\r\n            this.productsList = {};\r\n          })\r\n          .finally(() => {\r\n            this.loading = false;\r\n            // this.setIsRuleFormEdited()\r\n          });\r\n      }\r\n    },\r\n    addArrLot() {\r\n      const arTimeStartAndEnd = [];\r\n      let dateStart = '';\r\n      let dateEnd = '';\r\n      let shippingDate = '';\r\n      let arRegions = [];\r\n\r\n      if (this.ruleForm.timeInterval !== null) {\r\n        this.ruleForm.timeInterval.forEach(function (date) {\r\n          let min = date.getMinutes();\r\n          min = ('0' + min).slice(-2);\r\n\r\n          let hours = date.getHours();\r\n          hours = ('0' + hours).slice(-2);\r\n\r\n          arTimeStartAndEnd.push(hours + ':' + min + ':00');\r\n        });\r\n      }\r\n      if (this.ruleForm.dateStart !== null) {\r\n        dateStart =\r\n          this.ruleForm.dateStart.toLocaleDateString('ru-RU') +\r\n          ' ' +\r\n          arTimeStartAndEnd[0];\r\n        dateEnd =\r\n          this.ruleForm.dateStart.toLocaleDateString('ru-RU') +\r\n          ' ' +\r\n          arTimeStartAndEnd[1];\r\n      }\r\n      if (this.ruleForm.shippingDate !== null) {\r\n        shippingDate = this.ruleForm.shippingDate.toLocaleDateString('ru-RU');\r\n      }\r\n\r\n      arRegions = this.ruleForm.regions?.map((region) => {\r\n        // для отправки приводим [{id: '3', name: 'Москва'}, {id: '4', name: 'Нижний новгород'] в [3, 4];\r\n        const regionIds = region?.regionIds?.map((regionId) => {\r\n          if (typeof regionId === 'string') return regionId;\r\n          if (typeof regionId === 'object' && regionId?.id) return regionId.id;\r\n          return regionId;\r\n        });\r\n\r\n        return {\r\n          priceMin: region?.priceMin,\r\n          regionIds: regionIds || region.regionIds,\r\n        };\r\n      });\r\n\r\n      return {\r\n        id: this.id,\r\n        userId: this.userId,\r\n        dateStart: dateStart,\r\n        dateEnd: dateEnd,\r\n        shippingDate: shippingDate,\r\n        factoryId: this.ruleForm.factoryId,\r\n        productId: this.ruleForm.productId,\r\n        weight: Number(this.ruleForm.weight),\r\n        multiplicity: Number(this.ruleForm.multiplicity),\r\n        regions: arRegions,\r\n        comment: this.ruleForm.comment,\r\n        saleLotId: this.ruleForm.saleLotId,\r\n      };\r\n    },\r\n    makeRange(start, end) {\r\n      const result = [];\r\n      for (let i = start; i <= end; i++) {\r\n        result.push(i);\r\n      }\r\n      return result;\r\n    },\r\n    disabledHours() {\r\n      if (this.ruleForm.dateStart) {\r\n        if (\r\n          this.ruleForm.dateStart.toLocaleDateString() ===\r\n          this.isToday.toLocaleDateString()\r\n        ) {\r\n          return this.makeRange(0, this.hourNow - 1);\r\n        } else {\r\n          return [];\r\n        }\r\n      } else {\r\n        return [];\r\n      }\r\n    },\r\n    disabledMinutes(hour) {\r\n      if (hour === this.hourNow) {\r\n        const minuteStart = new Date().getMinutes() - 1;\r\n        return this.makeRange(0, minuteStart);\r\n      }\r\n    },\r\n    disabledDate(day) {\r\n      return (\r\n        day.getTime() < this.isToday.getTime() &&\r\n        day.getTime() !== this.isToday.getTime()\r\n      );\r\n    },\r\n    disabledShippingDate(day) {\r\n      if (this.ruleForm.dateStart) {\r\n        return (\r\n          day.getTime() < this.ruleForm.dateStart.getTime() &&\r\n          day.getTime() !== this.ruleForm.dateStart.getTime()\r\n        );\r\n      } else {\r\n        return (\r\n          day.getTime() < this.isToday.getTime() &&\r\n          day.getTime() !== this.isToday.getTime()\r\n        );\r\n      }\r\n    },\r\n    disabledWeight(factoryId) {\r\n      if (factoryId) {\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    },\r\n\r\n    onSubmit(formName) {\r\n      this.$refs[formName].validate((valid) => {\r\n        if (valid) {\r\n          this.$store.state.lot.isCalendarLotFormDisable = true;\r\n\r\n          const submitCallback = () => {\r\n            this.handleSubmit();\r\n            this.$store.state.lot.isCalendarLotFormDisable = false;\r\n            this.closeForm();\r\n          };\r\n\r\n          if (this.button.submit.text === 'Создать') return submitCallback();\r\n\r\n          if (!this.isRuleFormEdited) return submitCallback();\r\n\r\n          this.confirmModal = {\r\n            isVisible: true,\r\n            text: { ...CONFIRM_MODAL_TEXT.save },\r\n            confirmCb: () => {\r\n              submitCallback();\r\n            },\r\n            declineCb: () => {\r\n              this.$store.state.lot.isCalendarLotFormDisable = false;\r\n            },\r\n          };\r\n        } else {\r\n          console.log('CalendarLotForm validate error ');\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n\r\n    handleSubmit() {\r\n      if (this.method === 'addLot') {\r\n        this.$store.dispatch('lot/add', this.addArrLot());\r\n      } else if (this.method === 'editLot') {\r\n        this.$store.dispatch('lot/edit', this.addArrLot());\r\n      }\r\n    },\r\n\r\n    clickClose() {\r\n      if (this.button.close.code === 'delete') {\r\n        return this.deleteLot();\r\n        // this.closeForm()\r\n      }\r\n\r\n      if (this.isRuleFormEdited && this.button.close.code === 'close') {\r\n        return (this.confirmModal = {\r\n          isVisible: true,\r\n          text: { ...CONFIRM_MODAL_TEXT.close },\r\n          confirmCb: () => {\r\n            this.closeForm();\r\n          },\r\n        });\r\n      }\r\n\r\n      this.closeForm();\r\n    },\r\n\r\n    deleteLot() {\r\n      this.confirmModal = {\r\n        isVisible: true,\r\n        text: { ...CONFIRM_MODAL_TEXT.delete },\r\n        confirmCb: () => {\r\n          this.$store.dispatch('lot/delete', { id: this.id });\r\n          this.closeForm();\r\n        },\r\n      };\r\n    },\r\n    closeForm() {\r\n      this.resetFormKey++;\r\n      this.$store.commit('lot/lotFormClose');\r\n      this.clearValidate('ruleForm');\r\n\r\n      this.setIsRuleFormEdited(false);\r\n    },\r\n\r\n    /**\r\n     * @param {'confirm' | 'decline'} action\r\n     */\r\n    handleConfirmAction(action) {\r\n      if (action === 'confirm' && this.confirmModal.confirmCb) {\r\n        return this.confirmModal.confirmCb();\r\n      }\r\n\r\n      if (action === 'decline' && this.confirmModal.declineCb) {\r\n        return this.confirmModal.declineCb();\r\n      }\r\n\r\n      // ElMessage({ type: 'info', message: 'Действие отменено' });\r\n    },\r\n\r\n    closeFormWithConfirm() {\r\n      if (this.isRuleFormEdited) {\r\n        return (this.confirmModal = {\r\n          isVisible: true,\r\n          text: { ...CONFIRM_MODAL_TEXT.close },\r\n          confirmCb: () => {\r\n            this.closeForm();\r\n          },\r\n        });\r\n      }\r\n\r\n      this.closeForm();\r\n    },\r\n\r\n    setIsRuleFormEdited(isEdited = true) {\r\n      this.isRuleFormEdited = Boolean(isEdited);\r\n    },\r\n  },\r\n  components: {\r\n    CalendarLotFormAddRegions,\r\n    ElDatePicker,\r\n    IconClose,\r\n    TimeRangeSelect,\r\n    ConfirmModal,\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped></style>\r\n"]},"metadata":{},"sourceType":"module"}