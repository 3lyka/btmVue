{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"lot-detail__confirm\"\n};\nconst _hoisted_2 = {\n  class: \"lot-detail__confirm-item\"\n};\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"lot-detail__confirm-item-text\"\n}, \" Торговые предложения, требующие согласования \", -1\n/* HOISTED */\n);\n\nconst _hoisted_4 = {\n  class: \"lot-detail__confirm-item-count\"\n};\n\nconst _hoisted_5 = /*#__PURE__*/_createTextVNode(\" Согласовать с УМиОП \");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ElButton = _resolveComponent(\"ElButton\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"span\", _hoisted_4, _toDisplayString($options.countOfferListUmiop), 1\n  /* TEXT */\n  )]), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"lot-detail__confirm-item\", $options.isUmiopCheckStatusLot ? 'lot-detail__confirm-item_disable' : ''])\n  }, [_createVNode(_component_ElButton, {\n    onClick: $options.onSubmit,\n    class: \"lot-detail__confirm-item-button\",\n    disabled: $options.isUmiopCheckStatusLot,\n    loading: $data.isSubmitting\n  }, {\n    default: _withCtx(() => [_hoisted_5]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"onClick\", \"disabled\", \"loading\"])], 2\n  /* CLASS */\n  )]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;;;EACJA,KAAK,EAAC;;;gCACTC,oBAEI,GAFJ,EAEI;EAFDD,KAAK,EAAC;AAEL,CAFJ,EAAyC,gDAAzC,EAEA;AAAA;AAFA;;;EAGMA,KAAK,EAAC;;;iDAaX;;;;;uBAlBLE,oBAsBM,KAtBN,cAsBM,CArBJD,oBAOM,KAPN,cAOM,CANJE,UAMI,EAHJF,oBAES,MAFT,cAESG,iBADPC,4BACO,CAFT,EACqB;EAAA;EADrB,CAGI,CAPN,CAqBI,EAbJJ,oBAYM,KAZN,EAYM;IAXJD,KAAK,mBAAC,0BAAD,EACGK,iCAAqB,kCAArB,GAAqB,EADxB;EAWD,CAZN,GAIEC,aAOWC,mBAPX,EAOW;IANRC,OAAK,EAAEH,iBAMC;IALTL,KAAK,EAAC,iCAKG;IAJRS,QAAQ,EAAEJ,8BAIF;IAHRK,OAAO,EAAEC;EAGD,CAPX;sBAKC,MAED;;;;GAPA;;EAAA,sCAJF;;EAAA,CAaI,CAtBN","names":["class","_createElementVNode","_createElementBlock","_hoisted_3","_toDisplayString","$options","_createVNode","_component_ElButton","onClick","disabled","loading","$data"],"sourceRoot":"","sources":["C:\\openserver\\domains\\U190001472_BitumMap_Vue\\src\\components\\views\\trading-session\\lot\\LotDetailConfirmUmiop.vue"],"sourcesContent":["<template>\r\n  <div class=\"lot-detail__confirm\">\r\n    <div class=\"lot-detail__confirm-item\">\r\n      <p class=\"lot-detail__confirm-item-text\">\r\n        Торговые предложения, требующие согласования\r\n      </p>\r\n      <span class=\"lot-detail__confirm-item-count\">{{\r\n        countOfferListUmiop\r\n      }}</span>\r\n    </div>\r\n    <div\r\n      class=\"lot-detail__confirm-item\"\r\n      :class=\"isUmiopCheckStatusLot ? 'lot-detail__confirm-item_disable' : ''\"\r\n    >\r\n      <ElButton\r\n        @click=\"onSubmit\"\r\n        class=\"lot-detail__confirm-item-button\"\r\n        :disabled=\"isUmiopCheckStatusLot\"\r\n        :loading=\"isSubmitting\"\r\n      >\r\n        Согласовать с УМиОП\r\n      </ElButton>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions } from 'vuex';\r\n\r\nexport default {\r\n  name: 'LotDetailConfirmUmiop',\r\n  props: ['umiop', 'lot', 'offerList'],\r\n  data() {\r\n    return {\r\n      isSubmitting: false,\r\n    };\r\n  },\r\n  computed: {\r\n    isUmiopCheckStatusLot() {\r\n      return this.lot.status.code === 'umiop_check';\r\n    },\r\n    countOfferListUmiop() {\r\n      return this.umiop.offerList.length;\r\n    },\r\n    umiopOfferListIds() {\r\n      return this.umiop.offerList.map((offer) => offer.id);\r\n    },\r\n    cancelledOfferListIds() {\r\n      return this.offerList.map((offer) => {\r\n        if (offer.switchAccepted === false) {\r\n          return offer.id;\r\n        }\r\n      });\r\n    },\r\n    receivedOfferListIds() {\r\n      return this.offerList.map((offer) => {\r\n        if (offer.switchAccepted === true) {\r\n          return offer.id;\r\n        }\r\n      });\r\n    },\r\n    arrWeightSaleOfferList() {\r\n      return this.offerList.map((offer) => {\r\n        if (offer.switchAccepted === true) {\r\n          return {\r\n            id: offer.id,\r\n            weightSale: offer.weightSale,\r\n          };\r\n        }\r\n      });\r\n    },\r\n  },\r\n  methods: {\r\n    ...mapActions('offer', ['resetEditedOffers']),\r\n\r\n    onSubmit() {\r\n      this.resetEditedOffers();\r\n\r\n      this.isSubmitting = true;\r\n\r\n      this.$store.dispatch(\r\n        'offer/setUmiopCheckStatusesByIds',\r\n        this.umiopOfferListIds\r\n      );\r\n      this.$store.dispatch(\r\n        'offer/setCancelledStatusesByIds',\r\n        this.cancelledOfferListIds\r\n      );\r\n      this.$store.dispatch('offer/setWeightSaleByIds', {\r\n        ids: this.receivedOfferListIds,\r\n        arrWeightSale: this.arrWeightSaleOfferList,\r\n      });\r\n      this.$store.dispatch('lot/setUmiopCheckStatusById', this.lot.id);\r\n\r\n      setTimeout(() => {\r\n        this.$store.dispatch('lot/getById', { id: this.$route.params.id });\r\n        this.$store.dispatch('offer/getListByLotId', this.$route.params.id);\r\n\r\n        this.isSubmitting = false;\r\n      }, 1000);\r\n\r\n      this.resetEditedOffers();\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped></style>\r\n"]},"metadata":{},"sourceType":"module"}