{"ast":null,"code":"import RubleIcon from '@/components/components-helpers/RubleIcon.vue';\nimport CloseIcon from '@/components/components-helpers/icons/CloseIcon.vue';\nimport { useUserStore } from '@/stores/user';\nimport { mapState as mapStatePinia } from 'pinia';\nexport default {\n  name: 'CalendarLotFormAddRegionsItem',\n  props: ['index', 'availableRegions', 'regionList', 'minNomenclaturePrice', 'region'],\n  data: () => ({\n    previousRegionIds: [],\n    regionIds: [],\n    priceMin: null\n  }),\n  watch: {\n    region: {\n      handler() {\n        if (this.regionIds.length || this.priceMin) return;\n        this.regionIds = this.region.regionIds;\n        this.priceMin = this.region.priceMin;\n      },\n\n      immediate: true,\n      deep: true\n    },\n\n    /** После выбора региона, если фильтровали с клавиатуры, сбрасываем напечатанный текст и показываем весь список */\n    async regionIds() {\n      const regionsSelectRef = this.$refs.regionsSelect;\n\n      if (regionsSelectRef && regionsSelectRef.query) {\n        regionsSelectRef.query = '';\n        await regionsSelectRef.toggleMenu();\n        await regionsSelectRef.toggleMenu();\n      }\n    }\n\n  },\n  computed: { ...mapStatePinia(useUserStore, ['isTrader', 'isUmiop']),\n\n    customMinPricePrefix() {\n      return RubleIcon;\n    }\n\n  },\n  emits: ['onChangeRegions', 'removeItem'],\n  methods: {\n    onSelectRegion() {\n      const selectedRegions = this.regionIds.filter(id => !this.previousRegionIds.includes(id));\n      const removedRegions = this.previousRegionIds.filter(id => !this.regionIds.includes(id));\n      const data = {\n        index: this.index,\n        priceMin: this.priceMin,\n        regionIds: this.regionIds\n      };\n      this.$emit('onChangeRegions', selectedRegions, removedRegions, data);\n      this.previousRegionIds = [...this.regionIds];\n    },\n\n    noText() {\n      this.priceMin = this.priceMin.replace(/^0/g, '');\n      this.priceMin = this.priceMin.replace(/[^0-9]/g, '');\n    },\n\n    isAvailableRegion(region) {\n      // если регион в текущей строке выбора региона уже выбран, позволяем его удалить.\n      if (this.regionIds?.some(r => r === region.ID)) return true; // не даем выбрать уже выбранные регионы.\n\n      return this.availableRegions?.some(r => r.ID === region.ID);\n    },\n\n    handleRemoveItem() {\n      this.regionIds = [];\n      this.priceMin = null;\n      this.onSelectRegion();\n      this.$emit('removeItem', this.index);\n    }\n\n  },\n  components: {\n    RubleIcon,\n    CloseIcon\n  }\n};","map":{"version":3,"mappings":"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","names":["RubleIcon","CloseIcon","useUserStore","mapState","mapStatePinia","name","props","data","previousRegionIds","regionIds","priceMin","watch","region","handler","length","immediate","deep","regionsSelectRef","$refs","regionsSelect","query","toggleMenu","computed","customMinPricePrefix","emits","methods","onSelectRegion","selectedRegions","filter","id","includes","removedRegions","index","$emit","noText","replace","isAvailableRegion","some","r","ID","availableRegions","handleRemoveItem","components"],"sourceRoot":"","sources":["C:\\openserver\\domains\\U190001472_BitumMap_Vue\\src\\components\\views\\trading-session\\calendar\\CalendarLotFormAddRegionsItem.vue"],"sourcesContent":["<template>\r\n  <div class=\"regions__item\">\r\n    <ElFormItem prop=\"regions\">\r\n      <ElSelect\r\n        class=\"regions__select\"\r\n        ref=\"regionsSelect\"\r\n        v-model=\"regionIds\"\r\n        multiple\r\n        filterable\r\n        remote\r\n        reserve-keyword\r\n        placeholder=\"Введите данные...\"\r\n        v-on:change=\"onSelectRegion\"\r\n        size=\"default\"\r\n        :disabled=\"isUmiop\"\r\n      >\r\n        <ElOption\r\n          v-for=\"region in regionList\"\r\n          :disabled=\"!isAvailableRegion(region)\"\r\n          :key=\"region.ID\"\r\n          :label=\"region.NAME\"\r\n          :value=\"region.ID\"\r\n        />\r\n      </ElSelect>\r\n    </ElFormItem>\r\n    <!-- class=\"regions__price\" :disabled=\"isUmiop\" -->\r\n    <ElInput\r\n      class=\"regions__price\"\r\n      v-model=\"priceMin\"\r\n      :min=\"minNomenclaturePrice\"\r\n      @input=\"noText\"\r\n      v-on:change=\"onSelectRegion\"\r\n      disabled\r\n      :maxLength=\"6\"\r\n    >\r\n      <template #suffix>\r\n        <RubleIcon class=\"regions__price-icon\" />\r\n      </template>\r\n    </ElInput>\r\n    <ElButton\r\n      class=\"regions__remove-button\"\r\n      text\r\n      title=\"Удалить строку\"\r\n      @click=\"handleRemoveItem\"\r\n      :disabled=\"isUmiop\"\r\n    >\r\n      <CloseIcon class=\"regions__remove-button-icon\" />\r\n    </ElButton>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport RubleIcon from '@/components/components-helpers/RubleIcon.vue';\r\nimport CloseIcon from '@/components/components-helpers/icons/CloseIcon.vue';\r\nimport { useUserStore } from '@/stores/user';\r\nimport { mapState as mapStatePinia } from 'pinia';\r\n\r\nexport default {\r\n  name: 'CalendarLotFormAddRegionsItem',\r\n  props: [\r\n    'index',\r\n    'availableRegions',\r\n    'regionList',\r\n    'minNomenclaturePrice',\r\n    'region',\r\n  ],\r\n  data: () => ({\r\n    previousRegionIds: [],\r\n    regionIds: [],\r\n    priceMin: null,\r\n  }),\r\n  watch: {\r\n    region: {\r\n      handler() {\r\n        if (this.regionIds.length || this.priceMin) return;\r\n\r\n        this.regionIds = this.region.regionIds;\r\n        this.priceMin = this.region.priceMin;\r\n      },\r\n      immediate: true,\r\n      deep: true,\r\n    },\r\n    /** После выбора региона, если фильтровали с клавиатуры, сбрасываем напечатанный текст и показываем весь список */\r\n    async regionIds() {\r\n      const regionsSelectRef = this.$refs.regionsSelect;\r\n      if (regionsSelectRef && regionsSelectRef.query) {\r\n        regionsSelectRef.query = '';\r\n        await regionsSelectRef.toggleMenu();\r\n        await regionsSelectRef.toggleMenu();\r\n      }\r\n    },\r\n  },\r\n  computed: {\r\n    ...mapStatePinia(useUserStore, ['isTrader', 'isUmiop']),\r\n    customMinPricePrefix() {\r\n      return RubleIcon;\r\n    },\r\n  },\r\n  emits: ['onChangeRegions', 'removeItem'],\r\n  methods: {\r\n    onSelectRegion() {\r\n      const selectedRegions = this.regionIds.filter(\r\n        (id) => !this.previousRegionIds.includes(id)\r\n      );\r\n      const removedRegions = this.previousRegionIds.filter(\r\n        (id) => !this.regionIds.includes(id)\r\n      );\r\n      const data = {\r\n        index: this.index,\r\n        priceMin: this.priceMin,\r\n        regionIds: this.regionIds,\r\n      };\r\n\r\n      this.$emit('onChangeRegions', selectedRegions, removedRegions, data);\r\n\r\n      this.previousRegionIds = [...this.regionIds];\r\n    },\r\n    noText() {\r\n      this.priceMin = this.priceMin.replace(/^0/g, '');\r\n      this.priceMin = this.priceMin.replace(/[^0-9]/g, '');\r\n    },\r\n    isAvailableRegion(region) {\r\n      // если регион в текущей строке выбора региона уже выбран, позволяем его удалить.\r\n      if (this.regionIds?.some((r) => r === region.ID)) return true;\r\n\r\n      // не даем выбрать уже выбранные регионы.\r\n      return this.availableRegions?.some((r) => r.ID === region.ID);\r\n    },\r\n    handleRemoveItem() {\r\n      this.regionIds = [];\r\n      this.priceMin = null;\r\n      this.onSelectRegion();\r\n      this.$emit('removeItem', this.index);\r\n    },\r\n  },\r\n  components: { RubleIcon, CloseIcon },\r\n};\r\n</script>\r\n\r\n<style scoped></style>\r\n"]},"metadata":{},"sourceType":"module"}