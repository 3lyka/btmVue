{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"regions__item\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ElOption = _resolveComponent(\"ElOption\");\n\n  const _component_ElSelect = _resolveComponent(\"ElSelect\");\n\n  const _component_ElFormItem = _resolveComponent(\"ElFormItem\");\n\n  const _component_RubleIcon = _resolveComponent(\"RubleIcon\");\n\n  const _component_ElInput = _resolveComponent(\"ElInput\");\n\n  const _component_CloseIcon = _resolveComponent(\"CloseIcon\");\n\n  const _component_ElButton = _resolveComponent(\"ElButton\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_ElFormItem, {\n    prop: \"regions\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_ElSelect, {\n      class: \"regions__select\",\n      ref: \"regionsSelect\",\n      modelValue: _ctx.regionIds,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.regionIds = $event),\n      multiple: \"\",\n      filterable: \"\",\n      remote: \"\",\n      \"reserve-keyword\": \"\",\n      placeholder: \"Введите данные...\",\n      onChange: $options.onSelectRegion,\n      size: \"default\",\n      disabled: _ctx.isUmiop\n    }, {\n      default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.regionList, region => {\n        return _openBlock(), _createBlock(_component_ElOption, {\n          disabled: !$options.isAvailableRegion(region),\n          key: region.ID,\n          label: region.NAME,\n          value: region.ID\n        }, null, 8, [\"disabled\", \"label\", \"value\"]);\n      }), 128))]),\n      _: 1\n    }, 8, [\"modelValue\", \"onChange\", \"disabled\"])]),\n    _: 1\n  }), _createVNode(_component_ElInput, {\n    class: \"regions__price\",\n    modelValue: _ctx.priceMin,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.priceMin = $event),\n    min: $props.minNomenclaturePrice,\n    onInput: $options.noText,\n    onChange: $options.onSelectRegion,\n    disabled: \"\",\n    maxLength: 6\n  }, {\n    suffix: _withCtx(() => [_createVNode(_component_RubleIcon, {\n      class: \"regions__price-icon\"\n    })]),\n    _: 1\n  }, 8, [\"modelValue\", \"min\", \"onInput\", \"onChange\"]), _createVNode(_component_ElButton, {\n    class: \"regions__remove-button\",\n    text: \"\",\n    title: \"Удалить строку\",\n    onClick: $options.handleRemoveItem,\n    disabled: _ctx.isUmiop\n  }, {\n    default: _withCtx(() => [_createVNode(_component_CloseIcon, {\n      class: \"regions__remove-button-icon\"\n    })]),\n    _: 1\n  }, 8, [\"onClick\", \"disabled\"])]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;;;;;;;;;;;;;;;;;uBAAXC,oBA+CM,KA/CN,cA+CM,CA9CJC,aAsBaC,qBAtBb,EAsBa;IAtBDC,IAAI,EAAC;EAsBJ,CAtBb,EAA0B;sBACxB,MAoBW,CApBXF,aAoBWG,mBApBX,EAoBW;MAnBTL,KAAK,EAAC,iBAmBG;MAlBTM,GAAG,EAAC,eAkBK;kBAjBAC,cAiBA;iEAjBAA,iBAASC,OAiBT;MAhBTC,QAAQ,EAAR,EAgBS;MAfTC,UAAU,EAAV,EAeS;MAdTC,MAAM,EAAN,EAcS;MAbT,qBAaS;MAZTC,WAAW,EAAC,mBAYH;MAXJC,QAAM,EAAEC,uBAWJ;MAVTC,IAAI,EAAC,SAUI;MATRC,QAAQ,EAAET;IASF,CApBX;wBAcI,MAA4B,oBAD9BN,oBAMEgB,SANF,EAME,IANF,EAMEC,YALiBC,iBAKjB,EALOC,MAAoB,IAAd;6BADfC,aAMEC,mBANF,EAME;UAJCN,QAAQ,GAAGF,2BAAkBM,MAAlB,CAIZ;UAHCG,GAAG,EAAEH,MAAM,CAACI,EAGb;UAFCC,KAAK,EAAEL,MAAM,CAACM,IAEf;UADCC,KAAK,EAAEP,MAAM,CAACI;QACf,CANF;OAME,CANF,MAC8B;;KAdhC,4CAoBW,EArBa;;EAAA,CAA1B,CA8CI,EAtBJtB,aAYU0B,kBAZV,EAYU;IAXR5B,KAAK,EAAC,gBAWE;gBAVCO,aAUD;+DAVCA,gBAAQC,OAUT;IATPqB,GAAG,EAAEV,2BASE;IARPW,OAAK,EAAEhB,eAQA;IAPHD,QAAM,EAAEC,uBAOL;IANRE,QAAQ,EAAR,EAMQ;IALPe,SAAS,EAAE;EAKJ,CAZV;IASaC,MAAM,WACf,MAAyC,CAAzC9B,aAAyC+B,oBAAzC,EAAyC;MAA9BjC,KAAK,EAAC;IAAwB,CAAzC,CAAyC,CAD1B;;GATnB,kDAsBI,EATJE,aAQWgC,mBARX,EAQW;IAPTlC,KAAK,EAAC,wBAOG;IANTmC,IAAI,EAAJ,EAMS;IALTC,KAAK,EAAC,gBAKG;IAJRC,OAAK,EAAEvB,yBAIC;IAHRE,QAAQ,EAAET;EAGF,CARX;sBAOE,MAAiD,CAAjDL,aAAiDoC,oBAAjD,EAAiD;MAAtCtC,KAAK,EAAC;IAAgC,CAAjD,CAAiD;;GAPnD,6BASI,CA/CN","names":["class","_createElementBlock","_createVNode","_component_ElFormItem","prop","_component_ElSelect","ref","_ctx","$event","multiple","filterable","remote","placeholder","onChange","$options","size","disabled","_Fragment","_renderList","$props","region","_createBlock","_component_ElOption","key","ID","label","NAME","value","_component_ElInput","min","onInput","maxLength","suffix","_component_RubleIcon","_component_ElButton","text","title","onClick","_component_CloseIcon"],"sourceRoot":"","sources":["C:\\openserver\\domains\\U190001472_BitumMap_Vue\\src\\components\\views\\trading-session\\calendar\\CalendarLotFormAddRegionsItem.vue"],"sourcesContent":["<template>\r\n  <div class=\"regions__item\">\r\n    <ElFormItem prop=\"regions\">\r\n      <ElSelect\r\n        class=\"regions__select\"\r\n        ref=\"regionsSelect\"\r\n        v-model=\"regionIds\"\r\n        multiple\r\n        filterable\r\n        remote\r\n        reserve-keyword\r\n        placeholder=\"Введите данные...\"\r\n        v-on:change=\"onSelectRegion\"\r\n        size=\"default\"\r\n        :disabled=\"isUmiop\"\r\n      >\r\n        <ElOption\r\n          v-for=\"region in regionList\"\r\n          :disabled=\"!isAvailableRegion(region)\"\r\n          :key=\"region.ID\"\r\n          :label=\"region.NAME\"\r\n          :value=\"region.ID\"\r\n        />\r\n      </ElSelect>\r\n    </ElFormItem>\r\n    <!-- class=\"regions__price\" :disabled=\"isUmiop\" -->\r\n    <ElInput\r\n      class=\"regions__price\"\r\n      v-model=\"priceMin\"\r\n      :min=\"minNomenclaturePrice\"\r\n      @input=\"noText\"\r\n      v-on:change=\"onSelectRegion\"\r\n      disabled\r\n      :maxLength=\"6\"\r\n    >\r\n      <template #suffix>\r\n        <RubleIcon class=\"regions__price-icon\" />\r\n      </template>\r\n    </ElInput>\r\n    <ElButton\r\n      class=\"regions__remove-button\"\r\n      text\r\n      title=\"Удалить строку\"\r\n      @click=\"handleRemoveItem\"\r\n      :disabled=\"isUmiop\"\r\n    >\r\n      <CloseIcon class=\"regions__remove-button-icon\" />\r\n    </ElButton>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport RubleIcon from '@/components/components-helpers/RubleIcon.vue';\r\nimport CloseIcon from '@/components/components-helpers/icons/CloseIcon.vue';\r\nimport { useUserStore } from '@/stores/user';\r\nimport { mapState as mapStatePinia } from 'pinia';\r\n\r\nexport default {\r\n  name: 'CalendarLotFormAddRegionsItem',\r\n  props: [\r\n    'index',\r\n    'availableRegions',\r\n    'regionList',\r\n    'minNomenclaturePrice',\r\n    'region',\r\n  ],\r\n  data: () => ({\r\n    previousRegionIds: [],\r\n    regionIds: [],\r\n    priceMin: null,\r\n  }),\r\n  watch: {\r\n    region: {\r\n      handler() {\r\n        if (this.regionIds.length || this.priceMin) return;\r\n\r\n        this.regionIds = this.region.regionIds;\r\n        this.priceMin = this.region.priceMin;\r\n      },\r\n      immediate: true,\r\n      deep: true,\r\n    },\r\n    /** После выбора региона, если фильтровали с клавиатуры, сбрасываем напечатанный текст и показываем весь список */\r\n    async regionIds() {\r\n      const regionsSelectRef = this.$refs.regionsSelect;\r\n      if (regionsSelectRef && regionsSelectRef.query) {\r\n        regionsSelectRef.query = '';\r\n        await regionsSelectRef.toggleMenu();\r\n        await regionsSelectRef.toggleMenu();\r\n      }\r\n    },\r\n  },\r\n  computed: {\r\n    ...mapStatePinia(useUserStore, ['isTrader', 'isUmiop']),\r\n    customMinPricePrefix() {\r\n      return RubleIcon;\r\n    },\r\n  },\r\n  emits: ['onChangeRegions', 'removeItem'],\r\n  methods: {\r\n    onSelectRegion() {\r\n      const selectedRegions = this.regionIds.filter(\r\n        (id) => !this.previousRegionIds.includes(id)\r\n      );\r\n      const removedRegions = this.previousRegionIds.filter(\r\n        (id) => !this.regionIds.includes(id)\r\n      );\r\n      const data = {\r\n        index: this.index,\r\n        priceMin: this.priceMin,\r\n        regionIds: this.regionIds,\r\n      };\r\n\r\n      this.$emit('onChangeRegions', selectedRegions, removedRegions, data);\r\n\r\n      this.previousRegionIds = [...this.regionIds];\r\n    },\r\n    noText() {\r\n      this.priceMin = this.priceMin.replace(/^0/g, '');\r\n      this.priceMin = this.priceMin.replace(/[^0-9]/g, '');\r\n    },\r\n    isAvailableRegion(region) {\r\n      // если регион в текущей строке выбора региона уже выбран, позволяем его удалить.\r\n      if (this.regionIds?.some((r) => r === region.ID)) return true;\r\n\r\n      // не даем выбрать уже выбранные регионы.\r\n      return this.availableRegions?.some((r) => r.ID === region.ID);\r\n    },\r\n    handleRemoveItem() {\r\n      this.regionIds = [];\r\n      this.priceMin = null;\r\n      this.onSelectRegion();\r\n      this.$emit('removeItem', this.index);\r\n    },\r\n  },\r\n  components: { RubleIcon, CloseIcon },\r\n};\r\n</script>\r\n\r\n<style scoped></style>\r\n"]},"metadata":{},"sourceType":"module"}