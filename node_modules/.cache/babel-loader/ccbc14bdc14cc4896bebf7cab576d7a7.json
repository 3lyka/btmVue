{"ast":null,"code":"import { useUserStore } from '@/stores/user';\nimport { mapActions } from 'vuex';\nimport { mapState as mapStatePinia } from 'pinia';\nexport default {\n  name: 'OfferStatus',\n  props: {\n    offer: {},\n    lot: {},\n    checkSwitcher: Boolean\n  },\n  data: () => ({\n    switchAccepted: false,\n    showSwitchAccepted: true\n  }),\n  computed: { ...mapStatePinia(useUserStore, ['isTrader', 'isUmiop']),\n\n    isUmiopCheckStatusLot() {\n      return this.lot.status.code === 'umiop_check';\n    },\n\n    isDisableInactiveSwitch() {\n      return (!this.offer.switchAccepted || this.offer.weightSale == 0) && !this.isUmiopCheckStatusLot;\n    },\n\n    isDisableSwitch() {\n      if (this.lot.status.code !== 'completed') {\n        if (this.isUmiop) {\n          return false;\n        } else {\n          return this.isUmiopCheckStatusLot;\n        }\n      } else {\n        return true;\n      }\n    },\n\n    setColorByStatus() {\n      if (this.offer.status.code === 'umiop_check' && this.isTrader) {\n        return 'status_umiop_check';\n      } else if (this.offer.status.code === 'umiop_done') {\n        return 'status_umiop_done';\n      } else if (this.offer.status.code === 'umiop_cancelled') {\n        return 'status_umiop_cancelled';\n      } else {\n        return '';\n      }\n    }\n\n  },\n\n  mounted() {\n    if (this.offer.status.code !== 'umiop_check' && this.offer.status.code !== 'cancelled') {\n      this.switchAccepted = this.offer.isAccepted; //isAccepted = если true то цена выше прейскурантной, если false, то ниже\n\n      if (this.offer.weightSale === 0) {\n        this.switchAccepted = false;\n      }\n    }\n\n    this.$store.subscribe(mutations => {\n      if (mutations.type === 'offer/setSwitchAcceptedToValidWeightSale') {\n        this.switchAccepted = this.offer.switchAccepted;\n        this.onSwitchAccepted();\n      }\n    });\n  },\n\n  created() {\n    if (this.offer.status.code === 'umiop_check' && this.isUmiop) {\n      this.switchAccepted = true;\n      this.onSwitchAccepted();\n    }\n  },\n\n  methods: { ...mapActions('offer', ['setEditedOffers']),\n\n    showOfferStatus() {\n      if (this.switchAccepted && this.offer.status.code === 'new') {\n        return this.offer.status.name;\n      } else if (this.offer.status.code === 'umiop_check') {\n        if (this.isTrader) {\n          this.showSwitchAccepted = false;\n          return this.offer.status.name;\n        } else if (this.isUmiop && this.switchAccepted) {\n          return 'Принято';\n        } else {\n          return 'Отклонено';\n        }\n      } else if (this.offer.status.code === 'umiop_done') {\n        this.showSwitchAccepted = false;\n        return this.offer.status.name;\n      } else if (this.offer.status.code === 'umiop_cancelled') {\n        this.showSwitchAccepted = false;\n        return this.offer.status.name;\n      } else {\n        if (this.switchAccepted) {\n          return 'Принято';\n        } else {\n          return 'Отклонено';\n        }\n      }\n    },\n\n    onSwitchAccepted() {\n      if (this.isTrader) {\n        this.$store.dispatch('offer/onSwitchAccepted', {\n          isTrader: this.isTrader,\n          offerId: this.offer.id,\n          weightSale: this.offer.weightSale,\n          multiplicity: this.lot.multiplicity,\n          switchAccepted: this.switchAccepted\n        });\n      }\n\n      if (this.isUmiop) {\n        this.$store.dispatch('offer/onSwitchAccepted', {\n          offerId: this.offer.id,\n          switchAccepted: this.switchAccepted\n        });\n      }\n\n      this.setEditedOffers({\n        offer: this.offer\n      });\n    },\n\n    setStatus(id, status) {\n      this.$store.commit('offer/setOfferStatus', {\n        id: id,\n        status: status\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["useUserStore","mapActions","mapState","mapStatePinia","name","props","offer","lot","checkSwitcher","Boolean","data","switchAccepted","showSwitchAccepted","computed","isUmiopCheckStatusLot","status","code","isDisableInactiveSwitch","weightSale","isDisableSwitch","isUmiop","setColorByStatus","isTrader","mounted","isAccepted","$store","subscribe","mutations","type","onSwitchAccepted","created","methods","showOfferStatus","dispatch","offerId","id","multiplicity","setEditedOffers","setStatus","commit"],"sourceRoot":"","sources":["C:\\openserver\\domains\\U190001472_BitumMap_Vue\\src\\components\\views\\trading-session\\offer\\OfferStatus.vue"],"sourcesContent":["<template>\r\n  <div\r\n    class=\"trading-confirm\"\r\n    :class=\"\r\n      isUmiopCheckStatusLot && offer.status.code !== 'umiop_check' && isTrader\r\n        ? 'trading-confirm_disable'\r\n        : ''\r\n    \"\r\n  >\r\n    <div\r\n      class=\"trading-confirm__text\"\r\n      :class=\"setColorByStatus\"\r\n      style=\"background: none\"\r\n    >\r\n      {{ showOfferStatus() }}\r\n    </div>\r\n    <input\r\n      v-if=\"showSwitchAccepted\"\r\n      v-model=\"switchAccepted\"\r\n      :checked=\"switchAccepted\"\r\n      @change=\"onSwitchAccepted()\"\r\n      class=\"trading-confirm__button\"\r\n      type=\"checkbox\"\r\n      :disabled=\"isDisableSwitch || (checkSwitcher && isDisableInactiveSwitch)\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { useUserStore } from '@/stores/user';\r\nimport { mapActions } from 'vuex';\r\nimport { mapState as mapStatePinia } from 'pinia';\r\n\r\nexport default {\r\n  name: 'OfferStatus',\r\n  props: {\r\n    offer: {},\r\n    lot: {},\r\n    checkSwitcher: Boolean,\r\n  },\r\n  data: () => ({\r\n    switchAccepted: false,\r\n    showSwitchAccepted: true,\r\n  }),\r\n  computed: {\r\n    ...mapStatePinia(useUserStore, ['isTrader', 'isUmiop']),\r\n    isUmiopCheckStatusLot() {\r\n      return this.lot.status.code === 'umiop_check';\r\n    },\r\n    isDisableInactiveSwitch() {\r\n      return (\r\n        (!this.offer.switchAccepted || this.offer.weightSale == 0) &&\r\n        !this.isUmiopCheckStatusLot\r\n      );\r\n    },\r\n    isDisableSwitch() {\r\n      if (this.lot.status.code !== 'completed') {\r\n        if (this.isUmiop) {\r\n          return false;\r\n        } else {\r\n          return this.isUmiopCheckStatusLot;\r\n        }\r\n      } else {\r\n        return true;\r\n      }\r\n    },\r\n    setColorByStatus() {\r\n      if (this.offer.status.code === 'umiop_check' && this.isTrader) {\r\n        return 'status_umiop_check';\r\n      } else if (this.offer.status.code === 'umiop_done') {\r\n        return 'status_umiop_done';\r\n      } else if (this.offer.status.code === 'umiop_cancelled') {\r\n        return 'status_umiop_cancelled';\r\n      } else {\r\n        return '';\r\n      }\r\n    },\r\n  },\r\n\r\n  mounted() {\r\n    if (\r\n      this.offer.status.code !== 'umiop_check' &&\r\n      this.offer.status.code !== 'cancelled'\r\n    ) {\r\n      this.switchAccepted = this.offer.isAccepted; //isAccepted = если true то цена выше прейскурантной, если false, то ниже\r\n\r\n      if (this.offer.weightSale === 0) {\r\n        this.switchAccepted = false;\r\n      }\r\n    }\r\n\r\n    this.$store.subscribe((mutations) => {\r\n      if (mutations.type === 'offer/setSwitchAcceptedToValidWeightSale') {\r\n        this.switchAccepted = this.offer.switchAccepted;\r\n        this.onSwitchAccepted();\r\n      }\r\n    });\r\n  },\r\n  created() {\r\n    if (this.offer.status.code === 'umiop_check' && this.isUmiop) {\r\n      this.switchAccepted = true;\r\n      this.onSwitchAccepted();\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapActions('offer', ['setEditedOffers']),\r\n\r\n    showOfferStatus() {\r\n      if (this.switchAccepted && this.offer.status.code === 'new') {\r\n        return this.offer.status.name;\r\n      } else if (this.offer.status.code === 'umiop_check') {\r\n        if (this.isTrader) {\r\n          this.showSwitchAccepted = false;\r\n          return this.offer.status.name;\r\n        } else if (this.isUmiop && this.switchAccepted) {\r\n          return 'Принято';\r\n        } else {\r\n          return 'Отклонено';\r\n        }\r\n      } else if (this.offer.status.code === 'umiop_done') {\r\n        this.showSwitchAccepted = false;\r\n        return this.offer.status.name;\r\n      } else if (this.offer.status.code === 'umiop_cancelled') {\r\n        this.showSwitchAccepted = false;\r\n        return this.offer.status.name;\r\n      } else {\r\n        if (this.switchAccepted) {\r\n          return 'Принято';\r\n        } else {\r\n          return 'Отклонено';\r\n        }\r\n      }\r\n    },\r\n    onSwitchAccepted() {\r\n      if (this.isTrader) {\r\n        this.$store.dispatch('offer/onSwitchAccepted', {\r\n          isTrader: this.isTrader,\r\n          offerId: this.offer.id,\r\n          weightSale: this.offer.weightSale,\r\n          multiplicity: this.lot.multiplicity,\r\n          switchAccepted: this.switchAccepted,\r\n        });\r\n      }\r\n\r\n      if (this.isUmiop) {\r\n        this.$store.dispatch('offer/onSwitchAccepted', {\r\n          offerId: this.offer.id,\r\n          switchAccepted: this.switchAccepted,\r\n        });\r\n      }\r\n\r\n      this.setEditedOffers({ offer: this.offer });\r\n    },\r\n    setStatus(id, status) {\r\n      this.$store.commit('offer/setOfferStatus', {\r\n        id: id,\r\n        status: status,\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped></style>\r\n"]},"metadata":{},"sourceType":"module"}