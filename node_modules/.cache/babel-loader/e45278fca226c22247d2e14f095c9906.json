{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, resolveComponent as _resolveComponent, createBlock as _createBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-aacfaafc\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"trading-list\"\n};\nconst _hoisted_2 = {\n  class: \"trading-list__table\"\n};\n\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"tr\", {\n  class: \"trading-list__title\"\n}, [/*#__PURE__*/_createElementVNode(\"td\", {\n  class: \"trading-list__title-item-time\"\n}, \"Время подачи\"), /*#__PURE__*/_createElementVNode(\"td\", {\n  class: \"trading-list__title-item-counterparty\"\n}, \"Контрагент\"), /*#__PURE__*/_createElementVNode(\"td\", {\n  class: \"trading-list__title-item-address\"\n}, \"Адрес доставки\"), /*#__PURE__*/_createElementVNode(\"td\", {\n  class: \"trading-list__title-item-delivery-date\"\n}, \"Дата доставки\"), /*#__PURE__*/_createElementVNode(\"td\", {\n  class: \"trading-list__title-item-price trading-list__item-item_decrease\"\n}, \" Цена за тонну \"), /*#__PURE__*/_createElementVNode(\"td\", {\n  class: \"trading-list__title-item-order trading-list__item-item_increase\"\n}, \" По заявке, т \"), /*#__PURE__*/_createElementVNode(\"td\", {\n  class: \"trading-list__title-item-volume-buy\"\n}, \" Объем к покупке, т \"), /*#__PURE__*/_createElementVNode(\"td\", {\n  class: \"trading-list__title-item-status\"\n}, \"Статус предложения\")], -1\n/* HOISTED */\n));\n\nconst _hoisted_4 = {\n  class: \"trading-list__item-time\"\n};\nconst _hoisted_5 = {\n  class: \"trading-list__item-counterparty\"\n};\nconst _hoisted_6 = {\n  class: \"trading-list__item-address\"\n};\nconst _hoisted_7 = {\n  class: \"trading-list__item-delivery-date\"\n};\nconst _hoisted_8 = {\n  class: \"trading-list__item-order\"\n};\nconst _hoisted_9 = {\n  class: \"trading-list__item-volume-buy\"\n};\nconst _hoisted_10 = {\n  class: \"trading-list__item-status\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ElInputNumber = _resolveComponent(\"ElInputNumber\");\n\n  const _component_OfferStatus = _resolveComponent(\"OfferStatus\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"table\", _hoisted_2, [_createElementVNode(\"tbody\", null, [_hoisted_3, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.offerList, offer => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: offer.id,\n      class: \"trading-list__item\"\n    }, [_createElementVNode(\"td\", _hoisted_4, _toDisplayString(offer.createdAt), 1\n    /* TEXT */\n    ), _createElementVNode(\"td\", _hoisted_5, _toDisplayString(offer.contactor.name), 1\n    /* TEXT */\n    ), _createElementVNode(\"td\", _hoisted_6, _toDisplayString(offer.deliveryAddress), 1\n    /* TEXT */\n    ), _createElementVNode(\"td\", _hoisted_7, _toDisplayString(offer.deliveryDate), 1\n    /* TEXT */\n    ), _createElementVNode(\"td\", {\n      class: _normalizeClass([\"trading-list__item-price trading-list__row-item_price\", !offer.isAccepted ? 'trading-list__item-price_low' : ''])\n    }, _toDisplayString($options.prettify(offer.price)), 3\n    /* TEXT, CLASS */\n    ), _createElementVNode(\"td\", _hoisted_8, _toDisplayString($options.prettify(offer.weight)), 1\n    /* TEXT */\n    ), _createElementVNode(\"td\", _hoisted_9, [_ctx.lot.status.code !== 'receiving' && _ctx.lot.status.code !== 'waiting' && _ctx.lot.status.code !== 'cancelled' ? (_openBlock(), _createBlock(_component_ElInputNumber, {\n      key: 0,\n      id: offer.id,\n      min: 0,\n      max: $options.arrMaxWeightOffers.get(offer.id),\n      modelValue: offer.weightSale,\n      \"onUpdate:modelValue\": $event => offer.weightSale = $event,\n      onChange: $event => $options.isValidWeightSale(offer),\n      disabled: $options.isDisableInputNumber(offer),\n      step: Number(_ctx.lot.multiplicity)\n    }, null, 8\n    /* PROPS */\n    , [\"id\", \"max\", \"modelValue\", \"onUpdate:modelValue\", \"onChange\", \"disabled\", \"step\"])) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"td\", _hoisted_10, [$options.showOfferStatus(offer) ? (_openBlock(), _createBlock(_component_OfferStatus, {\n      key: 0,\n      offer: offer,\n      lot: _ctx.lot,\n      onWarningValidate: _cache[0] || (_cache[0] = $event => $options.showWarningWalidate($event)),\n      checkSwitcher: $options.checkToDisableSwitch\n    }, null, 8\n    /* PROPS */\n    , [\"offer\", \"lot\", \"checkSwitcher\"])) : _createCommentVNode(\"v-if\", true)])]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])])]);\n}","map":{"version":3,"mappings":"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","names":["class","_createElementVNode","_createElementBlock","_hoisted_3","_Fragment","_renderList","_ctx","offer","key","id","_toDisplayString","createdAt","contactor","name","deliveryAddress","deliveryDate","isAccepted","$options","price","weight","status","code","_createBlock","_component_ElInputNumber","min","max","get","weightSale","$event","onChange","disabled","step","Number","multiplicity","_component_OfferStatus","lot","onWarningValidate","checkSwitcher"],"sourceRoot":"","sources":["C:\\openserver\\domains\\U190001472_BitumMap_Vue\\src\\components\\views\\trading-session\\lot\\LotTradingList.vue"],"sourcesContent":["<template>\r\n  <div class=\"trading-list\">\r\n    <table class=\"trading-list__table\">\r\n      <tbody>\r\n        <tr class=\"trading-list__title\">\r\n          <td class=\"trading-list__title-item-time\">Время подачи</td>\r\n          <td class=\"trading-list__title-item-counterparty\">Контрагент</td>\r\n          <td class=\"trading-list__title-item-address\">Адрес доставки</td>\r\n          <td class=\"trading-list__title-item-delivery-date\">Дата доставки</td>\r\n          <td\r\n            class=\"trading-list__title-item-price trading-list__item-item_decrease\"\r\n          >\r\n            Цена за тонну\r\n          </td>\r\n          <td\r\n            class=\"trading-list__title-item-order trading-list__item-item_increase\"\r\n          >\r\n            По заявке, т\r\n          </td>\r\n          <td class=\"trading-list__title-item-volume-buy\">\r\n            Объем к покупке, т\r\n          </td>\r\n          <td class=\"trading-list__title-item-status\">Статус предложения</td>\r\n        </tr>\r\n        <tr\r\n          v-for=\"offer in offerList\"\r\n          v-bind:key=\"offer.id\"\r\n          class=\"trading-list__item\"\r\n        >\r\n          <td class=\"trading-list__item-time\">{{ offer.createdAt }}</td>\r\n          <td class=\"trading-list__item-counterparty\">\r\n            {{ offer.contactor.name }}\r\n          </td>\r\n          <td class=\"trading-list__item-address\">\r\n            {{ offer.deliveryAddress }}\r\n          </td>\r\n          <td class=\"trading-list__item-delivery-date\">\r\n            {{ offer.deliveryDate }}\r\n          </td>\r\n          <td\r\n            class=\"trading-list__item-price trading-list__row-item_price\"\r\n            :class=\"!offer.isAccepted ? 'trading-list__item-price_low' : ''\"\r\n          >\r\n            {{ prettify(offer.price) }}\r\n          </td>\r\n          <td class=\"trading-list__item-order\">{{ prettify(offer.weight) }}</td>\r\n          <td class=\"trading-list__item-volume-buy\">\r\n            <ElInputNumber\r\n              :id=\"offer.id\"\r\n              v-if=\"\r\n                lot.status.code !== 'receiving' &&\r\n                lot.status.code !== 'waiting' &&\r\n                lot.status.code !== 'cancelled'\r\n              \"\r\n              :min=\"0\"\r\n              :max=\"arrMaxWeightOffers.get(offer.id)\"\r\n              v-model=\"offer.weightSale\"\r\n              @change=\"isValidWeightSale(offer)\"\r\n              :disabled=\"isDisableInputNumber(offer)\"\r\n              :step=\"Number(lot.multiplicity)\"\r\n            />\r\n          </td>\r\n          <td class=\"trading-list__item-status\">\r\n            <OfferStatus\r\n              v-if=\"showOfferStatus(offer)\"\r\n              :offer=\"offer\"\r\n              :lot=\"lot\"\r\n              @warningValidate=\"showWarningWalidate($event)\"\r\n              :checkSwitcher=\"checkToDisableSwitch\"\r\n            />\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport OfferStatus from '@/components/views/trading-session/offer/OfferStatus';\r\nimport { useUserStore } from '@/stores/user';\r\nimport { scrollToTop } from '@/utils/helpers/scrollToTop';\r\nimport { mapActions, mapGetters, mapState } from 'vuex';\r\nimport { mapState as mapStatePinia } from 'pinia';\r\n\r\nexport default {\r\n  name: 'LotTradingList',\r\n  components: { OfferStatus },\r\n  data() {\r\n    return {\r\n      editProductData: {\r\n        id: '',\r\n        product_id: '',\r\n        product_name: '',\r\n        product_price: '',\r\n      },\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapStatePinia(useUserStore, ['isTrader', 'isUmiop']),\r\n    ...mapGetters({\r\n      offerList: 'offer/offerListWithEdited',\r\n    }),\r\n    ...mapState({\r\n      lot: (state) => state.lot.lot,\r\n    }),\r\n    avalibleWeightSale() {\r\n      return this.lot.weight - this.sumWeightSale;\r\n    },\r\n    checkToDisableSwitch() {\r\n      return this.avalibleWeightSale === 0;\r\n    },\r\n    sumWeightSale() {\r\n      const arrWeightSale = this.offerList.map((offer) => offer.weightSale);\r\n\r\n      let sum = 0;\r\n      for (let i = 0; i < arrWeightSale.length; i++) {\r\n        sum += arrWeightSale[i];\r\n      }\r\n      return sum;\r\n    },\r\n    arrMaxWeightOffers: {\r\n      get: function () {\r\n        const arrMaxWeight = new Map();\r\n        let weight,\r\n          weightPossibleSale,\r\n          weightSale,\r\n          maxWeight = 0;\r\n        let weightLot = parseInt(this.lot.weight);\r\n        const sumWeightSale = this.offerList.reduce(\r\n          (partialSum, a) => parseInt(partialSum) + a.weightSale,\r\n          0\r\n        );\r\n\r\n        if (sumWeightSale < 0) return arrMaxWeight;\r\n        let avalibleWeightSale = parseInt(weightLot - sumWeightSale);\r\n\r\n        if (avalibleWeightSale < 0) avalibleWeightSale = 0;\r\n\r\n        this.offerList.forEach(function (offer) {\r\n          weight = parseInt(offer.weight);\r\n          weightSale = parseInt(offer.weightSale);\r\n          weightPossibleSale = weightSale + avalibleWeightSale;\r\n\r\n          arrMaxWeight.set(offer.id, weightLot);\r\n\r\n          if (weightLot <= 0) {\r\n            offer.switchAccepted = false;\r\n\r\n            return arrMaxWeight;\r\n          }\r\n\r\n          maxWeight = weightPossibleSale > weight ? weight : weightPossibleSale;\r\n          weightLot = weightLot - weightSale;\r\n          if (weightLot > 0) arrMaxWeight.set(offer.id, maxWeight);\r\n        });\r\n\r\n        return arrMaxWeight;\r\n      },\r\n    },\r\n  },\r\n  methods: {\r\n    ...mapActions('offer', ['setEditedOffers', 'resetEditedOffers']),\r\n\r\n    isDisableInputNumber(offer) {\r\n      if (\r\n        (this.lot.status.code === 'umiop_check' && this.isTrader) ||\r\n        (this.lot.status.code === 'processing' && this.isUmiop) ||\r\n        (this.lot.status.code === 'umiop_check' && this.isUmiop) ||\r\n        this.lot.status.code === 'receiving' ||\r\n        this.lot.status.code === 'waiting' ||\r\n        this.lot.status.code === 'completed' ||\r\n        offer.status.code === 'umiop_done' ||\r\n        offer.status.code === 'umiop_cancelled'\r\n      ) {\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    },\r\n    showWarningWalidate(offerId) {\r\n      // transition: border-color 1s ease;\r\n      //todo: добавить анимацию красный бордер мирцает на ElInputNumber id === offerId\r\n      console.log('show warning offerId=', offerId);\r\n    },\r\n    isValidWeightSale(offer) {\r\n      if (offer.weightSale === 0) {\r\n        this.$store.commit('offer/setSwitchAcceptedToValidWeightSale', {\r\n          offerId: offer.id,\r\n          isValidWeightSale: false,\r\n        });\r\n      } else {\r\n        this.$store.commit('offer/setSwitchAcceptedToValidWeightSale', {\r\n          offerId: offer.id,\r\n          isValidWeightSale: true,\r\n        });\r\n      }\r\n\r\n      this.setEditedOffers({ offer });\r\n    },\r\n    showOfferStatus(offer) {\r\n      if (this.lot.status.code !== 'cancelled') {\r\n        if (this.isTrader) {\r\n          return (\r\n            this.lot.status.code !== 'receiving' &&\r\n            this.lot.status.code !== 'waiting'\r\n          );\r\n        } else if (this.isUmiop) {\r\n          return (\r\n            offer.status.code === 'umiop_check' ||\r\n            offer.status.code === 'umiop_done' ||\r\n            offer.status.code === 'umiop_cancelled'\r\n          );\r\n        } else {\r\n          return (\r\n            this.lot.status.code !== 'receiving' &&\r\n            this.lot.status.code !== 'waiting'\r\n          );\r\n        }\r\n      }\r\n    },\r\n    prettify(str) {\r\n      try {\r\n        str = String(str);\r\n        return str.replace(/(\\d)(?=(\\d\\d\\d)+([^\\d]|$))/g, '$1 ');\r\n      } catch (e) {\r\n        console.error('Error in helpers prettify', e);\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    scrollToTop();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.trading-list {\r\n  margin-top: 0px;\r\n}\r\n.el-input-number {\r\n  width: 125px;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}