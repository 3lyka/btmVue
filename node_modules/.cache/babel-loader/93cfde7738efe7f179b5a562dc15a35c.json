{"ast":null,"code":"import axios from '@/utils/axios';\nimport { logError } from '@/utils/helpers/logError';\n\nconst initialState = () => ({\n  topMenu: [],\n  bottomMenu: [],\n  leftMenu: []\n});\n\nconst state = initialState;\nconst mutations = {\n  resetState(state) {\n    Object.assign(state, initialState());\n  },\n\n  // menuStart(state, payload) {\n  //\n  // },\n  // menuSuccess(state) {\n  //\n  // },\n  // menuFailure(state, payload) {\n  //\n  // },\n  setMenuList(state, payload) {\n    state.topMenu = payload.top;\n    state.bottomMenu = payload.bottom;\n    state.leftMenu = payload.left;\n  }\n\n};\nconst actions = {\n  resetState({\n    commit\n  }) {\n    commit('resetState');\n  },\n\n  getMenu(context) {\n    axios.get('rest/menu/getMenu/').then(response => {\n      context.commit('setMenuList', response.data);\n    }).catch(error => {\n      logError(error);\n    }).finally(() => this.loading = false);\n  }\n\n};\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions\n};","map":{"version":3,"names":["axios","logError","initialState","topMenu","bottomMenu","leftMenu","state","mutations","resetState","Object","assign","setMenuList","payload","top","bottom","left","actions","commit","getMenu","context","get","then","response","data","catch","error","finally","loading","namespaced"],"sources":["C:/openserver/domains/U190001472_BitumMap_Vue/src/store/modules/menu.js"],"sourcesContent":["import axios from '@/utils/axios';\r\nimport { logError } from '@/utils/helpers/logError';\r\n\r\nconst initialState = () => ({\r\n  topMenu: [],\r\n  bottomMenu: [],\r\n  leftMenu: [],\r\n});\r\n\r\nconst state = initialState;\r\n\r\nconst mutations = {\r\n  resetState(state) {\r\n    Object.assign(state, initialState());\r\n  },\r\n\r\n  // menuStart(state, payload) {\r\n  //\r\n  // },\r\n  // menuSuccess(state) {\r\n  //\r\n  // },\r\n  // menuFailure(state, payload) {\r\n  //\r\n  // },\r\n  setMenuList(state, payload) {\r\n    state.topMenu = payload.top;\r\n    state.bottomMenu = payload.bottom;\r\n    state.leftMenu = payload.left;\r\n  },\r\n};\r\n\r\nconst actions = {\r\n  resetState({ commit }) {\r\n    commit('resetState');\r\n  },\r\n\r\n  getMenu(context) {\r\n    axios\r\n      .get('rest/menu/getMenu/')\r\n      .then((response) => {\r\n        context.commit('setMenuList', response.data);\r\n      })\r\n      .catch((error) => {\r\n        logError(error);\r\n      })\r\n      .finally(() => (this.loading = false));\r\n  },\r\n};\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state,\r\n  mutations,\r\n  actions,\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,eAAlB;AACA,SAASC,QAAT,QAAyB,0BAAzB;;AAEA,MAAMC,YAAY,GAAG,OAAO;EAC1BC,OAAO,EAAE,EADiB;EAE1BC,UAAU,EAAE,EAFc;EAG1BC,QAAQ,EAAE;AAHgB,CAAP,CAArB;;AAMA,MAAMC,KAAK,GAAGJ,YAAd;AAEA,MAAMK,SAAS,GAAG;EAChBC,UAAU,CAACF,KAAD,EAAQ;IAChBG,MAAM,CAACC,MAAP,CAAcJ,KAAd,EAAqBJ,YAAY,EAAjC;EACD,CAHe;;EAKhB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAS,WAAW,CAACL,KAAD,EAAQM,OAAR,EAAiB;IAC1BN,KAAK,CAACH,OAAN,GAAgBS,OAAO,CAACC,GAAxB;IACAP,KAAK,CAACF,UAAN,GAAmBQ,OAAO,CAACE,MAA3B;IACAR,KAAK,CAACD,QAAN,GAAiBO,OAAO,CAACG,IAAzB;EACD;;AAlBe,CAAlB;AAqBA,MAAMC,OAAO,GAAG;EACdR,UAAU,CAAC;IAAES;EAAF,CAAD,EAAa;IACrBA,MAAM,CAAC,YAAD,CAAN;EACD,CAHa;;EAKdC,OAAO,CAACC,OAAD,EAAU;IACfnB,KAAK,CACFoB,GADH,CACO,oBADP,EAEGC,IAFH,CAESC,QAAD,IAAc;MAClBH,OAAO,CAACF,MAAR,CAAe,aAAf,EAA8BK,QAAQ,CAACC,IAAvC;IACD,CAJH,EAKGC,KALH,CAKUC,KAAD,IAAW;MAChBxB,QAAQ,CAACwB,KAAD,CAAR;IACD,CAPH,EAQGC,OARH,CAQW,MAAO,KAAKC,OAAL,GAAe,KARjC;EASD;;AAfa,CAAhB;AAkBA,eAAe;EACbC,UAAU,EAAE,IADC;EAEbtB,KAFa;EAGbC,SAHa;EAIbS;AAJa,CAAf"},"metadata":{},"sourceType":"module"}