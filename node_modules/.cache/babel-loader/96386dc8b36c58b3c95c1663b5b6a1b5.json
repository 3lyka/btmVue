{"ast":null,"code":"import { useUserStore } from '@/stores/user';\nimport { mapState as mapStatePinia } from 'pinia';\nexport default {\n  name: 'LotSaleButton',\n  props: ['unsoldBalance', 'lot'],\n  computed: { ...mapStatePinia(useUserStore, ['isTrader', 'isUmiop']),\n\n    text() {\n      const text = 'Продать';\n      return text;\n    },\n\n    showSaleButton() {\n      const curDay = new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate()),\n            lotDay = new Date(new Date().getFullYear(), new Date().getMonth(), new Date(this.lot.dateEnd).getDate());\n\n      if (this.isTrader && curDay.getTime() === lotDay.getTime() && (this.lot.status.code === 'completed' || this.lot.status.code === 'cancelled') && this.unsoldBalance > 0 && !this.lot.resoldInLot) {\n        return true;\n      }\n\n      return false;\n    }\n\n  },\n  methods: {\n    async setLotForm() {\n      const currLot = Object.assign({}, this.lot);\n      currLot.weight = this.unsoldBalance;\n\n      if (this.$route.name !== 'Calendar') {\n        await this.$router.push({\n          name: 'Calendar'\n        });\n      }\n\n      this.$store.commit('lot/setIsSaleButtonClicked', {\n        value: true\n      });\n      this.$store.dispatch('lot/lotFormToSale', currLot);\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAeA,SAASA,YAAT,QAA6B,eAA7B;AACA,SAASC,QAAO,IAAKC,aAArB,QAA0C,OAA1C;AAEA,eAAe;EACbC,IAAI,EAAE,eADO;EAEbC,KAAK,EAAE,CAAC,eAAD,EAAkB,KAAlB,CAFM;EAGbC,QAAQ,EAAE,EACR,GAAGH,aAAa,CAACF,YAAD,EAAe,CAAC,UAAD,EAAa,SAAb,CAAf,CADR;;IAERM,IAAI,GAAG;MACL,MAAMA,IAAG,GAAI,SAAb;MAEA,OAAOA,IAAP;IACD,CANO;;IAORC,cAAc,GAAG;MACf,MAAMC,MAAK,GAAI,IAAIC,IAAJ,CACX,IAAIA,IAAJ,GAAWC,WAAX,EADW,EAEX,IAAID,IAAJ,GAAWE,QAAX,EAFW,EAGX,IAAIF,IAAJ,GAAWG,OAAX,EAHW,CAAf;MAAA,MAKEC,MAAK,GAAI,IAAIJ,IAAJ,CACP,IAAIA,IAAJ,GAAWC,WAAX,EADO,EAEP,IAAID,IAAJ,GAAWE,QAAX,EAFO,EAGP,IAAIF,IAAJ,CAAS,KAAKK,GAAL,CAASC,OAAlB,EAA2BH,OAA3B,EAHO,CALX;;MAWA,IACE,KAAKI,QAAL,IACAR,MAAM,CAACS,OAAP,OAAqBJ,MAAM,CAACI,OAAP,EADrB,KAEC,KAAKH,GAAL,CAASI,MAAT,CAAgBC,IAAhB,KAAyB,WAAzB,IACC,KAAKL,GAAL,CAASI,MAAT,CAAgBC,IAAhB,KAAyB,WAH3B,KAIA,KAAKC,aAAL,GAAqB,CAJrB,IAKA,CAAC,KAAKN,GAAL,CAASO,WANZ,EAOE;QACA,OAAO,IAAP;MACF;;MAEA,OAAO,KAAP;IACD;;EA/BO,CAHG;EAoCbC,OAAO,EAAE;IACP,MAAMC,UAAN,GAAmB;MACjB,MAAMC,OAAM,GAAIC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKZ,GAAvB,CAAhB;MAEAU,OAAO,CAACG,MAAR,GAAiB,KAAKP,aAAtB;;MAEA,IAAI,KAAKQ,MAAL,CAAYzB,IAAZ,KAAqB,UAAzB,EAAqC;QACnC,MAAM,KAAK0B,OAAL,CAAaC,IAAb,CAAkB;UAAE3B,IAAI,EAAE;QAAR,CAAlB,CAAN;MACF;;MAEA,KAAK4B,MAAL,CAAYC,MAAZ,CAAmB,4BAAnB,EAAiD;QAAEC,KAAK,EAAE;MAAT,CAAjD;MACA,KAAKF,MAAL,CAAYG,QAAZ,CAAqB,mBAArB,EAA0CV,OAA1C;IACD;;EAZM;AApCI,CAAf","names":["useUserStore","mapState","mapStatePinia","name","props","computed","text","showSaleButton","curDay","Date","getFullYear","getMonth","getDate","lotDay","lot","dateEnd","isTrader","getTime","status","code","unsoldBalance","resoldInLot","methods","setLotForm","currLot","Object","assign","weight","$route","$router","push","$store","commit","value","dispatch"],"sourceRoot":"","sources":["C:\\openserver\\domains\\U190001472_BitumMap_Vue\\src\\components\\views\\trading-session\\lot\\LotSaleButton.vue"],"sourcesContent":["<template>\r\n  <button\r\n    v-if=\"showSaleButton\"\r\n    @click=\"setLotForm\"\r\n    class=\"lot-detail__sale-button\"\r\n    :class=\"unsoldBalance !== 0 ? 'lot-detail__sale-button_active' : ''\"\r\n  >\r\n    {{ text }}\r\n  </button>\r\n  <button v-else-if=\"lot.resoldInLot\" class=\"calendar__lot-sale-button\">\r\n    Выставлен<br />в лоте №{{ lot.resoldInLot }}\r\n  </button>\r\n</template>\r\n\r\n<script>\r\nimport { useUserStore } from '@/stores/user';\r\nimport { mapState as mapStatePinia } from 'pinia';\r\n\r\nexport default {\r\n  name: 'LotSaleButton',\r\n  props: ['unsoldBalance', 'lot'],\r\n  computed: {\r\n    ...mapStatePinia(useUserStore, ['isTrader', 'isUmiop']),\r\n    text() {\r\n      const text = 'Продать';\r\n\r\n      return text;\r\n    },\r\n    showSaleButton() {\r\n      const curDay = new Date(\r\n          new Date().getFullYear(),\r\n          new Date().getMonth(),\r\n          new Date().getDate()\r\n        ),\r\n        lotDay = new Date(\r\n          new Date().getFullYear(),\r\n          new Date().getMonth(),\r\n          new Date(this.lot.dateEnd).getDate()\r\n        );\r\n\r\n      if (\r\n        this.isTrader &&\r\n        curDay.getTime() === lotDay.getTime() &&\r\n        (this.lot.status.code === 'completed' ||\r\n          this.lot.status.code === 'cancelled') &&\r\n        this.unsoldBalance > 0 &&\r\n        !this.lot.resoldInLot\r\n      ) {\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    },\r\n  },\r\n  methods: {\r\n    async setLotForm() {\r\n      const currLot = Object.assign({}, this.lot);\r\n\r\n      currLot.weight = this.unsoldBalance;\r\n\r\n      if (this.$route.name !== 'Calendar') {\r\n        await this.$router.push({ name: 'Calendar' });\r\n      }\r\n\r\n      this.$store.commit('lot/setIsSaleButtonClicked', { value: true });\r\n      this.$store.dispatch('lot/lotFormToSale', currLot);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped></style>\r\n"]},"metadata":{},"sourceType":"module"}