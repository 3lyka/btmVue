{"ast":null,"code":"import OfferStatus from '@/components/views/trading-session/offer/OfferStatus';\nimport { useUserStore } from '@/stores/user';\nimport { scrollToTop } from '@/utils/helpers/scrollToTop';\nimport { mapActions, mapGetters, mapState } from 'vuex';\nimport { mapState as mapStatePinia } from 'pinia';\nexport default {\n  name: 'LotTradingList',\n  components: {\n    OfferStatus\n  },\n\n  data() {\n    return {\n      editProductData: {\n        id: '',\n        product_id: '',\n        product_name: '',\n        product_price: ''\n      }\n    };\n  },\n\n  computed: { ...mapStatePinia(useUserStore, ['isTrader', 'isUmiop']),\n    ...mapGetters({\n      offerList: 'offer/offerListWithEdited'\n    }),\n    ...mapState({\n      lot: state => state.lot.lot\n    }),\n\n    avalibleWeightSale() {\n      return this.lot.weight - this.sumWeightSale;\n    },\n\n    checkToDisableSwitch() {\n      return this.avalibleWeightSale === 0;\n    },\n\n    sumWeightSale() {\n      const arrWeightSale = this.offerList.map(offer => offer.weightSale);\n      let sum = 0;\n\n      for (let i = 0; i < arrWeightSale.length; i++) {\n        sum += arrWeightSale[i];\n      }\n\n      return sum;\n    },\n\n    arrMaxWeightOffers: {\n      get: function () {\n        const arrMaxWeight = new Map();\n        let weight,\n            weightPossibleSale,\n            weightSale,\n            maxWeight = 0;\n        let weightLot = parseInt(this.lot.weight);\n        const sumWeightSale = this.offerList.reduce((partialSum, a) => parseInt(partialSum) + a.weightSale, 0);\n        if (sumWeightSale < 0) return arrMaxWeight;\n        let avalibleWeightSale = parseInt(weightLot - sumWeightSale);\n        if (avalibleWeightSale < 0) avalibleWeightSale = 0;\n        this.offerList.forEach(function (offer) {\n          weight = parseInt(offer.weight);\n          weightSale = parseInt(offer.weightSale);\n          weightPossibleSale = weightSale + avalibleWeightSale;\n          arrMaxWeight.set(offer.id, weightLot);\n\n          if (weightLot <= 0) {\n            offer.switchAccepted = false;\n            return arrMaxWeight;\n          }\n\n          maxWeight = weightPossibleSale > weight ? weight : weightPossibleSale;\n          weightLot = weightLot - weightSale;\n          if (weightLot > 0) arrMaxWeight.set(offer.id, maxWeight);\n        });\n        return arrMaxWeight;\n      }\n    }\n  },\n  methods: { ...mapActions('offer', ['setEditedOffers', 'resetEditedOffers']),\n\n    isDisableInputNumber(offer) {\n      if (this.lot.status.code === 'umiop_check' && this.isTrader || this.lot.status.code === 'processing' && this.isUmiop || this.lot.status.code === 'umiop_check' && this.isUmiop || this.lot.status.code === 'receiving' || this.lot.status.code === 'waiting' || this.lot.status.code === 'completed' || offer.status.code === 'umiop_done' || offer.status.code === 'umiop_cancelled') {\n        return true;\n      }\n\n      return false;\n    },\n\n    showWarningWalidate(offerId) {\n      // transition: border-color 1s ease;\n      //todo: добавить анимацию красный бордер мирцает на ElInputNumber id === offerId\n      console.log('show warning offerId=', offerId);\n    },\n\n    isValidWeightSale(offer) {\n      if (offer.weightSale === 0) {\n        this.$store.commit('offer/setSwitchAcceptedToValidWeightSale', {\n          offerId: offer.id,\n          isValidWeightSale: false\n        });\n      } else {\n        this.$store.commit('offer/setSwitchAcceptedToValidWeightSale', {\n          offerId: offer.id,\n          isValidWeightSale: true\n        });\n      }\n\n      this.setEditedOffers({\n        offer\n      });\n    },\n\n    showOfferStatus(offer) {\n      if (this.lot.status.code !== 'cancelled') {\n        if (this.isTrader) {\n          return this.lot.status.code !== 'receiving' && this.lot.status.code !== 'waiting';\n        } else if (this.isUmiop) {\n          return offer.status.code === 'umiop_check' || offer.status.code === 'umiop_done' || offer.status.code === 'umiop_cancelled';\n        } else {\n          return this.lot.status.code !== 'receiving' && this.lot.status.code !== 'waiting';\n        }\n      }\n    },\n\n    prettify(str) {\n      try {\n        str = String(str);\n        return str.replace(/(\\d)(?=(\\d\\d\\d)+([^\\d]|$))/g, '$1 ');\n      } catch (e) {\n        console.error('Error in helpers prettify', e);\n      }\n    }\n\n  },\n\n  mounted() {\n    scrollToTop();\n  }\n\n};","map":{"version":3,"mappings":"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","names":["OfferStatus","useUserStore","scrollToTop","mapActions","mapGetters","mapState","mapStatePinia","name","components","data","editProductData","id","product_id","product_name","product_price","computed","offerList","lot","state","avalibleWeightSale","weight","sumWeightSale","checkToDisableSwitch","arrWeightSale","map","offer","weightSale","sum","i","length","arrMaxWeightOffers","get","arrMaxWeight","Map","weightPossibleSale","maxWeight","weightLot","parseInt","reduce","partialSum","a","forEach","set","switchAccepted","methods","isDisableInputNumber","status","code","isTrader","isUmiop","showWarningWalidate","offerId","console","log","isValidWeightSale","$store","commit","setEditedOffers","showOfferStatus","prettify","str","String","replace","e","error","mounted"],"sourceRoot":"","sources":["C:\\openserver\\domains\\U190001472_BitumMap_Vue\\src\\components\\views\\trading-session\\lot\\LotTradingList.vue"],"sourcesContent":["<template>\r\n  <div class=\"trading-list\">\r\n    <table class=\"trading-list__table\">\r\n      <tbody>\r\n        <tr class=\"trading-list__title\">\r\n          <td class=\"trading-list__title-item-time\">Время подачи</td>\r\n          <td class=\"trading-list__title-item-counterparty\">Контрагент</td>\r\n          <td class=\"trading-list__title-item-address\">Адрес доставки</td>\r\n          <td class=\"trading-list__title-item-delivery-date\">Дата доставки</td>\r\n          <td\r\n            class=\"trading-list__title-item-price trading-list__item-item_decrease\"\r\n          >\r\n            Цена за тонну\r\n          </td>\r\n          <td\r\n            class=\"trading-list__title-item-order trading-list__item-item_increase\"\r\n          >\r\n            По заявке, т\r\n          </td>\r\n          <td class=\"trading-list__title-item-volume-buy\">\r\n            Объем к покупке, т\r\n          </td>\r\n          <td class=\"trading-list__title-item-status\">Статус предложения</td>\r\n        </tr>\r\n        <tr\r\n          v-for=\"offer in offerList\"\r\n          v-bind:key=\"offer.id\"\r\n          class=\"trading-list__item\"\r\n        >\r\n          <td class=\"trading-list__item-time\">{{ offer.createdAt }}</td>\r\n          <td class=\"trading-list__item-counterparty\">\r\n            {{ offer.contactor.name }}\r\n          </td>\r\n          <td class=\"trading-list__item-address\">\r\n            {{ offer.deliveryAddress }}\r\n          </td>\r\n          <td class=\"trading-list__item-delivery-date\">\r\n            {{ offer.deliveryDate }}\r\n          </td>\r\n          <td\r\n            class=\"trading-list__item-price trading-list__row-item_price\"\r\n            :class=\"!offer.isAccepted ? 'trading-list__item-price_low' : ''\"\r\n          >\r\n            {{ prettify(offer.price) }}\r\n          </td>\r\n          <td class=\"trading-list__item-order\">{{ prettify(offer.weight) }}</td>\r\n          <td class=\"trading-list__item-volume-buy\">\r\n            <ElInputNumber\r\n              :id=\"offer.id\"\r\n              v-if=\"\r\n                lot.status.code !== 'receiving' &&\r\n                lot.status.code !== 'waiting' &&\r\n                lot.status.code !== 'cancelled'\r\n              \"\r\n              :min=\"0\"\r\n              :max=\"arrMaxWeightOffers.get(offer.id)\"\r\n              v-model=\"offer.weightSale\"\r\n              @change=\"isValidWeightSale(offer)\"\r\n              :disabled=\"isDisableInputNumber(offer)\"\r\n              :step=\"Number(lot.multiplicity)\"\r\n            />\r\n          </td>\r\n          <td class=\"trading-list__item-status\">\r\n            <OfferStatus\r\n              v-if=\"showOfferStatus(offer)\"\r\n              :offer=\"offer\"\r\n              :lot=\"lot\"\r\n              @warningValidate=\"showWarningWalidate($event)\"\r\n              :checkSwitcher=\"checkToDisableSwitch\"\r\n            />\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport OfferStatus from '@/components/views/trading-session/offer/OfferStatus';\r\nimport { useUserStore } from '@/stores/user';\r\nimport { scrollToTop } from '@/utils/helpers/scrollToTop';\r\nimport { mapActions, mapGetters, mapState } from 'vuex';\r\nimport { mapState as mapStatePinia } from 'pinia';\r\n\r\nexport default {\r\n  name: 'LotTradingList',\r\n  components: { OfferStatus },\r\n  data() {\r\n    return {\r\n      editProductData: {\r\n        id: '',\r\n        product_id: '',\r\n        product_name: '',\r\n        product_price: '',\r\n      },\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapStatePinia(useUserStore, ['isTrader', 'isUmiop']),\r\n    ...mapGetters({\r\n      offerList: 'offer/offerListWithEdited',\r\n    }),\r\n    ...mapState({\r\n      lot: (state) => state.lot.lot,\r\n    }),\r\n    avalibleWeightSale() {\r\n      return this.lot.weight - this.sumWeightSale;\r\n    },\r\n    checkToDisableSwitch() {\r\n      return this.avalibleWeightSale === 0;\r\n    },\r\n    sumWeightSale() {\r\n      const arrWeightSale = this.offerList.map((offer) => offer.weightSale);\r\n\r\n      let sum = 0;\r\n      for (let i = 0; i < arrWeightSale.length; i++) {\r\n        sum += arrWeightSale[i];\r\n      }\r\n      return sum;\r\n    },\r\n    arrMaxWeightOffers: {\r\n      get: function () {\r\n        const arrMaxWeight = new Map();\r\n        let weight,\r\n          weightPossibleSale,\r\n          weightSale,\r\n          maxWeight = 0;\r\n        let weightLot = parseInt(this.lot.weight);\r\n        const sumWeightSale = this.offerList.reduce(\r\n          (partialSum, a) => parseInt(partialSum) + a.weightSale,\r\n          0\r\n        );\r\n\r\n        if (sumWeightSale < 0) return arrMaxWeight;\r\n        let avalibleWeightSale = parseInt(weightLot - sumWeightSale);\r\n\r\n        if (avalibleWeightSale < 0) avalibleWeightSale = 0;\r\n\r\n        this.offerList.forEach(function (offer) {\r\n          weight = parseInt(offer.weight);\r\n          weightSale = parseInt(offer.weightSale);\r\n          weightPossibleSale = weightSale + avalibleWeightSale;\r\n\r\n          arrMaxWeight.set(offer.id, weightLot);\r\n\r\n          if (weightLot <= 0) {\r\n            offer.switchAccepted = false;\r\n\r\n            return arrMaxWeight;\r\n          }\r\n\r\n          maxWeight = weightPossibleSale > weight ? weight : weightPossibleSale;\r\n          weightLot = weightLot - weightSale;\r\n          if (weightLot > 0) arrMaxWeight.set(offer.id, maxWeight);\r\n        });\r\n\r\n        return arrMaxWeight;\r\n      },\r\n    },\r\n  },\r\n  methods: {\r\n    ...mapActions('offer', ['setEditedOffers', 'resetEditedOffers']),\r\n\r\n    isDisableInputNumber(offer) {\r\n      if (\r\n        (this.lot.status.code === 'umiop_check' && this.isTrader) ||\r\n        (this.lot.status.code === 'processing' && this.isUmiop) ||\r\n        (this.lot.status.code === 'umiop_check' && this.isUmiop) ||\r\n        this.lot.status.code === 'receiving' ||\r\n        this.lot.status.code === 'waiting' ||\r\n        this.lot.status.code === 'completed' ||\r\n        offer.status.code === 'umiop_done' ||\r\n        offer.status.code === 'umiop_cancelled'\r\n      ) {\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    },\r\n    showWarningWalidate(offerId) {\r\n      // transition: border-color 1s ease;\r\n      //todo: добавить анимацию красный бордер мирцает на ElInputNumber id === offerId\r\n      console.log('show warning offerId=', offerId);\r\n    },\r\n    isValidWeightSale(offer) {\r\n      if (offer.weightSale === 0) {\r\n        this.$store.commit('offer/setSwitchAcceptedToValidWeightSale', {\r\n          offerId: offer.id,\r\n          isValidWeightSale: false,\r\n        });\r\n      } else {\r\n        this.$store.commit('offer/setSwitchAcceptedToValidWeightSale', {\r\n          offerId: offer.id,\r\n          isValidWeightSale: true,\r\n        });\r\n      }\r\n\r\n      this.setEditedOffers({ offer });\r\n    },\r\n    showOfferStatus(offer) {\r\n      if (this.lot.status.code !== 'cancelled') {\r\n        if (this.isTrader) {\r\n          return (\r\n            this.lot.status.code !== 'receiving' &&\r\n            this.lot.status.code !== 'waiting'\r\n          );\r\n        } else if (this.isUmiop) {\r\n          return (\r\n            offer.status.code === 'umiop_check' ||\r\n            offer.status.code === 'umiop_done' ||\r\n            offer.status.code === 'umiop_cancelled'\r\n          );\r\n        } else {\r\n          return (\r\n            this.lot.status.code !== 'receiving' &&\r\n            this.lot.status.code !== 'waiting'\r\n          );\r\n        }\r\n      }\r\n    },\r\n    prettify(str) {\r\n      try {\r\n        str = String(str);\r\n        return str.replace(/(\\d)(?=(\\d\\d\\d)+([^\\d]|$))/g, '$1 ');\r\n      } catch (e) {\r\n        console.error('Error in helpers prettify', e);\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    scrollToTop();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.trading-list {\r\n  margin-top: 0px;\r\n}\r\n.el-input-number {\r\n  width: 125px;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}