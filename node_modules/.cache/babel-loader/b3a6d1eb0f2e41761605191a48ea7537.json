{"ast":null,"code":"import { toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, vModelCheckbox as _vModelCheckbox, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = [\"checked\", \"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass([\"trading-confirm\", $options.isUmiopCheckStatusLot && $props.offer.status.code !== 'umiop_check' && _ctx.isTrader ? 'trading-confirm_disable' : ''])\n  }, [_createElementVNode(\"div\", {\n    class: _normalizeClass([\"trading-confirm__text\", $options.setColorByStatus]),\n    style: {\n      \"background\": \"none\"\n    }\n  }, _toDisplayString($options.showOfferStatus()), 3\n  /* TEXT, CLASS */\n  ), _ctx.showSwitchAccepted ? _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n    key: 0,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.switchAccepted = $event),\n    checked: _ctx.switchAccepted,\n    onChange: _cache[1] || (_cache[1] = $event => $options.onSwitchAccepted()),\n    class: \"trading-confirm__button\",\n    type: \"checkbox\",\n    disabled: $options.isDisableSwitch || $props.checkSwitcher && $options.isDisableInactiveSwitch\n  }, null, 40\n  /* PROPS, HYDRATE_EVENTS */\n  , _hoisted_1)), [[_vModelCheckbox, _ctx.switchAccepted]]) : _createCommentVNode(\"v-if\", true)], 2\n  /* CLASS */\n  );\n}","map":{"version":3,"mappings":";;;uBACEA,oBAwBM,KAxBN,EAwBM;IAvBJC,KAAK,mBAAC,iBAAD,EACWC,kCAAyBC,aAAMC,MAAN,CAAaC,IAAb,KAAiB,aAA1C,IAAgEC,aAAhE,iCADX;EAuBD,CAxBN,GAQEC,oBAMM,KANN,EAMM;IALJN,KAAK,mBAAC,uBAAD,EACGC,yBADH,EAKD;IAHJM,KAAwB,EAAxB;MAAA;IAAA;EAGI,CANN,mBAKKN,2BALL,EAKoB;EAAA;EALpB,GAQQI,yDADRN,oBAQE,OARF,EAQE;UAAA;+DANSM,sBAAcG,OAMvB;IALCC,OAAO,EAAEJ,mBAKV;IAJCK,QAAM,sCAAET,2BAAF,CAIP;IAHAD,KAAK,EAAC,yBAGN;IAFAW,IAAI,EAAC,UAEL;IADCC,QAAQ,EAAEX,4BAAoBC,wBAAiBD;EAChD,CARF;;EAAA,mCAEWI,2DAjBb;;EAAA","names":["_createElementBlock","class","$options","$props","status","code","_ctx","_createElementVNode","style","$event","checked","onChange","type","disabled"],"sourceRoot":"","sources":["C:\\openserver\\domains\\U190001472_BitumMap_Vue\\src\\components\\views\\trading-session\\offer\\OfferStatus.vue"],"sourcesContent":["<template>\r\n  <div\r\n    class=\"trading-confirm\"\r\n    :class=\"\r\n      isUmiopCheckStatusLot && offer.status.code !== 'umiop_check' && isTrader\r\n        ? 'trading-confirm_disable'\r\n        : ''\r\n    \"\r\n  >\r\n    <div\r\n      class=\"trading-confirm__text\"\r\n      :class=\"setColorByStatus\"\r\n      style=\"background: none\"\r\n    >\r\n      {{ showOfferStatus() }}\r\n    </div>\r\n    <input\r\n      v-if=\"showSwitchAccepted\"\r\n      v-model=\"switchAccepted\"\r\n      :checked=\"switchAccepted\"\r\n      @change=\"onSwitchAccepted()\"\r\n      class=\"trading-confirm__button\"\r\n      type=\"checkbox\"\r\n      :disabled=\"isDisableSwitch || (checkSwitcher && isDisableInactiveSwitch)\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { useUserStore } from '@/stores/user';\r\nimport { mapActions } from 'vuex';\r\nimport { mapState as mapStatePinia } from 'pinia';\r\n\r\nexport default {\r\n  name: 'OfferStatus',\r\n  props: {\r\n    offer: {},\r\n    lot: {},\r\n    checkSwitcher: Boolean,\r\n  },\r\n  data: () => ({\r\n    switchAccepted: false,\r\n    showSwitchAccepted: true,\r\n  }),\r\n  computed: {\r\n    ...mapStatePinia(useUserStore, ['isTrader', 'isUmiop']),\r\n    isUmiopCheckStatusLot() {\r\n      return this.lot.status.code === 'umiop_check';\r\n    },\r\n    isDisableInactiveSwitch() {\r\n      return (\r\n        (!this.offer.switchAccepted || this.offer.weightSale == 0) &&\r\n        !this.isUmiopCheckStatusLot\r\n      );\r\n    },\r\n    isDisableSwitch() {\r\n      if (this.lot.status.code !== 'completed') {\r\n        if (this.isUmiop) {\r\n          return false;\r\n        } else {\r\n          return this.isUmiopCheckStatusLot;\r\n        }\r\n      } else {\r\n        return true;\r\n      }\r\n    },\r\n    setColorByStatus() {\r\n      if (this.offer.status.code === 'umiop_check' && this.isTrader) {\r\n        return 'status_umiop_check';\r\n      } else if (this.offer.status.code === 'umiop_done') {\r\n        return 'status_umiop_done';\r\n      } else if (this.offer.status.code === 'umiop_cancelled') {\r\n        return 'status_umiop_cancelled';\r\n      } else {\r\n        return '';\r\n      }\r\n    },\r\n  },\r\n\r\n  mounted() {\r\n    if (\r\n      this.offer.status.code !== 'umiop_check' &&\r\n      this.offer.status.code !== 'cancelled'\r\n    ) {\r\n      this.switchAccepted = this.offer.isAccepted; //isAccepted = если true то цена выше прейскурантной, если false, то ниже\r\n\r\n      if (this.offer.weightSale === 0) {\r\n        this.switchAccepted = false;\r\n      }\r\n    }\r\n\r\n    this.$store.subscribe((mutations) => {\r\n      if (mutations.type === 'offer/setSwitchAcceptedToValidWeightSale') {\r\n        this.switchAccepted = this.offer.switchAccepted;\r\n        this.onSwitchAccepted();\r\n      }\r\n    });\r\n  },\r\n  created() {\r\n    if (this.offer.status.code === 'umiop_check' && this.isUmiop) {\r\n      this.switchAccepted = true;\r\n      this.onSwitchAccepted();\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapActions('offer', ['setEditedOffers']),\r\n\r\n    showOfferStatus() {\r\n      if (this.switchAccepted && this.offer.status.code === 'new') {\r\n        return this.offer.status.name;\r\n      } else if (this.offer.status.code === 'umiop_check') {\r\n        if (this.isTrader) {\r\n          this.showSwitchAccepted = false;\r\n          return this.offer.status.name;\r\n        } else if (this.isUmiop && this.switchAccepted) {\r\n          return 'Принято';\r\n        } else {\r\n          return 'Отклонено';\r\n        }\r\n      } else if (this.offer.status.code === 'umiop_done') {\r\n        this.showSwitchAccepted = false;\r\n        return this.offer.status.name;\r\n      } else if (this.offer.status.code === 'umiop_cancelled') {\r\n        this.showSwitchAccepted = false;\r\n        return this.offer.status.name;\r\n      } else {\r\n        if (this.switchAccepted) {\r\n          return 'Принято';\r\n        } else {\r\n          return 'Отклонено';\r\n        }\r\n      }\r\n    },\r\n    onSwitchAccepted() {\r\n      if (this.isTrader) {\r\n        this.$store.dispatch('offer/onSwitchAccepted', {\r\n          isTrader: this.isTrader,\r\n          offerId: this.offer.id,\r\n          weightSale: this.offer.weightSale,\r\n          multiplicity: this.lot.multiplicity,\r\n          switchAccepted: this.switchAccepted,\r\n        });\r\n      }\r\n\r\n      if (this.isUmiop) {\r\n        this.$store.dispatch('offer/onSwitchAccepted', {\r\n          offerId: this.offer.id,\r\n          switchAccepted: this.switchAccepted,\r\n        });\r\n      }\r\n\r\n      this.setEditedOffers({ offer: this.offer });\r\n    },\r\n    setStatus(id, status) {\r\n      this.$store.commit('offer/setOfferStatus', {\r\n        id: id,\r\n        status: status,\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped></style>\r\n"]},"metadata":{},"sourceType":"module"}