{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, vShow as _vShow, createBlock as _createBlock, withDirectives as _withDirectives, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"calendar__month-item-list\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"calendar__month-item-footer\"\n};\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"svg\", {\n  width: \"16\",\n  height: \"16\",\n  viewBox: \"0 0 16 16\",\n  fill: \"none\",\n  xmlns: \"http://www.w3.org/2000/svg\"\n}, [/*#__PURE__*/_createElementVNode(\"path\", {\n  d: \"M14 5L8 11L2 5\",\n  stroke: \"#0089FF\",\n  \"stroke-miterlimit\": \"10\",\n  \"stroke-linecap\": \"round\",\n  \"stroke-linejoin\": \"round\"\n})], -1);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_CalendarMonthDayLot = _resolveComponent(\"CalendarMonthDayLot\");\n\n  const _component_CalendarMonthDayLotAdd = _resolveComponent(\"CalendarMonthDayLotAdd\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"ul\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.lotsPerDay, (lot, i) => {\n    return _withDirectives((_openBlock(), _createBlock(_component_CalendarMonthDayLot, {\n      key: lot.id,\n      lot: lot,\n      isLotSelected: _ctx.selectedLotId === lot.id\n    }, null, 8, [\"lot\", \"isLotSelected\"])), [[_vShow, i < $props.defaultShowLots || _ctx.isShowLots && $props.isShowClose]]);\n  }), 128))]), !$props.isShowClose ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [$options.isShowedMore ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.showLots && $options.showLots(...args)),\n    class: \"calendar__month-next-button\"\n  }, [_createTextVNode(\" Ещё +\" + _toDisplayString($props.lotsPerDay.length - $props.defaultShowLots) + \" \", 1), _hoisted_3])) : _createCommentVNode(\"\", true), ($options.isFutureDay($props.day.date) || $props.day.current) && _ctx.isTrader ? (_openBlock(), _createBlock(_component_CalendarMonthDayLotAdd, {\n    key: 1,\n    day: $props.day.date\n  }, null, 8, [\"day\"])) : _createCommentVNode(\"\", true)])) : _createCommentVNode(\"\", true)], 64);\n}","map":{"version":3,"mappings":";;EACMA,KAAK,EAAC;;;;EAULA,KAAK,EAAC;;;gCAOPC,oBAcM,KAdN,EAcM;EAbJC,KAAK,EAAC,IAaF;EAZJC,MAAM,EAAC,IAYH;EAXJC,OAAO,EAAC,WAWJ;EAVJC,IAAI,EAAC,MAUD;EATJC,KAAK,EAAC;AASF,CAdN,gBAOEL,oBAME,MANF,EAME;EALAM,CAAC,EAAC,gBAKF;EAJAC,MAAM,EAAC,SAIP;EAHA,qBAAkB,IAGlB;EAFA,kBAAe,OAEf;EADA,mBAAgB;AAChB,CANF,EAPF;;;;;;;6DAjBJP,oBAQK,IARL,cAQK,oBAPHQ,oBAMEC,SANF,EAME,IANF,EAMEC,YALmBC,iBAKnB,EAL6B,CAArBC,GAAqB,EAAhBC,CAAgB,KAAf;0CADhBC,aAMEC,8BANF,EAME;MAJCC,GAAG,EAAEJ,GAAG,CAACK,EAIV;MAFCL,GAAG,EAAEA,GAEN;MADCM,aAAa,EAAEC,uBAAkBP,GAAG,CAACK;IACtC,CANF,iDAGUJ,CAAC,GAAGF,sBAAJ,IAAwBQ,mBAAcR;GAG9C,CANF,MAOG,EARL,IAUgDA,oCAAhDH,oBA2BM,KA3BN,cA2BM,CAxBIY,uCAFRZ,oBAqBM,KArBN,EAqBM;UAAA;IApBHa,OAAK,yCAAED,+CAAF,CAoBF;IAlBJrB,KAAK,EAAC;EAkBF,CArBN,oBAIC,WACMuB,iBAAGX,kBAAWY,MAAX,GAAoBZ,sBAAvB,CADN,GAC+C,KAC9C,eANF,kCA0BI,GAFKS,qBAAYT,WAAIa,IAAhB,KAAyBb,WAAIc,YAAYN,+BAFlDL,aAGEY,iCAHF,EAGE;UAAA;IAFCC,GAAG,EAAEhB,WAAIa;EAEV,CAHF,oDAII,CA3BN","names":["class","_createElementVNode","width","height","viewBox","fill","xmlns","d","stroke","_createElementBlock","_Fragment","_renderList","$props","lot","i","_createBlock","_component_CalendarMonthDayLot","key","id","isLotSelected","_ctx","$options","onClick","_toDisplayString","length","date","current","_component_CalendarMonthDayLotAdd","day"],"sourceRoot":"","sources":["C:\\openserver\\domains\\U190001472_BitumMap_Vue\\src\\components\\views\\trading-session\\calendar\\CalendarMonthDayLotList.vue"],"sourcesContent":["<template>\r\n  <ul class=\"calendar__month-item-list\">\r\n    <CalendarMonthDayLot\r\n      v-for=\"(lot, i) in lotsPerDay\"\r\n      :key=\"lot.id\"\r\n      v-show=\"i < defaultShowLots || (isShowLots && isShowClose)\"\r\n      :lot=\"lot\"\r\n      :isLotSelected=\"selectedLotId === lot.id\"\r\n    />\r\n  </ul>\r\n  <!-- скрываем, если модальное окно со всеми слотами открыто -->\r\n  <div class=\"calendar__month-item-footer\" v-if=\"!isShowClose\">\r\n    <div\r\n      @click=\"showLots\"\r\n      v-if=\"isShowedMore\"\r\n      class=\"calendar__month-next-button\"\r\n    >\r\n      Ещё +{{ lotsPerDay.length - defaultShowLots }}\r\n      <svg\r\n        width=\"16\"\r\n        height=\"16\"\r\n        viewBox=\"0 0 16 16\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <path\r\n          d=\"M14 5L8 11L2 5\"\r\n          stroke=\"#0089FF\"\r\n          stroke-miterlimit=\"10\"\r\n          stroke-linecap=\"round\"\r\n          stroke-linejoin=\"round\"\r\n        />\r\n      </svg>\r\n    </div>\r\n    <CalendarMonthDayLotAdd\r\n      :day=\"day.date\"\r\n      v-if=\"(isFutureDay(day.date) || day.current) && isTrader\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport CalendarMonthDayLot from '@/components/views/trading-session/calendar/CalendarMonthDayLot';\r\nimport CalendarMonthDayLotAdd from '@/components/views/trading-session/calendar/CalendarMonthDayLotAdd';\r\nimport { useUserStore } from '@/stores/user';\r\nimport { mapState } from 'vuex';\r\nimport { mapState as mapStatePinia } from 'pinia';\r\n\r\nexport default {\r\n  name: 'CalendarMonthDayLotList',\r\n  emits: ['clickShowLots'],\r\n  props: {\r\n    lotsPerDay: Object,\r\n    defaultShowLots: Number,\r\n    day: Object,\r\n    isShowClose: Boolean,\r\n  },\r\n  data: () => ({\r\n    isShowLots: false,\r\n  }),\r\n\r\n  watch: {\r\n    isShowClose(newVal) {\r\n      if (!newVal) {\r\n        this.setCalendarModalBoundries({ isReset: true });\r\n      }\r\n    },\r\n  },\r\n\r\n  computed: {\r\n    ...mapState({\r\n      selectedLotId: (state) => state.lot.lot.id,\r\n    }),\r\n    ...mapStatePinia(useUserStore, ['isTrader', 'isUmiop']),\r\n\r\n    isShowedMore() {\r\n      return (\r\n        this.lotsPerDay.length > this.defaultShowLots &&\r\n        (!this.isShowLots || !this.isShowClose)\r\n      );\r\n    },\r\n  },\r\n  methods: {\r\n    showLots() {\r\n      this.isShowLots = true;\r\n      this.$emit('clickShowLots');\r\n\r\n      this.$nextTick(() => {\r\n        this.setCalendarModalBoundries();\r\n      });\r\n    },\r\n    isDatesMatch(dateA, dateB) {\r\n      if (!(dateA instanceof Date)) {\r\n        dateA = new Date(dateA);\r\n      }\r\n      if (!(dateB instanceof Date)) {\r\n        dateB = new Date(dateB);\r\n      }\r\n\r\n      return dateA.toLocaleDateString() === dateB.toLocaleDateString();\r\n    },\r\n    isFutureDay(date) {\r\n      const today = new Date();\r\n\r\n      return today < date;\r\n    },\r\n\r\n    /** Не дает пересекаться модальным окнам, таким образом, что они видимы при открытии, а не уходят за пределы календаря. */\r\n    setCalendarModalBoundries(options) {\r\n      if (!this.calendarEl || !this.modalEl) {\r\n        // todo: получение элементов через refs.\r\n        this.calendarEl = document.querySelector('.calendar__month-table');\r\n        this.modalEl = document.querySelector(\r\n          '.calendar__month-item-wrapper_modal'\r\n        );\r\n      }\r\n\r\n      if (!this.calendarEl || !this.modalEl) return;\r\n\r\n      if (options?.isReset) {\r\n        return (this.modalEl.style.transform = `translate(${0}px, ${0}px)`);\r\n      }\r\n\r\n      const calendarRect = this.calendarEl.getBoundingClientRect();\r\n      const modalRect = this.modalEl.getBoundingClientRect();\r\n\r\n      let translateX = 0;\r\n      let translateY = 0;\r\n\r\n      // на пересечение left\r\n      if (modalRect.left < calendarRect.left) {\r\n        translateX = calendarRect.left - modalRect.left;\r\n      }\r\n\r\n      // на пересечение top\r\n      if (modalRect.top < calendarRect.top) {\r\n        translateY = 16;\r\n      }\r\n\r\n      // на пересечение right\r\n      if (modalRect.right > calendarRect.right) {\r\n        translateX = calendarRect.right - modalRect.right;\r\n      }\r\n\r\n      // на пересечение bottom;\r\n      if (modalRect.bottom > calendarRect.bottom) {\r\n        translateY = -(modalRect.height - 165);\r\n      }\r\n\r\n      this.modalEl.style.transform = `translate(${translateX}px, ${translateY}px)`;\r\n    },\r\n  },\r\n  components: { CalendarMonthDayLotAdd, CalendarMonthDayLot },\r\n};\r\n</script>\r\n\r\n<style scoped></style>\r\n"]},"metadata":{},"sourceType":"module"}